,title,year,abstract,publisher,top_20_words
0,"Metamorphic Testing: A Review of Challenges and Opportunities,","2018,","Metamorphic testing is an approach to both test case generation and test result verification. A central element is a set of metamorphic relations, which are necessary properties of the target function or algorithm in relation to multiple inputs and their expected outputs. Since its first publication, we have witnessed a rapidly increasing body of work examining metamorphic testing from various perspectives, including metamorphic relation identification, test case generation, integration with other software engineering techniques, and the validation and evaluation of software systems. In this article, we review the current research of metamorphic testing and discuss the challenges yet to be addressed. We also present visions for further improvement of metamorphic testing and highlight opportunities for new research.,","Association for Computing Machinery,","metamorphic, relation, visions, witnessed, generation, body, element, research, central, highlight, case, publication, opportunities, examining, improvement, perspectives, rapidly, discuss, addressed, testing"
1,"Fault detection effectiveness of source test case generation strategies for metamorphic testing,","2018,","Metamorphic testing is a well known approach to tackle the oracle problem in software testing. This technique requires the use of source test cases that serve as seeds for the generation of follow-up test cases. Systematic design of test cases is crucial for the test quality. Thus, source test case generation strategy can make a big impact on the fault detection effectiveness of metamorphic testing. Most of the previous studies on metamorphic testing have used either random test data or existing test cases as source test cases. There has been limited research done on systematic source test case generation for metamorphic testing. This paper provides a comprehensive evaluation on the impact of source test case generation techniques on the fault finding effectiveness of metamorphic testing. We evaluated the effectiveness of line coverage, branch coverage, weak mutation and random test generation strategies for source test case generation. The experiments are conducted with 77 methods from 4 open source code repositories. Our results show that by systematically creating source test cases, we can significantly increase the fault finding effectiveness of metamorphic testing. Further, in this paper we introduce a simple metamorphic testing tool called ""METtester"" that we use to conduct metamorphic testing on these methods.,","Association for Computing Machinery,","source, test, generation, cases, case, testing, fault, effectiveness, metamorphic, impact, random, finding, coverage, systematic, mettester, branch, 77, methods, repositories, seeds"
2,"Contextual Understanding and Improvement of Metamorphic Testing in Scientific Software Development,","2021,","Background: Metamorphic testing emerges as a simple and effective approach for testing scientific software; yet, its adoption in actual scientific software projects is less studied.Aims: In order for the practitioners to better adopt metamorphic testing in their projects, we set out to first gain a deep understanding about the current qualify assurance workflow, testing practices, and tools.Method: We propose to integrate various empirical sources, including artifact analysis, stakeholder interviews, and gap analysis from the literature.Results: Applying our approach to the Open Water Analytics Stormwater Management Model project helped to identify four new needs requiring continued and more research: (1) systematic and explicit formulation of metamorphic relations, (2) metamorphic testing examples specific to the scientific software, (3) correlating metamorphic testing with regression testing, and (4) integrating metamorphic testing with build tools like CMake and continuous integration tools like GitHub Actions.Conclusions: Integrating different empirical sources is promising for establishing a contextual understanding of software engineering practices, and for action research, such as workflow refinements and tool interventions, to be carried out in a principled manner.,","Association for Computing Machinery,","scientific, projects, integrating, sources, tools, practices, workflow, testing, understanding, like, metamorphic, software, qualify, refinements, correlating, stormwater, interventions, stakeholder, emerges, cmake"
3,"A cloud-based framework for applying metamorphic testing to a bioinformatics pipeline,","2016,","Testing of bioinformatics software often suffers from the oracle problem, especially when testing software that analyses human genome sequencing data. Metamorphic testing has been proposed to alleviate the oracle problem. Nonetheless, smaller research or clinical centres may be challenged by the complexity and resources required to implement a suitable metamorphic testing framework in practice. This paper presents a case study on how a cloud-based metamorphic testing framework can be applied to a widely used genomic sequencing pipeline, and discusses the future of implementing large-scale on-demand automated metamorphic testing using cloud-based resources.,","Association for Computing Machinery,","sequencing, resources, cloud, testing, challenged, genomic, clinical, nonetheless, framework, genome, centres, discusses, suffers, demand, smaller, analyses, pipeline, metamorphic, implementing, suitable"
4,"Feedback-Directed Metamorphic Testing,","2023,","Over the past decade, metamorphic testing has gained rapidly increasing attention from both academia and industry, particularly thanks to its high efficacy on revealing real-life software faults in a wide variety of application domains. On the basis of a set of metamorphic relations among multiple software inputs and their expected outputs, metamorphic testing not only provides a test case generation strategy by constructing new (or follow-up) test cases from some original (or source) test cases, but also a test result verification mechanism through checking the relationship between the outputs of source and follow-up test cases. Many efforts have been made to further improve the cost-effectiveness of metamorphic testing from different perspectives. Some studies attempted to identify “good” metamorphic relations, while other studies were focused on applying effective test case generation strategies especially for source test cases. In this article, we propose improving the cost-effectiveness of metamorphic testing by leveraging the feedback information obtained in the test execution process. Consequently, we develop a new approach, namely feedback-directed metamorphic testing, which makes use of test execution information to dynamically adjust the selection of metamorphic relations and selection of source test cases. We conduct an empirical study to evaluate the proposed approach based on four laboratory programs, one GNU program, and one industry program. The empirical results show that feedback-directed metamorphic testing can use fewer test cases and take less time than the traditional metamorphic testing for detecting the same number of faults. It is clearly demonstrated that the use of feedback information about test execution does help enhance the cost-effectiveness of metamorphic testing. Our work provides a new perspective to improve the efficacy and applicability of metamorphic testing as well as many other software testing techniques.,","Association for Computing Machinery,","feedback, test, cases, metamorphic, source, cost, testing, efficacy, directed, information, execution, new, use, industry, selection, effectiveness, provides, follow, adjust, gnu"
5,"Metamorphic testing for adobe analytics data collection javascript library,","2018,","In recent years, metamorphic testing has been successfully and systematically adopted within Adobe Systems to improve the cost effectiveness of its software process. In this industry experience report, we present a case where metamorphic testing has been applied to the Data Collection JavaScript Library of Adobe Analytics. This type of software is difficult to test using traditional approaches. The application of metamorphic testing alleviated the oracle problem, and detected real-life bugs in the system under test as well as compatibility problems between the system and its environment, namely, the Internet Explorer browser. Our results further justify the adoption of metamorphic testing as a simple yet effective approach in industrial settings.,","Association for Computing Machinery,","adobe, explorer, javascript, alleviated, compatibility, browser, justify, settings, analytics, internet, metamorphic, collection, library, type, testing, adoption, environment, simple, systematically, experience"
6,"Metamorphic testing for Adobe data analytics software,","2017,","It is challenging to test data analytics software because a test oracle might not be available. This study reports our experience of applying metamorphic testing to Adobe's data analytics software that is used for anomaly detection in a set of time series data. We make use of geometric transformations to build metamorphic relations and generate simple time series data as the source test cases. The results of this study show that metamorphic testing is highly effective for both verification and validation purposes. An investigation of the issues detected during metamorphic testing revealed three bugs in the software under test.,","IEEE Press,","analytics, data, series, time, test, adobe, anomaly, geometric, software, purposes, investigation, metamorphic, study, build, revealed, simple, experience, reports, transformations, make"
7,"Generating source inputs for metamorphic testing using dynamic symbolic execution,","2016,","Metamorphic testing uses domain-specific properties about a program's intended behaviour to alleviate the oracle problem. From a given set of source test inputs, a set of follow-up test inputs are generated which have some relation to the source inputs, and their outputs are compared to outputs from the source tests, using metamorphic relations. We evaluate the use of an automated test input generation technique called dynamic symbolic execution (DSE) to generate the source test inputs for metamorphic testing. We investigate whether DSE increases source-code coverage and fault finding effectiveness of metamorphic testing compared to the use of random testing, and whether the use of metamorphic relations as a supportive technique improves the test inputs generated by DSE. Our results show that DSE improves the coverage and fault detection rate of metamorphic testing compared to random testing using significantly smaller test suites, and the use of metamorphic relations increases code coverage of both DSE and random tests considerably, but the improvement in the fault detection rate may be marginal and depends on the used metamorphic relations.,","Association for Computing Machinery,","dse, source, inputs, random, coverage, compared, use, fault, metamorphic, increases, improves, rate, test, relations, testing, code, tests, supportive, marginal, considerably"
8,"Metamorphic testing: a simple method for alleviating the test oracle problem,","2015,","The test oracle problem is regarded as one of the most challenging problems in software testing. Metamorphic testing has been developed to alleviate this problem, which is done using the relations involving relevant inputs and their outputs. This keynote speech will provide a summary of the state-of-the-art of metamorphic testing.,","IEEE Press,","keynote, regarded, summary, involving, speech, relevant, problem, problems, testing, art, developed, state, alleviate, challenging, provide, outputs, inputs, metamorphic, using, oracle"
9,"MET '22: Proceedings of the 7th International Workshop on Metamorphic Testing,","2022,","MET series has provided a good forum for discussing novel ideas, new perspectives, new applications, and the state of research, related to or inspired by Metamorphic Testing. This workshop aims to bring together researchers and practitioners in both academia and industry to discuss their research results, experiences and insights into Metamorphic Testing. In this year, we are facing the similar situation of the pandemic as the previous MET in 2020 and 2021, and hence we will run this workshop virtually again.,","Association for Computing Machinery,","workshop, met, discussing, 2020, virtually, year, pandemic, 2021, forum, new, experiences, research, run, academia, facing, bring, ideas, situation, perspectives, good"
10,"An Experimental Study on Applying Metamorphic Testing in Machine Learning Applications,","2020,","Machine learning techniques have been successfully employed in various areas and, in particular, for the development of healthcare applications, aiming to support in more effective and faster diagnostics (such as cancer diagnosis). However, machine learning models may present uncertainties and errors. Errors in the training process, classification, and evaluation can generate incorrect results and, consequently, to wrong clinical decisions, reducing the professionals' confidence in the use of such techniques. Similar to other application domains, the quality should be guaranteed to produce more reliable models capable of assisting health professionals in their daily activities. Metamorphic testing can be an interesting option to validate machine learning applications. Using this testing approach is possible to define relationships that define changes to be made in the application's input data to identify faults. This paper presents an experimental study to evaluate the effectiveness of metamorphic testing to validate machine learning applications. A Machine learning application to verify breast cancer diagnostic was developed, using an available dataset composed of 569 samples whose data were taken from breast cancer images, and used as the software under test, in which the metamorphic testing was applied. The results indicate that metamorphic testing can be an alternative to support the validation of machine learning applications.,","Association for Computing Machinery,","cancer, machine, learning, breast, professionals, applications, application, define, support, validate, errors, guaranteed, 569, option, diagnostics, assisting, clinical, faster, diagnostic, composed"
11,"A template-based approach to describing metamorphic relations,","2017,","Metamorphic testing enables the generation of test cases in the absence of an oracle by exploiting relations among different executions of the program under test, called metamorphic relations. In a recent survey, we observed a great variability in the way metamorphic relations are described, typically in an informal manner using natural language. We noticed that the lack of a standard mechanism to describe metamorphic relations often makes them hard to read and understand, which hinders the widespread adoption of the technique. In this paper, we propose a template---based approach for the description of metamorphic relations. The proposed template aims to ease communication among practitioners as well as to contribute to research dissemination. Also, it provides a helpful guide for those approaching metamorphic testing for the first time. For the validation of the approach, we used the proposed template to describe 17 previously published metamorphic relations from different domains and groups of authors, without finding expressiveness problems. We hope that this work eases the diffusion and adoption of metamorphic testing, contributing to the progress of this thriving testing technique.,","IEEE Press,","template, relations, metamorphic, adoption, informal, read, eases, ease, approaching, expressiveness, diffusion, dissemination, thriving, noticed, contributing, variability, hope, hinders, proposed, technique"
12,"Metamorphic testing of driverless cars,","2019,","Metamorphic testing can test untestable software, detecting fatal errors in autonomous vehicles' onboard computer systems.,","Association for Computing Machinery,","onboard, untestable, fatal, vehicles, computer, detecting, errors, autonomous, systems, software, test, metamorphic, testing, patches, patented, paths, patch, past, password, passing"
13,"Assessing robustness of ML-based program analysis tools using metamorphic program transformations,","2022,","Metamorphic testing is a well-established testing technique that has been successfully applied in various domains, including testing deep learning models to assess their robustness against data noise or malicious input. Currently, metamorphic testing approaches for machine learning (ML) models focused on image processing and object recognition tasks. Hence, these approaches cannot be applied to ML targeting program analysis tasks. In this paper, we extend metamorphic testing approaches for ML models targeting software programs. We present Lampion, a novel testing framework that applies (semantics preserving) meta-morphic transformations on the test datasets. Lampion produces new code snippets equivalent to the original test set but different in their identifiers or syntactic structure. We evaluate Lampion against CodeBERT, a state-of-the-art ML model for Code-To-Text tasks that creates Javadoc summaries for given Java methods. Our results show that simple transformations significantly impact the target model behavior, providing additional information on the models reasoning apart from the classic performance metric.,","IEEE Press,","lampion, ml, tasks, models, targeting, approaches, transformations, testing, code, identifiers, snippets, javadoc, codebert, syntactic, summaries, apart, classic, creates, morphic, applied"
14,"A Dynamic Identification Method of Metamorphic Relation Based on Separation of Input Pattern and Output Pattern,","2022,","Due to the high cost and extended period of the benchmark development, there are few verification examples for verifying nuclear power independence software. This case is named the test oracle problem. As a result, it is a challenge to adequate verification. Because metamorphic testing is no need to construct verification examples, it is critical to alleviating the above problem. Some domestic independent nuclear design software has successfully applied metamorphic testing in the verification activities. Since Oracle problem has become a common challenge in software verification in nuclear power field, metamorphic testing has broad application prospects. Aiming at great arbitrariness and low efficiency of existing methods, we introduce a dynamic identification method based on the separation of input and output patterns. In this paper, this method is applied to the burnup program (namely NUIT) to determine a set of metamorphic relations between burnup depth and nuclide density. Other burnup programs can directly apply them and learn from this example. And this method can be extended and used in the different professional nuclear fields, such as reactor physics, thermal hydraulics, source term, and radiation shielding.,","Association for Computing Machinery,","nuclear, burnup, verification, power, examples, extended, method, challenge, shielding, domestic, arbitrariness, independence, prospects, reactor, thermal, radiation, hydraulics, period, problem, nuit"
15,"Testing web enabled simulation at scale using metamorphic testing,","2021,","We report on Facebook's deployment of MIA (Metamorphic Interaction Automaton). MIA is used to test Facebook's Web Enabled Simulation, built on a web infrastructure of hundreds of millions of lines of code. MIA tackles the twin problems of test flakiness and the unknowable oracle problem. It uses metamorphic testing to automate continuous integration and regression test execution. MIA also plays the role of a test bot, automatically commenting on all relevant changes submitted for code review. It currently uses a suite of over 40 metamorphic test cases. Even at this extreme scale, a non-trivial metamorphic test suite subset yields outcomes within 20 minutes (sufficient for continuous integration and review processes). Furthermore, our offline mode simulation reduces test flakiness from approximately 50% (of all online tests) to 0% (offline). Metamorphic testing has been widely-studied for 22 years. This paper is the first reported deployment into an industrial continuous integration system.,","IEEE Press,","mia, continuous, flakiness, offline, integration, deployment, facebook, test, suite, web, review, simulation, uses, code, automaton, minutes, unknowable, bot, twin, mode"
16,"Metamorphic testing of a Monte Carlo modeling program,","2011,","Photon propagation in biological tissue can be equivalently modeled with Monte Carlo simulations numerically or by the Radiative Transfer Equation (RTE) analytically. However, testing of a Monte Carlo program modeling photon propagation in biological tissue is difficult due to the unknown character of the test oracles. Although approaches based on Beer-Lambert law, van de Hulst's table or RTE can be used for testing the Monte Carlo modeling program, these approaches are only applied to the program that is designed for homogeneous media. A rigorous way for testing the Monte Carlo modeling program for heterogeneous media is needed. In this paper, we investigate the effectiveness of the metamorphic testing approach to test a Monte Carlo modeling program for heterogeneous media. In addition, the metamorphic testing is extended with the evaluation of the adequacy of testing coverage criteria to measure the quality of the metamorphic testing, to guide the creation of metamorphic relations, to generate testing inputs, and to investigate the found exceptions. The effectiveness of the approach has been demonstrated through testing a Monte Carlo modeling program we developed for simulating photon propagation in human skins.,","Association for Computing Machinery,","monte, carlo, modeling, photon, propagation, program, media, rte, tissue, biological, heterogeneous, testing, investigate, hulst, van, table, radiative, analytically, beer, skins"
17,"Automatic system testing of programs without test oracles,","2009,","Metamorphic testing has been shown to be a simple yet effective technique in addressing the quality assurance of applications that do not have test oracles, i.e., for which it is difficult or impossible to know what the correct output should be for arbitrary input. In metamorphic testing, existing test case input is modified to produce new test cases in such a manner that, when given the new input, the application should produce an output that can easily be computed based on the original output. That is, if input x produces output f(x), then we create input x' such that we can predict f(x') based on f(x); if the application does not produce the expected output, then a defect must exist, and either f(x), or f(x') (or both) is wrong.In practice, however, metamorphic testing can be a manually intensive technique for all but the simplest cases. The transformation of input data can be laborious for large data sets, or practically impossible for input that is not in human-readable format. Similarly, comparing the outputs can be error-prone for large result sets, especially when slight variations in the results are not actually indicative of errors (i.e., are false positives), for instance when there is non-determinism in the application and multiple outputs can be considered correct.In this paper, we present an approach called Automated Metamorphic System Testing. This involves the automation of metamorphic testing at the system level by checking that the metamorphic properties of the entire application hold after its execution. The tester is able to easily set up and conduct metamorphic tests with little manual intervention, and testing can continue in the field with minimal impact on the user. Additionally, we present an approach called Heuristic Metamorphic Testing which seeks to reduce false positives and address some cases of non-determinism. We also describe an implementation framework called Amsterdam, and present the results of empirical studies in which we demonstrate the effectiveness of the technique on real-world programs without test oracles.,","Association for Computing Machinery,","input, output, produce, application, determinism, positives, metamorphic, called, easily, impossible, false, sets, present, testing, technique, cases, non, correct, readable, amsterdam"
18,"Workshop Summary: 2019 IEEE / ACM Fourth International Workshop on Metamorphic Testing (MET 2019),","2020,","MET is a relatively new workshop on metamorphic testing for academic researchers and industry practitioners. The first international workshop on MET (MET 2016) was co-located with the 38th International Conference on Software Engineering (ICSE 2016) in Austin TX, USA on May 16, 2016. Since then the workshop has become an annual event. This paper reports on the fourth International Workshop on Metamorphic Testing (MET 2019) held in Montr\'eal, Canada on May 26, 2019, as part of the 41st International Conference on Software Engineering (ICSE 2019). We first outline the aims of the workshop, followed by a discussion of its keynote speech and technical program.,","Association for Computing Machinery,","workshop, international, met, 2016, 2019, icse, conference, engineering, 38th, tx, located, 26, montr, austin, followed, canada, eal, 41st, annual, outline"
19,"A Testing Tool for Machine Learning Applications,","2020,","We present the design of MTKeras, a generic metamorphic testing framework for machine learning, and demonstrate its effectiveness through case studies in image classification and sentiment analysis.,","Association for Computing Machinery,","mtkeras, sentiment, generic, classification, demonstrate, design, image, studies, present, framework, analysis, machine, case, learning, effectiveness, metamorphic, testing, pathsets, patients, paths"
20,"New ideas: automated engineering of metamorphic testing environments for domain-specific languages,","2021,","Two crucial aspects for the trustworthy utilization of domain-specific languages (DSLs) are their semantic correctness, and proper testing support for their users. Testing is frequently used to verify correctness, but is often done informally -- which may yield unreliable results -- and requires substantial effort for creating suitable test cases and oracles.  To alleviate this situation, we propose an automated technique for building metamorphic testing environments for DSLs. Metamorphic testing identifies expected relationships between the outputs of two consecutive tests, reducing the effort in specifying oracles and creating test cases manually. This new ideas paper presents the overarching concepts, the architecture and a prototype implementation. We illustrate our proposal using a DSL to model and simulate data centres.,","Association for Computing Machinery,","dsls, creating, effort, dsl, trustworthy, overarching, informally, oracles, correctness, prototype, specifying, unreliable, substantial, frequently, yield, centres, proper, identifies, consecutive, building"
21,"Workshop Summary: 7th International Workshop on Metamorphic Testing (MET 2022),","2022,","This report summarises the organisation and execution of MET 2022, the 7th International Workshop on Metamorphic Testing, which took place as a virtual event in conjunction with the ICSE 2022 conference.,","Association for Computing Machinery,","2022, organisation, 7th, summarises, took, icse, conference, conjunction, international, workshop, place, event, met, virtual, report, execution, metamorphic, testing, patients, party"
22,"Performance metamorphic testing: motivation and challenges,","2017,","Performance testing is a challenging task mainly due to the lack of test oracles, that is, mechanisms to decide whether the performance of a program under a certain workload is either acceptable or poor due to a performance bug. Metamorphic testing enables the generation of test cases in the absence of an oracle by exploiting the relations (so-called metamorphic relations) between the inputs and outputs of multiple executions of the program under test. In the last two decades, metamorphic testing has been successfully used to detect functional faults in a variety of domains, ranging from web services to simulators. However, the applicability of metamorphic testing to detect performance bugs is a topic that remains unexplored. In this vision paper, we introduce Performance Metamorphic Relations (PMRs) as expected relations between the performance measurements of multiple executions of the program under test. We hypothesize that these relations can be turned into assertions for the automated detection of performance bugs removing the need for complex benchmarks and domain experts guidance. As a further benefit, PMRs can be turned into fitness functions to guide search-based techniques on the generation of test data that violate the relations, revealing bugs. This novel idea is motivated with examples and an overview of some of the challenges in this promising topic.,","IEEE Press,","performance, pmrs, turned, relations, topic, bugs, program, executions, test, violate, hypothesize, measurements, multiple, metamorphic, unexplored, removing, generation, simulators, acceptable, assertions"
23,"Validating communication network configurations in cloud and HPC systems using Metamorphic Testing,","2022,","During the last years, the fast evolution of computers and networks has led to the creation of a wide variety of services that have changed the way we live, like video streaming, online gaming and online shopping. These services are supported by complex systems, which require not only high computational power but high-speed and low-latency networks to fulfil the expected quality requirements. However, a misleading configuration in one of the thousand components that compose these systems may cause performance bottlenecks and functioning disruptions. Unfortunately, conventional testing methods are not adequate for checking these systems since, on many occasions, there is no mechanism to determine if the behaviour of a system is the expected one. Fortunately, Metamorphic Testing is a valuable and promising testing technique that alleviates the two fundamental problems of testing: the oracle problem and the reliable test set problem. In this paper, we combine Metamorphic Testing and simulation techniques for validating communication network configurations in HPC systems. For this, we rely on a catalogue of Metamorphic Relations, based on network communications knowledge, for checking their correctness. In addition, we have conducted an experimental study for analysing the communication networks of HPC systems. The results show that Metamorphic Testing is appropriate for checking the correctness of communication networks supported by complex topologies in HPC systems.,","Association for Computing Machinery,","hpc, networks, communication, systems, checking, supported, online, services, network, testing, occasions, compose, thousand, topologies, fortunately, bottlenecks, live, functioning, shopping, latency"
24,"Using semi-supervised learning for predicting metamorphic relations,","2018,","Software testing is difficult to automate, especially in programs which have no oracle, or method of determining which output is correct. Metamorphic testing is a solution this problem. Metamorphic testing uses metamorphic relations to define test cases and expected outputs. A large amount of time is needed for a domain expert to determine which metamorphic relations can be used to test a given program. Metamorphic relation prediction removes this need for such an expert. We propose a method using semi-supervised machine learning to detect which metamorphic relations are applicable to a given code base. We compare this semi-supervised model with a supervised model, and show that the addition of unlabeled data improves the classification accuracy of the MR prediction model.,","Association for Computing Machinery,","supervised, semi, expert, prediction, model, metamorphic, given, removes, relations, unlabeled, base, method, needed, automate, improves, determining, applicable, define, compare, especially"
25,"Interactive metamorphic testing of debuggers,","2019,","When improving their code, developers often turn to interactive debuggers. The correctness of these tools is crucial, because bugs in the debugger itself may mislead a developer, e.g., to believe that executed code is never reached or that a variable has another value than in the actual execution. Yet, debuggers are difficult to test because their input consists of both source code and a sequence of debugging actions, such as setting breakpoints or stepping through code. This paper presents the first metamorphic testing approach for debuggers. The key idea is to transform both the debugged code and the debugging actions in such a way that the behavior of the original and the transformed inputs should differ only in specific ways. For example, adding a breakpoint should not change the control flow of the debugged program. To support the interactive nature of debuggers, we introduce interactive metamorphic testing. It differs from traditional metamorphic testing by determining the input transformation and the expected behavioral change it causes while the program under test is running. Our evaluation applies the approach to the widely used debugger in the Chromium browser, where it finds eight previously unknown bugs with a true positive rate of 51%. All bugs have been confirmed by the developers, and one bug has even been marked as release-blocking.,","Association for Computing Machinery,","debuggers, interactive, code, debugger, debugged, actions, debugging, bugs, change, developers, stepping, blocking, breakpoints, differs, mislead, chromium, breakpoint, behavioral, variable, release"
26,"Agile metamorphic model-based testing,","2016,","Testing becomes difficult when we cannot easily determine whether the system delivers the correct result or not. To address this issue, we have developed a framework for automated testing of NASA's DAT system using metamorphic testing principles combined with model based testing. Based on the results from using the framework to test DAT we have determined that this is a cost beneficial solution allowing for comprehensive testing that detects defects without having to develop complex testing infrastructure to determine the oracle. In our approach, DAT queries are automatically generated from a set of metamorphic testing models where each model encodes one or more of the identified equivalences. In addition, we use a scheme for generating time stamps that we use to automatically create time pairs that add another equivalence dimension.,","Association for Computing Machinery,","dat, testing, determine, time, stamps, dimension, equivalences, add, scheme, automatically, framework, encodes, delivers, nasa, beneficial, use, model, determined, allowing, infrastructure"
27,"ARCAMETES: A Learning Approach for Metamorphic Exploration and Testing,","2020,","In its simplest form, software testing consists of creating test cases from a defined input space, running them in the system-under-test (SUT), and evaluating the outputs with a mechanism for determining success or failure (i.e. an oracle). Metamorphic testing (MT) provides powerful concepts for alleviating the problem of a lack of oracles. To increase the adoption of MT among industry practitioners, approaches and tools that lower the effort to identify potential metamorphic relations (MRs) are very much in demand. As such, we propose a learning-based approach to MR discovery and exploration using concepts of metamorphic testing, association rule learning, and combinatorial testing. The results have implications for numerous applications including software testing and program comprehension, among others. These implications set a strong foundation for a future, extensible metamorphic exploration framework.,","Association for Computing Machinery,","implications, concepts, exploration, simplest, combinatorial, association, extensible, discovery, testing, comprehension, foundation, rule, lower, running, strong, demand, mt, powerful, learning, consists"
28,"An application of metamorphic testing for testing scientific software,","2016,","One of the grand challenges for adequately testing scientific software is due to the oracle problem. Metamorphic testing is the promise technique for addressing the problem through checking the satisfaction of a metamorphic relation that defines the correlation on the relation of paired test inputs and the one of their corresponding outputs. Therefore, checking the correctness of an individual test is replaced by checking the satisfaction of the metamorphic relation among a group of tests. However, the quality of the testing is highly depended on the identification of metamorphic relations. In this paper, we use an iterative approach for the development and refinement of metamorphic relations during testing process through testing an open source discrete dipole approximation program called ADDA. Through studying ADDA program, we discuss the experience and challenges of metamorphic testing for testing scientific software.,","Association for Computing Machinery,","adda, checking, satisfaction, relation, scientific, testing, metamorphic, depended, dipole, promise, refinement, challenges, correlation, approximation, paired, replaced, grand, studying, discrete, adequately"
29,"Experiences of testing bioinformatics programs for detecting subtle faults,","2016,","One of the biggest challenges for conducting automated systematic testing on scientific programs is the oracle problem. This challenge is especially prevalent in the field of bioinformatics due to the inherent complexity of these programs. In this paper, we explore two approaches: pseudo-oracles and metamorphic testing for conducting automated systematic testing of bioinformatics programs. We use BBMap: an open source genome alignment tool as the system under test to evaluate the effectiveness of the above two approaches for identifying subtle faults.Our results show that the pseudo-oracle testing does not provide a consistent basis for fault-detection. This is mainly due to not having a consistent rate of agreement between the outputs of the system under test and the pseudo-oracle. On the other hand, metamorphic testing detects a majority of subtle faults, suggesting that it is more effective in identifying these types of faults.,","Association for Computing Machinery,","pseudo, subtle, consistent, faults, conducting, bioinformatics, programs, identifying, systematic, agreement, approaches, bbmap, biggest, automated, oracle, alignment, suggesting, genome, testing, basis"
30,"Composite metamorphic relations for integration testing,","2022,","Metamorphic testing is a testing method for problems without test oracles. Integration testing allows for detecting errors in complex systems that may not be found during the testing of their components. In this paper, we propose a novel approach that applies metamorphic testing in integration testing. The main idea is to develop a composite metamorphic relation for the system represented as an acyclic graph. This relation is a logical function of metamorphic relations for the parts of the system (vertices of the graph). It takes into account the features of the parts. Also, it can simplify the search for failure by identifying the subsystem with error. In this paper’s theoretical part, we describe an algorithm of relation design. Then, we apply our method to a bioinformatics system for comparative genetic analysis of tissues using production tools. This experiment proves our method can be applied to real-life pipelines and find errors in them.,","Association for Computing Machinery,","parts, relation, graph, integration, method, errors, testing, vertices, logical, acyclic, pipelines, tissues, comparative, subsystem, simplify, represented, proves, takes, composite, genetic"
31,"Metamorphic relations for data validation: a case study of translated text messages,","2019,","In conventional metamorphic testing, metamorphic relations (MRs) are identified as necessary properties of a computer program's intended functionality, whereby violations of MRs reveal faults in the program---under the assumption that the source and follow-up inputs (test cases used in metamorphic testing) are valid. In the present study, the authors argue that MRs can also be used to validate and assess the quality of the program's input data---under the assumption that the source or follow-up inputs can be inappropriately generated. Using this new perspective, a case study in the natural language processing domain is used to explore the different types of text messages that are difficult to interpret by (Chinese-English) machine translation. A total of 46,180 short user comments on Personal Tailor (a 2013 Chinese film), collected from Douban (a popular Chinese social media platform), has been used as the primary dataset of this study, and the analysis of results demonstrates that the proposed MR-based data validation method is useful for the automatic identification of poorly translated text messages.,","IEEE Press,","chinese, messages, assumption, text, mrs, used, program, study, follow, inappropriately, 180, comments, film, 2013, douban, tailor, 46, poorly, source, valid"
32,"MRpredT: Using Text Mining for Metamorphic Relation Prediction,","2020,","Metamorphic relations (MRs) are an essential component of metamorphic testing (MT) that highly affects its fault detection effectiveness. MRs are usually identified with the help of a domain expert, which is a labor-intensive task. In this work, we explore the feasibility of a text classification-based machine learning approach to predict MRs using their program documentation as the sole input. We compare our method to our previously developed graph kernelbased machine learning approach and demonstrate that textual features extracted from program documentation are highly effective for predicting metamorphic relations for matrix calculation programs.,","Association for Computing Machinery,","documentation, mrs, highly, sole, kernelbased, affects, labor, textual, matrix, machine, program, predicting, learning, expert, calculation, intensive, feasibility, extracted, component, predict"
33,"μMT: a data mutation directed metamorphic relation acquisition methodology,","2016,","When figuring out the expected output for each test case is difficult, metamorphic testing can be applied to alleviate such situations. An involved key challenge is to derive metamorphic relations for the program under test. This paper proposes a datamutation directed metamorphic relation acquisition methodology called μMT. Experimental results on three case studies show that μMT is feasible in deriving metamorphic relations for numeric applications and the derived metamorphic relations show reasonable fault detection effectiveness.,","Association for Computing Machinery,","μmt, datamutation, figuring, metamorphic, numeric, acquisition, reasonable, directed, relations, deriving, involved, case, derive, feasible, derived, situations, proposes, methodology, key, challenge"
34,"Search-based inference of polynomial metamorphic relations,","2014,","Metamorphic testing (MT) is an effective methodology for testing those so-called ``non-testable'' programs (e.g., scientific programs), where it is sometimes very difficult for testers to know whether the outputs are correct. In metamorphic testing, metamorphic relations (MRs) (which specify how particular changes to the input of the program under test would change the output) play an essential role. However, testers may typically have to obtain MRs manually.In this paper, we propose a search-based approach to automatic inference of polynomial MRs for a program under test. In particular, we use a set of parameters to represent a particular class of MRs, which we refer to as polynomial MRs, and turn the problem of inferring MRs into a problem of searching for suitable values of the parameters. We then dynamically analyze multiple executions of the program, and use particle swarm optimization to solve the search problem. To improve the quality of inferred MRs, we further use MR filtering to remove some inferred MRs.We also conducted three empirical studies to evaluate our approach using four scientific libraries (including 189 scientific functions). From our empirical results, our approach is able to infer many high-quality MRs in acceptable time (i.e., from 9.87 seconds to 1231.16 seconds), which are effective in detecting faults with no false detection.,","Association for Computing Machinery,","mrs, polynomial, scientific, seconds, inferred, particular, parameters, testers, use, program, search, particle, 1231, empirical, 189, swarm, problem, programs, refer, 87"
35,"Addressing data quality problems with metamorphic data relations,","2019,","In the era of big data, cloud computing and the Internet of Things, the quality of data has tremendous impact on our everyday life. Moreover, the increasing velocity, volume and variety of data requires new approaches for quality assessment. In this paper, a new approach for quality assessment is presented that applies metamorphic testing to data quality. The exemplary application of the approach on a big data application shows promising results for the suitability of the approach.,","IEEE Press,","data, quality, assessment, big, exemplary, era, velocity, everyday, approach, things, application, new, suitability, tremendous, internet, volume, applies, computing, presented, impact"
36,"Automated Metamorphic Testing using Transitive Relations for Specializing Stance Detection Models,","2023,","In machine-learning-based natural language processing, methods with high accuracy have been proposed for stance detection tasks. However, when they are applied to specific domains, they are often inaccurate due to domain-specific expressions. We propose an automated metamorphic testing method using transitive relations for creating training data that specializes stance detection in a specific domain. By specializing IBM Debater's stance detection in currency exchange domain, we confirmed our proposed method can improve the accuracy of judging the currency exchange-related sentences.,","IEEE Press,","stance, currency, exchange, specific, domain, detection, accuracy, specializes, transitive, debater, specializing, inaccurate, ibm, judging, expressions, proposed, method, sentences, creating, confirmed"
37,"Automated testing of graphics shader compilers,","2017,","We present an automated technique for finding defects in compilers for graphics shading languages. key challenge in compiler testing is the lack of an oracle that classifies an output as correct or incorrect; this is particularly pertinent in graphics shader compilers where the output is a rendered image that is typically under-specified. Our method builds on recent successful techniques for compiler validation based on metamorphic testing, and leverages existing high-value graphics shaders to create sets of transformed shaders that should be semantically equivalent. Rendering mismatches are then indicative of shader compilation bugs. Deviant shaders are automatically minimized to identify, in each case, a minimal change to an original high-value shader that induces a shader compiler bug. We have implemented the approach as a tool, GLFuzz, targeting the OpenGL shading language, GLSL. Our experiments over a set of 17 GPU and driver configurations, spanning the main 7 GPU designers, have led to us finding and reporting more than 60 distinct bugs, covering all tested configurations. As well as defective rendering, these issues identify security-critical vulnerabilities that affect WebGL, including a significant remote information leak security bug where a malicious web page can capture the contents of other browser tabs, and a bug whereby visiting a malicious web page can lead to a ``blue screen of death'' under Windows 10. Our findings show that shader compiler defects are prevalent, and that metamorphic testing provides an effective means for detecting them automatically.,","Association for Computing Machinery,","shader, compiler, shaders, graphics, shading, bug, gpu, page, rendering, malicious, configurations, value, compilers, defects, security, web, finding, windows, glsl, blue"
38,"Simulation validation using metamorphic testing (WIP),","2015,","Model validation is an inherently difficult task, as we often lack an oracle that defines correct behavior. Without an oracle it is difficult to apply results validation to determine if the model matches the system being studied. Although there are other techniques that do not require an oracle, they are not considered to be as powerful as results validation. In this paper we describe a new validation technique called ""metamorphic testing"" that creates pseudo-oracles to combat this problem. This technique is based on the software verification technique of the same name, which we extend to apply to validating simulation models.,","Society for Computer Simulation International,","validation, technique, apply, combat, inherently, difficult, oracle, pseudo, creates, matches, defines, model, powerful, extend, require, studied, considered, validating, simulation, lack"
39,"Looking for an MR? try METWiki today,","2016,","Metamorphic Testing (MT) has been demonstrated to successfully alleviate oracle problems in many areas, including machine learning, compilers, bioinformatics, etc. However, given a new MT task, it is still very challenging to identify enough Metamorphic Relations (MRs) which are key components of MT. Aiming at this problem, we revisited previous MT applications and realized that they could form a very valuable database. Currently there is a lack of efficient link to get testers access these historical data. Therefore, in this paper, we propose to build METWiki, an MR repository, for collection and retrieval of these MRs. By providing exploration and search facilities, testers can find their desired MRs for reuse, reference, or inference. We also illustrate three sample usages of METWiki, which show important illuminations on how MRs can be obtained in practice.,","Association for Computing Machinery,","metwiki, mrs, mt, testers, usages, link, illuminations, historical, desired, facilities, realized, revisited, reuse, illustrate, retrieval, aiming, repository, sample, valuable, access"
40,"Finding metamorphic relations for scientific software,","2021,","Metamorphic testing uncovers defects by checking whether a relation holds among multiple software executions. These relations are known as metamorphic relations (MRs). For scientific software operating in a large multi-parameter input space, identifying MRs that determine the simultaneous changes among multiple variables is challenging. In this poster, we propose a fully automatic approach to classifying input and output variables from scientific software's user manual, mining these variables' associations from the user forum to generate MRs, and validating the MRs with existing regression tests. Preliminary results of our end-to-end MR support for the Storm Water Management Model (SWMM) are reported.,","IEEE Press,","variables, mrs, end, scientific, user, holds, associations, simultaneous, poster, multiple, forum, swmm, storm, parameter, classifying, operating, water, uncovers, input, software"
41,"Enhancing supervised classifications with metamorphic relations,","2018,","We report on a novel use of metamorphic relations (MRs) in machine learning: instead of conducting metamorphic testing, we use MRs for the augmentation of the machine learning algorithms themselves. In particular, we report on how MRs can enable enhancements to an image classification problem of images containing hidden visual markers (""Artcodes"").Working on an original classifier, and using the characteristics of two different categories of images, two MRs, based on separation and occlusion, were used to improve the performance of the classifier. Our experimental results show that the MR-augmented classifier achieves better performance than the original classifier, algorithms, and extending the use of MRs beyond the context of software testing.,","Association for Computing Machinery,","classifier, mrs, report, use, original, images, algorithms, enhancements, artcodes, augmentation, occlusion, markers, separation, enable, performance, extending, hidden, machine, working, augmented"
42,"SMRL: a metamorphic security testing tool for web systems,","2020,","We present a metamorphic testing tool that alleviates the oracle problem in security testing. The tool enables engineers to specify metamorphic relations that capture security properties of Web systems. It automatically tests Web systems to detect vulnerabilities based on those relations. We provide a domain-specific language accompanied by an Eclipse editor to facilitate the specification of metamorphic relations. The tool automatically collects the input data and transforms the metamorphic relations into executable Java code in order to automatically perform security testing based on the collected data. The tool has been successfully evaluated on a commercial system and a leading open source system (Jenkins). Demo video: https://youtu.be/9kx6u9LsGxs.,","Association for Computing Machinery,","tool, security, automatically, web, relations, accompanied, collects, youtu, 9kx6u9lsgxs, transforms, jenkins, https, eclipse, demo, editor, executable, vulnerabilities, java, capture, video"
43,"Metamorphic testing of Datalog engines,","2021,","Datalog is a popular query language with applications in several domains. Like any complex piece of software, Datalog engines may contain bugs. The most critical ones manifest as incorrect results when evaluating queries—we refer to these as query bugs. Given the wide applicability of the language, query bugs may have detrimental consequences, for instance, by compromising the soundness of a program analysis that is implemented and formalized in Datalog. In this paper, we present the first metamorphic-testing approach for detecting query bugs in Datalog engines. We ran our tool on three mature engines and found 13 previously unknown query bugs, some of which are deep and revealed critical semantic issues.,","Association for Computing Machinery,","datalog, query, bugs, engines, language, formalized, ran, critical, compromising, piece, refer, soundness, manifest, detrimental, mature, ones, 13, consequences, semantic, contain"
44,"MD-ART: a test case generation method without test oracle problem,","2016,","Adaptive random testing (ART), as an improved random testing method, preserves the advantages of traditional random test method and overcomes the blindness of traditional random testing method. But it is usually not easy to validate the correctness of the output, except for some special test cases. In other words, the test oracle problem is unresolved. In this research, we introduced metamorphic testing (MT) and metamorphic distance into ART, which is called metamorphic distance based ART (MD-ART) to provide the test oracle. The results of primary experiment results show that MD-ART performs better than traditional MT and ART not only in test effectiveness but also in test efficiency and test coverage.,","Association for Computing Machinery,","art, random, md, traditional, test, distance, method, overcomes, preserves, blindness, unresolved, advantages, special, easy, adaptive, mt, performs, primary, words, introduced"
45,"Dependency-Aware Metamorphic Testing of Datalog Engines,","2023,","Datalog is a declarative query language with wide applicability,","Association for Computing Machinery,","datalog, declarative, query, wide, applicability, language, pattern, patients, pathsets, paths, path, patented, patches, patch, past, patterns, passing, passes, passed, pass"
47,"Metamorphic testing in bioinformatics software: a case study on metagenomic assembly,","2023,","MetaCompass is a metagenomic assembly tool developed by the Pop Lab at the University of Maryland, College Park [2]. Such tools are vital for studying the DNA of the variety of microorganisms present in mixed environmental samples, but they can be difficult to test due to the infeasibility of assessing the correctness of the output of a given test case. In this paper, we demonstrate a simple metamorphic test that detects inconsistencies in the popular assembly tools MEGAHIT [7] and Pilon [11], upon which MetaCompass relies. These inconsistencies were not detected during the development process by standard testing procedures, despite the fact that they may be introducing undesirable noise into MetaCompass's results. Our results suggest that metamorphic testing is a valuable tool for finding otherwise subtle defects in metagenomic assembly software.,","Association for Computing Machinery,","game, participate, derivation, mt, useful, mrs, users, exhibiting, advices, falls, hunter, reluctant, intuitively, conjectured, familiar, puzzle, feedbacks, interactive, attracting, complexities"
48,"M.R. Hunter: Hunting for Metamorphic Relations by Puzzle Solving,","2020,","Metamorphic testing (MT) is getting increasingly popular by exhibiting test effectiveness for a wide range of subjects, from compilers to machine learning programs. However, the central part of MT, i.e., the derivation of useful metamorphic relations (MRs), still falls behind MT's rapid applications. In this paper, we propose M.R. Hunter, an interactive online game for attracting users, especially those who are not familiar with, or even reluctant to, learning intrinsic complexities behind MT, to participate into the MR derivation process in a puzzle-solving way. The game design carefully considers how to guide users to participate actively, how to present conjectured MRs intuitively, and how to validate MRs effectively. So far, we have built and deployed a preliminary version of the game, and received active feedbacks, suggesting both promising results and useful advices for future improvement.,","Association for Computing Machinery,","predict, calculations, kernel, matrix, calculation, programs, relations, graph, applications, approach, metamorphic, matrices, labor, passed, machine, involved, performing, represent, learning, failed"
49,"Predicting metamorphic relations for matrix calculation programs,","2018,","Matrices often represent important information in scientific applications and are involved in performing complex calculations. But systematically testing these applications is hard due to the oracle problem. Metamorphic testing is an effective approach to test such applications because it uses metamorphic relations to determine whether test cases have passed or failed. Metamorphic relations are typically identified with the help of a domain expert and is a labor intensive task. In this work we use a graph kernel based machine learning approach to predict metamorphic relations for matrix calculation programs. Previously, this graph kernel based machine learning approach was used to successfully predict metamorphic relations for programs that perform numerical calculations. Results of this study show that this approach can be used to predict metamorphic relations for matrix calculation programs as well.,","Association for Computing Machinery,","mirages, visual, chart, stage, specification, data, failures, charts, dirty, deceptive, encoding, invert, silently, surfacing, undermine, arise, closer, backing, purported, analyst"
50,"Surfacing Visualization Mirages,","2020,","Dirty data and deceptive design practices can undermine, invert, or invalidate the purported messages of charts and graphs. These failures can arise silently: a conclusion derived from a particular visualization may look plausible unless the analyst looks closer and discovers an issue with the backing data, visual specification, or their own assumptions. We term such silent but significant failures . We describe a conceptual model of mirages and show how they can be generated at every stage of the visual analytics process. We adapt a methodology from software testing, , as a way of automatically surfacing potential mirages at the visual encoding stage of analysis through modifications to the underlying data and chart specification. We show that metamorphic testing can reliably identify mirages across a variety of chart types with relatively little prior knowledge of the data or the domain.,","Association for Computing Machinery,","dl, composite, cost, oracles, reduce, metamorphic, systems, effectiveness, relations, composition, mission, mixed, empirically, answers, rigorous, paramount, needs, measuring, allow, presence"
51,"On the cost-effectiveness of composite metamorphic relations for testing deep learning systems,","2023,","Deep Learning (DL) components are increasing their presence in mission and safety-critical systems, such as autonomous vehicles. The verification process of such systems needs to be rigorous, for which automated solutions are paramount. To allow test automation, test oracles are necessary. In the context of DL systems, metamorphic test oracles have found to be effective. However, such oracles require the execution of multiple tests, which makes testing more expensive. Metamorphic relation composition can reduce the cost of metamorphic testing. However, its effectiveness has found mixed answers. This paper reports the preliminary results of our study on measuring the cost-effectiveness of composite metamorphic relations for testing DL systems. To this end, we empirically evaluate the cost-effectiveness of composite metamorphic relations within a DL model for object classification. Our results suggest that composite metamorphic relations reduce the failure revealing capability when compared to their component metamorphic relations.,","Association for Computing Machinery,","cps, gassertmrs, cyber, publication, presented, physical, mrs, industrial, esec, summarizes, gp, fse, 2021, baselines, involvement, outperforming, candidate, genetic, relations, leveraging"
52,"Evolutionary generation of metamorphic relations for cyber-physical systems,","2022,","A problem when testing Cyber-Physical Systems (CPS) is the difficulty of determining whether a particular system output or behaviour is correct or not. Metamorphic testing alleviates such a problem by reasoning on the relations expected to hold among multiple executions of the system under test, which are known as Metamorphic Relations (MRs). However, the development of effective MRs is often challenging and requires the involvement of domain experts. This paper summarizes our recent publication: ""Generating Metamorphic Relations for Cyber-Physical Systems with Genetic Programming: An Industrial Case Study"", presented at ESEC/FSE 2021. In that publication we presented GAssertMRs, the first technique to automatically generate MRs for CPS, leveraging GP to explore the space of candidate solutions. We evaluated GAssertMRs in an industrial case study, outperforming other baselines.,","Association for Computing Machinery,","tolerance, fault, failure, strategies, oracle, apply, execution, supports, assumes, incorporating, complete, detection, internal, fail, existence, parts, extremely, needed, prior, instance"
53,"Metamorphic fault tolerance: an automated and systematic methodology for fault tolerance in the absence of test oracle,","2014,","A system may fail due to an internal bug or a fault in its execution environment. Incorporating fault tolerance strategies enables such system to complete its function despite the failure of some of its parts. Prior to the execution of some fault tolerance strategies, failure detection is needed. Detecting incorrect output, for instance, assumes the existence of an oracle to check the correctness of program outputs given an input. However, in many practical situations, oracle does not exist or is extremely difficult to apply. Such an oracle problem is a major challenge in the context of software testing. In this paper, we propose to apply metamorphic testing, a software testing method that alleviates the oracle problem, into fault tolerance. The proposed technique supports failure detection without the need of oracles.,","Association for Computing Machinery,","tc, mrs, scientist, epa, flat, hierarchy, incrementally, tcs, unavailable, shall, handle, routinely, assure, meet, swmm, storm, specifying, intended, water, illustrate"
54,"Hierarchical metamorphic relations for testing scientific software,","2018,","Scientist developers have not yet routinely adopted systematic testing techniques to assure software quality. A key challenge is the oracle problem, a situation in which appropriate mechanisms are unavailable for checking if the code produces the expected output when executed using a set of test cases (TCs). Metamorphic testing alleviates the oracle problem by specifying the relationship that a source TC and its follow-up TC shall meet. Such relationships are called metamorphic relations (MRs) which are necessary properties of the intended program's functionality. Existing approaches handle the MRs in a flat manner. This paper introduces a novel way to facilitate a hierarchy of MRs to be developed incrementally. We illustrate our approach by testing U.S. EPA's Storm Water Management Model (SWMM). The results offer concrete insights into developing effective MRs to systematically test scientific software.,","Association for Computing Machinery,","ml, applications, near, based, implementation, catch, articulation, witnessed, 71, bugs, present, expect, application, today, machine, tremendous, showed, business, vector, seen"
55,"Identifying implementation bugs in machine learning based image classifiers using metamorphic testing,","2018,","We have recently witnessed tremendous success of Machine Learning (ML) in practical applications. Computer vision, speech recognition and language translation have all seen a near human level performance. We expect, in the near future, most business applications will have some form of ML. However, testing such applications is extremely challenging and would be very expensive if we follow today's methodologies. In this work, we present an articulation of the challenges in testing ML based applications. We then present our solution approach, based on the concept of Metamorphic Testing, which aims to identify implementation bugs in ML based image classifiers. We have developed metamorphic relations for an application based on Support Vector Machine and a Deep Learning based application. Empirical validation showed that our approach was able to catch 71% of the implementation bugs in the ML applications.,","Association for Computing Machinery,","lstm, application, characteristics, learning, future, amp, deep, outages, forecaster, estimating, hypothetical, caught, proofs, allocation, bugs, looks, forecasting, characteristic, 65, relations"
56,"Metamorphic testing of a deep learning based forecaster,","2019,","In this paper, we present the Metamorphic Testing of an in-use deep learning based forecasting application. The application looks at the past data of system characteristics (e.g. 'memory allocation') to predict outages in the future. We focus on two statistical / machine learning based components - a) detection of co-relation between system characteristics and b) estimating the future value of a system characteristic using an LSTM (a deep learning architecture). In total, 19 Metamorphic Relations have been developed and we provide proofs &amp; algorithms where applicable. We evaluated our method through two settings. In the first, we executed the relations on the actual application and uncovered 8 issues not known before. Second, we generated hypothetical bugs, through Mutation Testing, on a reference implementation of the LSTM based forecaster and found that 65.9% of the bugs were caught through the relations.,","IEEE Press,","autonomous, drone, determine, principles, testing, flight, meets, varied, using, difficult, test, framework, drones, obstacles, encodes, delivers, simulator, detailed, beneficial, model"
57,"Metamorphic model-based testing of autonomous systems,","2017,","Testing becomes difficult when we cannot easily determine whether or not the system under test delivers the correct result. Autonomous systems are a case in point because it is difficult to determine whether a safety-critical autonomous system's behavior meets its specifications. To address the problem of testing autonomous drones, we have developed a framework for automated testing of a simulated autonomous drone system using metamorphic testing principles combined with model-based testing. Based on the results from using the framework to test the drone in the simulator using obstacles that do not move during flight, we have determined that this is a cost beneficial solution allowing for comprehensive testing without having to develop complex testing infrastructure to determine detailed test oracles. Our test cases are automatically generated from a set of testing models where each model encodes a certain scenario that can be varied according to metamorphic principles.,","IEEE Press,","briefing, checking, introduction, successful, challenges, applications, technique, failures, mt, complemented, exercises, outlining, double, fledged, multiple, present, outputs, drones, trends, testing"
58,"Metamorphic testing 20 years later: a hands-on introduction,","2018,","Two of the key challenges in software testing are the automated generation of test cases, and the identification of failures by checking test outputs. Both challenges are effectively addressed by metamorphic testing (MT), a software testing technique where failures are not revealed by checking an individual concrete output, but by checking the relations among the inputs and outputs of multiple executions of the software under test. Two decades after its introduction, MT is becoming a fully-fledged testing paradigm with successful applications in multiple domains including, among others, big data engineering, simulation and modeling, compilers, machine learning programs, autonomous cars and drones, and cybersecurity. This technical briefing will provide an introduction to MT from a double perspective. First, we will present the technique and the results of a novel survey outlining its main trends and lessons learned. Then, we will go deeper and present some of the successful applications of the technique, as well as challenges and opportunities on the topic. The briefing will be complemented with practical exercises on testing real web applications and APIs.,","Association for Computing Machinery,","translate, languages, translation, target, google, services, language, spanish, korean, russian, 56, swedish, 800, japanese, french, youdao, portuguese, 600, factorial, indo"
59,"A monte carlo method for metamorphic testing of machine translation services,","2018,","With the growing popularity of machine translation services, it has become increasingly important to be able to assess their quality. However, the test oracle problem makes it difficult to conduct automated testing. In this paper, we propose a Monte Carlo method, in combination with metamorphic testing, to overcome the oracle problem. Using this method, we assessed the quality of three popular machine translation services --- namely, Google Translate, Microsoft Translator, and Youdao Translate. We set the source language to be English, and the target languages included Chinese, French, Japanese, Korean, Portuguese, Russian, Spanish, and Swedish. A sample of 33,600 observations (involving a total of 100,800 actual translations) was collected and analyzed using a 3 X 56 factorial design. Based on this data, our model found Google Translate to be the best (in terms of the metamorphic relation used) for each and every target language considered. A trend for Indo-European languages producing better results was also identified.,","Association for Computing Machinery,","space, dnns, plausible, inputs, input, search, navigate, autoencoders, vaes, navigated, variational, opening, resembles, structured, principle, latent, meaningful, randomly, raw, dealing"
60,"SINVAD: Search-based Image Space Navigation for DNN Image Classifier Test Input Generation,","2020,","The testing of Deep Neural Networks (DNNs) has become increasingly important as DNNs are widely adopted by safety critical systems. While many test adequacy criteria have been suggested, automated test input generation for many types of DNNs remains a challenge because the raw input space is too large to randomly sample or to navigate and search for plausible inputs. Consequently, current testing techniques for DNNs depend on small local perturbations to existing inputs, based on the metamorphic testing principle. We propose new ways to search not over the entire image space, but rather over a plausible input space that resembles the true training distribution. This space is constructed using Variational Autoencoders (VAEs), and navigated through their latent vector space. We show that this space helps efficiently produce test inputs that can reveal information about the robustness of DNNs when dealing with realistic tests, opening the field to meaningful exploration through the space of highly structured images.,","Association for Computing Machinery,","avs, av, qos, simulink, modeled, vehicles, quality, driving, autonomous, travel, lastly, revolutionize, deploy, definitely, complex, predominant, market, measures, matlab, effective"
61,"Metamorphic testing of autonomous vehicles: a case study on simulink,","2021,","Autonomous Vehicles (AVs) will revolutionize the way people travel by car. However, in order to deploy autonomous vehicles, effective testing techniques are required. The driving quality of an AV should definitely be considered when testing such systems. However, as in other complex systems, determining the outcome of a test in the driving quality on an AV can be extremely complex. To solve this issue, in this paper we explore the application of Quality-of-Service (QoS) aware metamorphic testing to test AVs modeled in MATLAB/Simulink, one of the predominant modeling tools in the market. We first defined a set of QoS measures applied to AVs by considering as input a recent study. With them, we define metamorphic relations. Lastly we assess the approach in an AV modeled in Simulink by using mutation testing. The results suggests that our approach is effective at detecting faults.,","IEEE Press,","mps, kabu, mdt, programs, detecting, human, potential, bugs, preliminary, method, developers, detected, properties, identify, states, considers, methods, transforming, testing, solely"
62,"Dynamic inference of likely metamorphic properties to support differential testing,","2015,","Metamorphic testing is an advanced technique to test programs without a true test oracle such as machine learning applications. Because these programs have no general oracle to identify their correctness, traditional testing techniques such as unit testing may not be helpful for developers to detect potential bugs. This paper presents a novel system, Kabu, which can dynamically infer properties of methods' states in programs that describe the characteristics of a method before and after transforming its input. These Metamorphic Properties (MPs) are pivotal to detecting potential bugs in programs without test oracles, but most previous work relies solely on human effort to identify them and only considers MPs between input parameters and output result (return value) of a program or method. This paper also proposes a testing concept, Metamorphic Differential Testing (MDT). By detecting different sets of MPs between different versions for the same method, Kabu reports potential bugs for human review. We have performed a preliminary evaluation of Kabu by comparing the MPs detected by humans with the MPs detected by Kabu. Our preliminary results are promising: Kabu can find more MPs than human developers, and MDT is effective at detecting function changes in methods.,","IEEE Press,","image, adversarial, attacks, detect, small, misclassify, guarding, crafted, naked, manipulations, rise, eye, surveillance, imperceptible, consumer, industries, affine, approach, detrimental, models"
63,"Metamorphic detection of adversarial examples in deep learning models with affine transformations,","2019,","Adversarial attacks are small, carefully crafted perturbations, imperceptible to the naked eye; that when added to an image cause deep learning models to misclassify the image with potentially detrimental outcomes. With the rise of artificial intelligence models in consumer safety and security intensive industries such as self-driving cars, camera surveillance and face recognition, there is a growing need for guarding against adversarial attacks. In this paper, we present an approach that uses metamorphic testing principles to automatically detect such adversarial attacks. The approach can detect image manipulations that are so small, that they are impossible to detect by a human through visual inspection. By applying metamorphic relations based on distance ratio preserving affine image transformations which compare the behavior of the original and transformed image; we show that our proposed approach can determine whether or not the input image is adversarial with a high degree of accuracy.,","IEEE Press,","visions, mt, mrs, concepts, researchers, disciplines, standalone, alleviation, imagine, quarter, extensions, century, conveniently, ago, studies, evolve, accepted, new, foundation, decade"
64,"New visions on metamorphic testing after a quarter of a century of inception,","2021,","Metamorphic testing (MT) was introduced about a quarter of a century ago. It is increasingly being accepted by researchers and the industry as a useful testing technique. The studies, research results, applications, and extensions of MT have given us many insights and visions for its future. Our visions include: MRs will be a practical means to top up test case generation techniques, beyond the alleviation of the test oracle problem; MT will not only be a standalone technique, but conveniently integrated with other methods; MT and MRs will evolve beyond software testing, or even beyond verification; MRs may be anything that you can imagine, beyond the necessary properties of algorithms; MT research will be beyond empirical studies and move toward a theoretical foundation; MT will not only bring new concepts to software testing but also new concepts to other disciplines; MRs will alleviate the reliable test set problem beyond traditional approaches. These visions may help researchers explore the challenges and opportunities for MT in the next decade.,","Association for Computing Machinery,","compilers, dl, dnn, hardware, compilations, variants, erroneous, models, diverse, designed, compiled, deep, executables, dlcomp, boosted, prosperous, 435, launch, deliberately, maintained"
65,"Metamorphic Testing of Deep Learning Compilers,","2022,","The prosperous trend of deploying deep neural network (DNN) models to diverse hardware platforms has boosted the development of deep learning (DL) compilers. DL compilers take high-level DNN model specifications as input and generate optimized DNN executables for diverse hardware architectures like CPUs, GPUs, and hardware accelerators. We introduce MT-DLComp, a metamorphic testing framework specifically designed for DL compilers to uncover erroneous compilations. Our approach leverages deliberately-designed metamorphic relations (MRs) to launch semantics-preserving mutations toward DNN models to generate their variants. This way, DL compilers can be automatically tested for compilation correctness by comparing the execution outputs of the compiled DNN models and their variants without manual intervention. We detected over 435 inputs that can result in erroneous compilations in four popular DL compilers, all of which are industry-strength products maintained by Amazon, Facebook, Microsoft, and Google. We uncovered four bugs in these compilers by debugging them using the error-triggering inputs.,","Association for Computing Machinery,","pos, tagging, tools, nlp, sentence, advanced, reveal, tasks, flair, nltk, spacy, disambiguation, clause, inter, intra, adverbial, appending, handling, consequent, unaware"
66,"Property-based test for part-of-speech tagging tool,","2022,","Part-of-Speech (POS) tagging for sentences is a basic and widely-used Natural Language Processing (NLP) technique. People rely heavily on it to predict POS tags that serve as the base for many advanced NLP tasks, such as sentiment analysis, word sense disambiguation, and information retrieval. However, POS tagging tools could make wrong predictions, which bring consequent error propagation to the advanced tasks and even cause serious threats in critical application domains. In this paper, we propose to test POS tagging tools with Metamorphic Testing against some properties that they should follow. The preliminary exploration with two groups of Metamorphic Relations shows that our method can effectively reveal defects of three common POS tagging tools (i.e., spaCy, NLTK, and Flair) on handling fairly simple intra- and inter-sentence transformation regarding adverbial clause and sentence appending. This demonstrates the great potential of our method to deliver a systematic test and reveal the unaware issues, which may benefit the validation, repair, and improvement, for POS tagging tools.,","IEEE Press,","oracles, techniques, programs, analyses, automation, required, ability, finding, scientific, level, knowledge, fault, spurious, invariants, structural, assumed, static, assertions, domain, examines"
67,"Techniques for testing scientific programs without an Oracle,","2013,","The existence of an oracle is often assumed in software testing. But in many situations, especially for scientific programs, oracles do not exist or they are too hard to implement. This paper examines three techniques that are used to test programs without oracles: (1) Metamorphic testing, (2) Run-time Assertions and (3) Developing test oracles using machine learning. We examine these methods in terms of their (1) fault finding ability, (2) automation, and (3) required domain knowledge. Several case studies apply these three techniques to effectively test scientific programs that do not have oracles. Certain techniques have reported a better fault finding ability than the others when testing specific programs. Finally, there is potential to increase the level of automation of these techniques, thereby reducing the required level of domain knowledge. Techniques that can potentially be automated include (1) detection of likely metamorphic relations, (2) static analyses to eliminate spurious invariants and (3) structural analyses to develop machine learning generated oracles.,","IEEE Press,","high, programs, physical, testing, simulation, portability, suffered, exhaustively, plants, shortage, issues, communities, inadequate, regarded, computers, scalability, promote, nuclear, performance, collaboration"
68,"Testing high performance numerical simulation programs: experience, lessons learned, and open issues,","2020,","High performance numerical simulation programs are widely used to simulate actual physical processes on high performance computers for the analysis of various physical and engineering problems. They are usually regarded as non-testable due to their high complexity. This paper reports our real experience and lessons learned from testing five simulation programs that will be used to design and analyze nuclear power plants. We applied five testing approaches and found 33 bugs. We found that property-based testing and metamorphic testing are two effective methods. Nevertheless, we suffered from the lack of domain knowledge, the high test costs, the shortage of test cases, severe oracle issues, and inadequate automation support. Consequently, the five programs are not exhaustively tested from the perspective of software testing, and many existing software testing techniques and tools are not fully applicable due to scalability and portability issues. We need more collaboration and communication with other communities to promote the research and application of software testing techniques.,","Association for Computing Machinery,","obfuscators, mt, numerical, mathematical, look, functions, concept, search, verification, programs, unified, understood, noted, computations, audience, talk, cover, maps, evolved, illustrated"
69,"Metamorphic testing: beyond testing numerical computations,","2017,","The concept of metamorphic testing (MT) is often illustrated using numerical computation programs that implement mathematical functions. This is because mathematical functions have well-known properties that can be readily understood by the audience. It is to be noted, however, that the application domain of MT is far larger than numerical computations. Hence, this talk will cover some of our research on MT beyond the testing of numerical programs. We first look at the potential of MT for cybersecurity and show how MT was used to detect bugs in real-life obfuscators. Obfuscators are a type of software that can be as important as compilers, but the testing of obfuscators was almost never studied in the past. We then look at the application of MT to search related services such as Google Maps and search engines, and show how the concept of MT has evolved from a verification technique to a more unified framework that covers verification, validation and other types of quality assessment.,","IEEE Press,","validation, hand, mrs, tools, interpreting, ensures, accessible, formalization, guarantees, restrictions, fulfills, elements, homogeneous, artifact, consolidated, outlined, mature, doing, solvers, facilitates"
70,"Using constraint solvers to support metamorphic testing,","2019,","One of the current challenges in the context of Metamorphic Testing (MT) is the formalization and validation of metamorphic relations (MRs), as there is no single method or homogeneous way of doing it. It is a part of this software testing technique that, unlike others, is not yet developed. On one hand, the fact of having an artifact that formally validates these main elements in MT, facilitates the task for developers and testers and ensures that the technique applied fulfills its function with guarantees. On the other hand, nowadays, there are numerous accessible tools based on highly consolidated and mature constraint solvers that can help in this process of validation. Interpreting MRs as a set of constraints, their validation with these tools is directly applicable. This paper presents a proposal based on a use case, in which MRs are implemented as a set of restrictions. The experiments and the results are described and future lines of research are outlined.,","IEEE Press,","stream, streams, video, input, frame, frames, place, method, perception, follow, treating, granularity, undetected, incorrectly, finer, generate, runtime, obstacle, relations, investigating"
71,"In-place metamorphic testing and exploration,","2023,","In this paper, we consider the testing of software whose input involves a data stream, such as in video analysis applications. To address the oracle problem in testing this kind of software, existing metamorphic testing (MT) and metamorphic exploration (ME) techniques typically generate both source and follow-up input streams. In contrast, we propose a different strategy: an in-place method. Instead of examining relations among multiple input streams, our method works on a finer granularity by investigating relations among the data frames within a single input stream --- such as the relations among the image frames within a video stream --- treating a frame, rather than a stream, as a test case. Because our method does not generate any follow-up input stream, or change any frame values, it is also suitable for runtime error detection. We have applied this in-place method to testing video streams in Baidu Apollo, a real-life autonomous driving system. Our study identified previously-unknown obstacle perception failures in the camera perception module, including both undetected and incorrectly-detected objects. The empirical results show that our approach is practical, and readily applicable to industrial-scale systems that include (but are not limited to) the computer vision domain.,","Association for Computing Machinery,","self, ai, learning, methods, concept, recognition, human, behavior, sls, routines, comfort, adapted, systems, challenges, actions, everyday, insufficient, proof, automotive, creation"
72,"Improving the Validation of Automotive Self-Learning Systems through the Synergy of Scenario-Based Testing and Metamorphic Relations,","2024,","Numerous applications in our everyday life use artificial intelligence (AI) methods for speech and image recognition, as well as the recognition of human behavior. Especially the latter application represents an interesting research field for self-learning systems based on AI methods in the automotive domain. Human driving behavior is determined by routines that an AI system can learn, thereby predicting future actions. However, the methods and tools for validating these systems are insufficient and need to be adapted to the new types of self-learning algorithms. Our framework combines scenario-based testing and metamorphic testing to address the challenges of ensuring correctness and reliability in dynamic and probabilistic SLS. A proof of concept is performed using the example of a self-learning comfort function in a vehicle. The correct functionality is shown by comparing the generated test cases. The concept addresses the main challenges in testing self-learning systems, in particular, the generation of test inputs and the creation of a test oracle.,","Association for Computing Machinery,","quantum, computing, platforms, morphq, creates, crashes, programs, program, increasingly, popular, portfolio, qiskit, 8k, days, slim, widens, inspecting, crashing, generator, stack"
73,"MorphQ: Metamorphic Testing of the Qiskit Quantum Computing Platform,","2023,","As quantum computing is becoming increasingly popular, the underlying quantum computing platforms are growing both in ability and complexity. Unfortunately, testing these platforms is challenging due to the relatively small number of existing quantum programs and because of the oracle problem, i.e., a lack of specifications of the expected behavior of programs. This paper presents MorphQ, the first metamorphic testing approach for quantum computing platforms. Our two key contributions are (i) a program generator that creates a large and diverse set of valid (i.e., non-crashing) quantum programs, and (ii) a set of program transformations that exploit quantum-specific metamorphic relationships to alleviate the oracle problem. Evaluating the approach by testing the popular Qiskit platform shows that the approach creates over 8k program pairs within two days, many of which expose crashes. Inspecting the crashes, we find 13 bugs, nine of which have already been confirmed. MorphQ widens the slim portfolio of testing techniques of quantum computing platforms, helping to create a reliable software stack for this increasingly important field.,","IEEE Press,","gassertmrs, industrial, mrs, experts, domain, tool, outline, involvement, baselines, automating, genetic, elevation, aiming, cyber, case, hold, reasoning, lessons, outperforms, learned"
74,"Generating metamorphic relations for cyber-physical systems with genetic programming: an industrial case study,","2021,","One of the major challenges in the verification of complex industrial Cyber-Physical Systems is the difficulty of determining whether a particular system output or behaviour is correct or not, the so-called test oracle problem. Metamorphic testing alleviates the oracle problem by reasoning on the relations that are expected to hold among multiple executions of the system under test, which are known as Metamorphic Relations (MRs). However, the development of effective MRs is often challenging and requires the involvement of domain experts. In this paper, we present a case study aiming at automating this process. To this end, we implemented GAssertMRs, a tool to automatically generate MRs with genetic programming. We assess the cost-effectiveness of this tool in the context of an industrial case study from the elevation domain. Our experimental results show that in most cases GAssertMRs outperforms the other baselines, including manually generated MRs developed with the help of domain experts. We then describe the lessons learned from our experiments and we outline the future work for the adoption of this technique by industrial practitioners.,","Association for Computing Machinery,","apr, mt, ceti, genprog, feasibility, techniques, technique, integration, repair, integrated, effectiveness, categories, previous, different, consolidate, belonging, benefits, yields, category, complement"
75,"A revisit of the integration of metamorphic testing and test suite based automated program repair,","2017,","The technique of metamorphic testing (MT) has been integrated with test suite based automated program repair (APR) to alleviate the test oracle problem of APR. The proposed integration yields APR-MT techniques, which can be applied regardless of the existence of a test oracle. In a previous study, the feasibility and effectiveness of the APR-MT technique have been demonstrated via GenProg-MT, an integration of MT and the APR technique GenProg. This paper aims to complement our previous study to investigate the feasibility and effectiveness of APR-MT across different categories of APR techniques. We present the integration of MT with CETI, an APR technique belonging to a different category to GenProg, and conduct experimental analysis on the integrated technique CETI-MT, showing that CETI-MT is comparable to CETI in terms of the repair effectiveness. These results not only demonstrate the feasibility of integrating MT with different categories of APR techniques, but also consolidate the effectiveness of APR-MT techniques, hence increasing the practical benefits of APR-MT techniques.,","IEEE Press,","genetic, search, f1, random, se, introduced, computational, ml, changes, unrealistic, datapoints, decrease, delta, capacities, optimizes, code2vec, certainty, deltas, world, mrr"
76,"Searching for Quality: Genetic Algorithms and Metamorphic Testing for Software Engineering ML,","2023,","More machine learning (ML) models are introduced to the field of Software Engineering (SE) and reached a stage of maturity to be considered for real-world use; But the real world is complex, and testing these models lacks often in explainability, feasibility and computational capacities. Existing research introduced meta-morphic testing to gain additional insights and certainty about the model, by applying semantic-preserving changes to input-data while observing model-output. As this is currently done at random places, it can lead to potentially unrealistic datapoints and high computational costs. With this work, we introduce genetic search as an aid for metamorphic testing in SE ML. Exploiting the delta in output as a fitness function, the evolutionary intelligence optimizes the transformations to produce higher deltas with less changes. We perform a case study minimizing F1 and MRR for Code2Vec on a representative sample from java-small with both genetic and random search. Our results show that within the same amount of time, genetic search was able to achieve a decrease of 10% in F1 while random search produced 3% drop.,","Association for Computing Machinery,","qbss, query, mrs, called, systems, web, limiting, imdb, skyscanner, seconds, creative, qbs, pervasive, lightweight, displaying, portals, managed, starting, henceforth, just"
77,"Automated generation of metamorphic relations for query-based systems,","2023,","Searching and displaying data based on user queries is a pervasive feature of most software applications such as information systems, web portals, and web APIs. The large volume of data managed by these types of systems, henceforth called query-based systems (QBSs), makes them extremely hard to test due to the difficulty to assess whether the output of a query is correct, the so-called test oracle problem. Metamorphic testing has proved to be a very effective approach to alleviate the oracle problem in QBSs, by exploiting the relations among multiple executions of the QBS under test, so-called metamorphic relations (MRs). However, the identification of MRs mostly remains a manual and creative task, limiting the applicability of the approach. In this paper, we propose a method for the automated generation of MRs in QBSs starting from a lightweight specification of the query parameters of the system. Evaluation results show that hundreds of MRs can be automatically identified in real-world systems like IMDb, SkyScanner, or YouTube in just a few seconds.,","Association for Computing Machinery,","modified, equals, intramorphic, implementation, test, oracle, box, methodology, output, original, relates, sorting, given, internals, replacing, oblivious, reverse, operator, families, automated"
78,"Intramorphic Testing: A New Approach to the Test Oracle Problem,","2022,","A test oracle determines whether a system behaves correctly for a given input. Automatic testing techniques rely on an automated test oracle to test the system without user interaction. Important families of automated test oracles include Differential Testing and Metamorphic Testing, which are both black-box approaches; that is, they provide a test oracle that is oblivious to the system’s internals. In this work, we propose Intramorphic Testing as a white-box methodology to tackle the test oracle problem. To realize an Intramorphic Testing approach, a modified version of the system is created, for which, given a single input, a test oracle can be provided that relates the output of the original and modified systems. As a concrete example, by replacing a greater-equals operator in the implementation of a sorting algorithm with smaller-equals, it would be expected that the output of the modified implementation is the reverse output of the original implementation. In this paper, we introduce the methodology and illustrate it via a set of use cases.,","Association for Computing Machinery,","options, flexible, configuration, loose, subscribe, gmsec, coupling, publish, nasa, architecture, software, components, bus, middleware, straight, channel, quick, connected, missions, formulate"
79,"A metamorphic testing approach to NASA GMSEC's flexible publish and subscribe functionality,","2018,","Today's software systems are increasingly required to be flexible which is achieved by providing various forms of loose coupling and configuration options. While loose coupling and configuration options facilitate quick adaptation to changing requirements, such flexibility increases the difficulty of system testing. It is often relatively straight-forward to create different configuration options as test cases, but it is typically much more difficult to formulate the expected system behavior, which is known as the oracle problem. NASA's GMSEC software bus is such a flexible system that serves as a central communication channel for software components based on a publish and subscribe architecture where several software components can be dynamically connected to the system. To cope with the difficulties in testing such a flexible software system, we present a metamorphic testing approach that explicitly addresses the test oracle problem. In this paper, we focus on testing the publish and subscribe functionality of GMSEC motivated by the fact that its middleware-based system architecture is the foundation of many of NASA's missions.,","Association for Computing Machinery,","transformer, transrepair, box, translations, translate, repair, consistency, fixes, grey, bugs, google, inconsistency, indicates, black, translation, average, reference, automatic, manual, repairing"
80,"Automatic testing and improvement of machine translation,","2020,","This paper presents TransRepair, a fully automatic approach for testing and repairing the consistency of machine translation systems. TransRepair combines mutation with metamorphic testing to detect inconsistency bugs (without access to human oracles). It then adopts probability-reference or cross-reference to post-process the translations, in a grey-box or black-box manner, to repair the inconsistencies. Our evaluation on two state-of-the-art translators, Google Translate and Transformer, indicates that TransRepair has a high precision (99%) on generating input pairs with consistent translations. With these tests, using automatic consistency metrics and manual assessment, we find that Google Translate and Transformer have approximately 36% and 40% inconsistency bugs. Black-box repair fixes 28% and 19% bugs on average for Google Translate and Transformer. Grey-box repair fixes 30% bugs on average for Transformer. Manual inspection indicates that the translations repaired by our approach improve consistency in 87% of cases (degrading it in 2%), and that our repairs have better translation acceptability in 27% of the cases (worse in 8%).,","Association for Computing Machinery,","scale, nasa, data, testing, determine, conducted, using, unfamiliar, telemetry, analysts, toolkit, approach, teams, acceptance, delivers, behaves, broad, occur, base, outcome"
81,"Metamorphic model-based testing applied on NASA DAT: an experience report,","2015,","Testing is necessary for all types of systems, but becomes difficult when the tester cannot easily determine whether the system delivers the correct result or not. NASA's Data Access Toolkit allows NASA analysts to query a large database of telemetry data. Since the user is unfamiliar with the data and several data transformations can occur, it is impossible to determine whether the system behaves correctly or not in full scale production situations. Small scale testing was already conducted manually by other teams and unit testing was conducted on individual functions. However, there was still a need for full scale acceptance testing on a broad scale.We describe how we addressed this testing problem by applying the idea of metamorphic testing [1]. Specifically, we base it on equivalence of queries and by using the system itself for testing. The approach is implemented using a model-based testing approach in combination with a test data generation and test case outcome analysis strategy. We also discuss some of the issues that were detected using this approach.,","IEEE Press,","embedded, hardware, graphics, libraries, vps, mt, integration, predetermined, tft, espi, firmware, gd32v, vp, graphic, virtualizing, framework, prototypes, confirming, automating, risc"
82,"Verifying Embedded Graphics Libraries leveraging Virtual Prototypes and Metamorphic Testing,","2024,","Embedded graphics libraries are part of the firmware of embedded systems and provide complex functionalities optimized for specific hardware. After unit testing of embedded graphics libraries, integration testing is a significant challenge, in particular since the hardware is needed to obtain the output image as well as the inherent difficulty in defining the reference result.In this paper, we present a novel approach focusing on integration testing of embedded graphic libraries. We leverage Virtual Prototypes (VPs) and integrate them with Metamorphic Testing (MT). MT is a software testing technique that uncovers faults or issues in a system by exploring how its outputs change under predefined input transformations, without relying on explicit oracles or predetermined results. In combination with virtualizing the displays in VPs, we even eliminate the need for physical hardware. This allows us to develop a MT framework automating the verification process. In our evaluation, we demonstrate the effectiveness of our MT framework. On an extended RISC-V VP for the GD32V platform we found 15 distinct bugs for the widely used TFT eSPI embedded graphics library, confirming the strength our approach.,","IEEE Press,","mps, dl, violations, sensitive, metric, diversity, revealing, prioritize, boost, prioritized, detected, prioritization, fault, defects, software, discrepancy, missed, delayed, apt, conceal"
83,"Boosting the Revealing of Detected Violations in Deep Learning Testing: A Diversity-Guided Method,","2023,","Due to the ability to bypass the oracle problem, Metamorphic Testing (MT) has been a popular technique to test deep learning (DL) software. However, no work has taken notice of the prioritization for Metamorphic test case Pairs (MPs), which is quite essential and beneficial to the effectiveness of MT in DL testing. When the fault-sensitive MPs apt to trigger violations and expose defects are not prioritized, the revealing of some detected violations can be greatly delayed or even missed to conceal critical defects. In this paper, we propose the first method to prioritize the MPs for DL software, so as to boost the revealing of detected violations in DL testing. Specifically, we devise a new type of metric to measure the execution diversity of DL software on MPs based on the distribution discrepancy of the neuron outputs. The fault-sensitive MPs are next prioritized based on the devised diversity metric. Comprehensive evaluation results show that the proposed prioritization method and diversity metric can effectively prioritize the fault-sensitive MPs, boost the revealing of detected violations, and even facilitate the selection and design of the effective Metamorphic Relations for the image classification DL software.,","Association for Computing Machinery,","causal, scientific, inference, modelling, enabling, framework, models, testing, galaxy, posteriori, formation, government, notoriously, concerning, confounded, sparse, epidemiology, viral, data, policy"
84,"Testing Causality in Scientific Modelling Software,","2023,","From simulating galaxy formation to viral transmission in a pandemic, scientific models play a pivotal role in developing scientific theories and supporting government policy decisions that affect us all. Given these critical applications, a poor modelling assumption or bug could have far-reaching consequences. However, scientific models possess several properties that make them notoriously difficult to test, including a complex input space, long execution times, and non-determinism, rendering existing testing techniques impractical. In fields such as epidemiology, where researchers seek answers to challenging causal questions, a statistical methodology known as Causal inference has addressed similar problems, enabling the inference of causal conclusions from noisy, biased, and sparse data instead of costly experiments. This article introduces the causal testing framework: a framework that uses causal inference techniques to establish causal effects from existing data, enabling users to conduct software testing activities concerning the effect of a change, such as metamorphic testing, a posteriori. We present three case studies covering real-world scientific models, demonstrating how the causal testing framework can infer metamorphic test outcomes from reused, confounded test data to provide an efficient solution for testing scientific modelling software.,","Association for Computing Machinery,","dl, test, cases, follow, select, automation, increasing, approach, algorithm, 59, provoked, dependability, tackling, 09, hypervolume, drawback, nsga, verdict, outperformed, lies"
85,"Multi-objective metamorphic follow-up test case selection for deep learning systems,","2022,","Deep Learning (DL) components are increasing their presence in safety and mission-critical software systems. To ensure a high dependability of DL systems, robust verification methods are required, for which automation is highly beneficial (e.g., more test cases can be executed). Metamorphic Testing (MT) is a technique that has shown to alleviate the test oracle problem when testing DL systems, and therefore, increasing test automation. However, a drawback of this technique lies into the need of multiple test executions to obtain the test verdict (named as the source and the follow-up test cases), requiring additional testing cost. In this paper we propose an approach based on multi-objective search to select follow-up test cases. Our approach makes use of source test cases to measure the uncertainty provoked by such test inputs in the DL model, and based on that, select failure-revealing follow-up test cases. We integrate our approach with the NSGA-II algorithm. An empirical evaluation on three DL models tackling the image classification problem, along with five different metamorphic relations demonstrates that our approach outperformed the baseline algorithm between 17.09 to 59.20% on average when considering the revisited Hypervolume quality indicator.,","Association for Computing Machinery,","equivalent, redundancy, operations, sequences, redundant, identifies, techniques, method, known, finite, invocations, mismatching, healing, tolerate, supposed, faults, executes, priori, inferring, attempt"
86,"Search-based synthesis of equivalent method sequences,","2014,","Software components are usually redundant, since their interface offers different operations that are equivalent in their functional behavior. Several reliability techniques exploit this redundancy to either detect or tolerate faults in software. Metamorphic testing, for instance, executes pairs of sequences of operations that are expected to produce equivalent results, and identifies faults in case of mismatching outcomes. Some popular fault tolerance and self-healing techniques execute redundant operations in an attempt to avoid failures at runtime. The common assumption of these techniques, though, is that such redundancy is known a priori. This means that the set of operations that are supposed to be equivalent in a given component should be available in the specifications. Unfortunately, inferring this information manually can be expensive and error prone. This paper proposes a search-based technique to synthesize sequences of method invocations that are equivalent to a target method within a finite set of execution scenarios. The experimental results obtained on 47 methods from 7 classes show that the proposed approach correctly identifies equivalent method sequences in the majority of the cases where redundancy was known to exist, with very few false positives.,","Association for Computing Machinery,","web, apis, spotify, api, albums, total, output, mrop, result, metamorphic, relation, relations, search, query, faults, issues, keyword, suppose, approach, reported"
87,"Metamorphic testing of RESTful web APIs,","2018,","Web Application Programming Interfaces (APIs) specify how to access services and data over the network, typically using Web services. Web APIs are rapidly proliferating as a key element to foster reusability, integration, and innovation, enabling new consumption models such as mobile or smart TV apps. Companies such as Facebook, Twitter, Google, eBay or Netflix receive billions of API calls every day from thousands of different third-party applications and devices, which constitutes more than half of their total traffic.As Web APIs are progressively becoming the cornerstone of software integration, their validation is getting more critical. In this context, the fast detection of bugs is of utmost importance to increase the quality of internal products and third-party applications. However, testing Web APIs is challenging mainly due to the difficulty to assess whether the output of an API call is correct, i.e., the oracle problem. For instance, consider the Web API of the popular music streaming service Spotify. Suppose a search for albums with the query ""redhouse"" returning 21 total matches: Is this output correct? Do all the albums in the result set contain the keyword? Are there any albums containing the keyword not included in the result set? Answering these questions is difficult, even with small result sets, and often infeasible when the results are counted by thousands or millions.Metamorphic testing alleviates the oracle problem by providing an alternative when the expected output of a test execution is complex or unknown. Rather than checking the output of an individual program execution, metamorphic testing checks whether multiple executions of the program under test fulfil certain necessary properties called metamorphic relations. For instance, consider the following metamorphic relation in Spotify: two searches for albums with the same query should return the same number of total results regardless of the size of pagination. Suppose that a new Spotify search is performed using the exact same query as before and increasing the maximum number of results per page from 20 (default value) to 50: This search returns 27 total albums (6 more matches than in the previous search), which reveals a bug. This is an example of a real and reproducible fault detected using the approach presented in this paper and reported to Spotify. According to Spotify developers, it was a regression fault caused by a fix with undesired side effects.In this paper [1], we present a metamorphic testing approach for the automated detection of faults in RESTful Web APIs (henceforth also referred to as simply Web APIs). We introduce the concept of metamorphic relation output patterns. A Metamorphic Relation Output Pattern (MROP) defines an abstract output relation typically identified in Web APIs, regardless of their application domain. Each MROP is defined in terms of set operations among test outputs such as equality, union, subset, or intersection. MROPs provide a helpful guide for the identification of metamorphic relations, broadening the scope of our work beyond a particular Web API. Based on the notion of MROP, a methodology is proposed for the application of the approach to any Web API following the REST architectural pattern.The approach was evaluated in several steps. First, we used the proposed methodology to identify 33 metamorphic relations in four Web APIs developed by undergraduate students. All the relations are instances of the proposed MROPs. Then, we assessed the effectiveness of the identified relations at revealing 317 automatically seeded faults (i.e., mutants) in the APIs under test. As a result, 302 seeded faults were detected, achieving a mutation score of 95.3%. Second, we evaluated the approach using real Web APIs and faults. In particular, we identified 20 metamorphic relations in the Web API of Spotify and 40 metamorphic relations in the Web API of YouTube. Each metamorphic relation was implemented and automatically executed using both random and manual test data. In total, 469K metamorphic tests were generated. As a result, 21 metamorphic relations were violated, and 11 issues revealed and reported (3 issues in Spotify and 8 issues in YouTube). To date, 10 of the reported issues have been either confirmed by the API developers or reproduced by other users supporting the effectiveness of our approach.,","Association for Computing Machinery,","visualizations, vizsmith, functions, code, creating, database, end, use, developers, user, search, tools, sift, 7176, steep, matplotlib, procedural, beginners, communicate, forums"
88,"VizSmith: automated visualization synthesis by mining data-science notebooks,","2022,","Visualizations are widely used to communicate findings and make data-driven decisions. Unfortunately creating bespoke and reproducible visualizations requires the use of procedural tools such as matplotlib. These tools present a steep learning curve as their documentation often lacks sufficient usage examples to help beginners get started or accomplish a specific task. Forums such as StackOverflow have long helped developers search for code online and adapt it for their use. However, developers still have to sift through search results and understand the code before adapting it for their use.We built a tool called VizSmith which enables code reuse for visualizations by mining visualization code from Kaggle notebooks and creating a database of 7176 reusable Python functions. Given a dataset, columns to visualize and a text query from the user, VizSmith searches this database for appropriate functions, runs them and displays the generated visualizations to the user. At the core of VizSmith is a novel metamorphic testing based approach to automatically assess the reusability of functions, which improves end-to-end synthesis performance by 10% and cuts the number of execution failures by 50%.,","IEEE Press,","qa, qaqa, bugs, questions, software, vs, answer, question, positives, false, rate, natural, reported, language, posed, unanswerable, proportion, chaotic, 133, ambiguous"
89,"Natural Test Generation for Precise Testing of Question Answering Software,","2023,","Question answering (QA) software uses information retrieval and natural language processing techniques to automatically answer questions posed by humans in a natural language. Like other AI-based software, QA software may contain bugs. To automatically test QA software without human labeling, previous work extracts facts from question answer pairs and generates new questions to detect QA software bugs. Nevertheless, the generated questions could be ambiguous, confusing, or with chaotic syntax, which are unanswerable for QA software. As a result, a relatively large proportion of the reported bugs are false positives. In this work, we proposed QAQA, a sentence-level mutation based metamorphic testing technique for QA software. To eliminate false positives and achieve precise automatic testing, QAQA leverages five Metamorphic Relations (MRs) as well as semantics-guided search and enhanced test oracles. Our evaluation on three QA datasets demonstrates that QAQA outperforms the state-of-the-art in both quantity (8,133 vs. 6,601 bugs) and quality (97.67% vs. 49% true positive rate) of the reported bugs. Moreover, the test inputs generated by QAQA successfully reduce MR violation rate from 44.29% to 20.51% when being adopted in fine-tuning the QA software under test.,","Association for Computing Machinery,","sr, speech, recognition, devices, noise, mt, software, accuracy, reduce, environment, level, robustness, text1, text2, text3, wearable, living, rank, convert, db"
90,"SR-MT: a metamorphic method to test the robustness of speech recognition software,","2023,","Speech recognition (SR) systems are systems that convert speech signals into text and are widely used in mobile devices, wearable devices, and intelligent living room devices. When SR software recognizes speech in the laboratory or another quiet environment, the recognition accuracy is high. However, when SR software is applied in a complex real-world environment, there may be background noise from birds, machines, and so on, the influence of other speakers, or other adverse factors, which will reduce the recognition accuracy of the SR software. In this work, we propose SR-MT, which is a metamorphic testing (MT) approach to test the robustness of SR software. In SR-MT, we adopt four criteria to analyze the MT results and rank the robustness of the target SR software for speech affected by noise interference and speech variations from level 1 to level 5. SR-MT was evaluated on three real industrial applications: iFLYTEK speech-to-text1, Baidu speech-to-text2, and Google speech-to-text3. We found that on average, 13.5% of the words in the speech could not be recognized correctly when the signal-to-noise ratio reached 10 dB. Similarly, changes in speech speed and tone will also reduce the recognition accuracy of SR software.,","Association for Computing Machinery,","shader, compilers, fshader, rendered, graphics, nvidia, intel, amd, gpu, rendering, uncover, programs, like, designed, driving, user, images, high, apple, vendors"
91,"Metamorphic Shader Fusion for Testing Graphics Shader Compilers,","2023,","Computer graphics are powered by graphics APIs (e.g., OpenGL, Direct3D) and their associated shader compilers, which render high-quality images by compiling and optimizing user-written high-level shader programs into GPU machine code. Graphics rendering is extensively used in production scenarios like virtual reality (VR), gaming, autonomous driving, and robotics. Despite the development by industrial manufacturers such as Intel, Nvidia, and AMD, shader compilers --- like traditional software --- may produce ill-rendered outputs. In turn, these errors may result in negative results, from poor user experience in entertainment to accidents in driving assistance systems.This paper introduces FSHADER, a metamorphic testing (MT) framework designed specifically for shader compilers to uncover erroneous compilations and optimizations. FSHADER tests shader compilers by mutating input shader programs via four carefully-designed metamorphic relations (MRs). In particular, FSHADER fuses two shader programs via an MR and checks the visual consistency between the image rendered from the fused shader program with the output of fusing individually rendered images. Our study of 12 shader compilers covers five mainstream GPU vendors, including Intel, AMD, Nvidia, ARM, and Apple. We successfully uncover over 16K error-triggering inputs that generate incorrect rendering outputs. We manually locate and characterize buggy optimization places, and developers have confirmed representative bugs.,","IEEE Press,","ases, search, engine, analyzed, verifying, engines, behaviors, mrs, scientific, springer, mpshufflejd, differently, sciencedirect, characterized, certify, top1absent, acm, mptitle, mpublished, expected"
92,"On applying metamorphic testing: an empirical study on academic search engines,","2019,","Software testing can be a helpful practice to certify the quality of a product. However, there are programs which are hard, if not impossible, to determine the expected outputs. This problem is called the ""oracle problem"". Metamorphic testing (MT) is an approach that aims to alleviate this problem by setting a series of relations, called metamorphic relations (MRs). This paper applies MT through a user-oriented approach and the following MRs: MPublished, MPTitle, MPShuffleJD and Top1Absent as a strategy for evaluating, verifying, and validating four Academic Search Engines (ASEs): ACM, IEEE, ScienceDirect, and Springer. Therefore, we conducted an experimental study to analyze how MRs can contribute to verifying the correctness of the properties of ASEs. Results indicate that the ASEs have performed differently in their execution for each MR analyzed. This shows that the algorithms of the scientific search engines have different behaviors among the characteristics analyzed. These behaviors may not be properly characterized by a possible failure, but by a simple design choice. On the other hand, the approach is useful for search engine users that need to be sure that the ASEs behave as expected during a search, as the results of secondary studies strongly depend on the correct behavior of the scientific search engine used.,","IEEE Press,","recommendation, recommender, packages, recpack, algorithms, python, box, evaluating, suite, coverage, test, correct, cornac, pylenskit, undocumented, thesis, abstraction, tests, surprise, release"
93,"A Framework and Toolkit for Testing the Correctness of Recommendation Algorithms,","2024,","Evaluating recommender systems adequately and thoroughly is an important task. Significant efforts are dedicated to proposing metrics, methods, and protocols for doing so. However, there has been little discussion in the recommender systems’ literature on the topic of testing. In this work, we adopt and adapt concepts from the software testing domain, e.g., code coverage, metamorphic testing, or property-based testing, to help researchers to detect and correct faults in recommendation algorithms. We propose a test suite that can be used to validate the correctness of a recommendation algorithm, and thus identify and correct issues that can affect the performance and behavior of these algorithms. Our test suite contains both black box and white box tests at every level of abstraction, i.e., system, integration, and unit. To facilitate adoption, we release RecPack Tests, an open-source Python package containing template test implementations. We use it to test four popular Python packages for recommender systems: RecPack, PyLensKit, Surprise, and Cornac. Despite the high test coverage of each of these packages, we find that we are still able to uncover undocumented functional requirements and even some bugs. This validates our thesis that testing the correctness of recommendation algorithms can complement traditional methods for evaluating recommendation algorithms.,","Association for Computing Machinery,","mrs, scout, codified, encoded, mr, mtcs, oss, 76, projects, developer, written, programs, test, knowledge, cases, embed, govern, parameterized, 701, tests"
94,"MR-Scout: Automated Synthesis of Metamorphic Relations from Existing Test Cases,","2024,","Metamorphic Testing (MT) alleviates the oracle problem by defining oracles based on metamorphic relations (MRs) that govern multiple related inputs and their outputs. However, designing MRs is challenging, as it requires domain-specific knowledge. This hinders the widespread adoption of MT. We observe that developer-written test cases can embed domain knowledge that encodes MRs. Such encoded MRs could be synthesized for testing not only their original programs but also other programs that share similar functionalities.In this article, we propose MR-Scout to automatically synthesize MRs from test cases in open-source software (OSS) projects. MR-Scout first discovers MR-encoded test cases (MTCs), and then synthesizes the encoded MRs into parameterized methods (called codified MRs), and filters out MRs that demonstrate poor quality for new test case generation. MR-Scout discovered over 11,000 MTCs from 701 OSS projects. Experimental results show that over 97% of codified MRs are of high quality for automated test case generation, demonstrating the practical applicability of MR-Scout. Furthermore, codified-MRs-based tests effectively enhance the test adequacy of programs with developer-written tests, leading to 13.52% and 9.42% increases in line coverage and mutation score, respectively. Our qualitative study shows that 55.76% to 76.92% of codified MRs are easily comprehensible for developers.,","Association for Computing Machinery,","cases, source, mt, test, selection, rt, effectiveness, follow, mrs, random, art, referred, affect, aims, implies, enhancement, verified, enhancing, case, adaptive"
95,"The impact of source test case selection on the effectiveness of metamorphic testing,","2016,","Metamorphic Testing (MT) aims to alleviate the oracle problem. In MT, testers define metamorphic relations (MRs) which are used to generate new test cases (referred to as follow-up test cases) from the available test cases (referred to as source test cases). Both source and follow-up test cases are executed and their outputs are verified against the relevant MRs, of which any violation implies that the software under test is faulty. So far, the research on the effectiveness of MT has been focused on the selection of better MRs (that is, MRs that are more likely to be violated). In addition to MR selection, the source and follow-up test cases may also affect the effectiveness of MT. Since follow-up test cases are defined by the source test cases and MRs, selection of source test cases will then affect the effectiveness of MT. However, in existing MT studies, random testing is commonly adopted as the test case selection strategy for source test cases. This study aims to investigate the impact of source test cases on the effectiveness of MT. Since Adaptive Random Testing (ART) has been developed as an enhancement to Random Testing (RT), this study will focus on comparing the performance of RT and ART as source test case selection strategies on the effectiveness of MT. Experiment results show that ART outperforms RT on enhancing the effectiveness of MT.,","Association for Computing Machinery,","gamera, gdbs, graph, logic, bugs, gdb, aware, native, structures, prior, solutions, mrs, novel, smith, neo4j, conform, gd, orientdb, gdbmeter, outperformed"
96,"Testing Graph Database Systems via Graph-Aware Metamorphic Relations,","2024,","Graph database systems (GDBs) have supported many important real-world applications such as social networks, logistics, and path planning. Meanwhile, logic bugs are also prevalent in GDBs, leading to incorrect results and severe consequences. However, the logic bugs largely cannot be revealed by prior solutions which are unaware of the graph native structures of the graph data. In this paper, we propose Gamera (Graph-aware metamorphic relations), a novel metamorphic testing approach to uncover unknown logic bugs in GDBs. We design three classes of novel graph-aware Metamorphic Relations (MRs) based on the graph native structures. Gamera would generate a set of queries according to the graph-aware MRs to test diverse and complex GDB operations, and check whether the GDB query results conform to the chosen MRs.We thoroughly evaluated the effectiveness of Gamera on seven widely-used GDBs such as Neo4j and OrientDB. Gamera was highly effective in detecting logic bugs in GDBs. In total, it detected 39 logic bugs, of which 15 bugs have been confirmed, and three bugs have been fixed. Our experiments also demonstrated that Gamera significantly outperformed prior solutions including Grand, GD-smith and GDBMeter. Gamera has been well-recognized by GDB developers and we open-source our prototype implementation to contribute to the community.,","VLDB Endowment,","qa, qatest, systems, tasks, question, fuzzing, tests, experiment, erroneous, behaviors, efficiency, designed, different, uniform, formats, gram, perplexity, siri, empowered, design"
97,"QATest: A Uniform Fuzzing Framework for Question Answering Systems,","2023,","The tremendous advancements in deep learning techniques have empowered question answering(QA) systems with the capability of dealing with various tasks. Many commercial QA systems, such as Siri, Google Home, and Alexa, have been deployed to assist people in different daily activities. However, modern QA systems are often designed to deal with different topics and task formats, which makes both the test collection and labeling tasks difficult and thus threats their quality. To alleviate this challenge, in this paper, we design and implement a fuzzing framework for QA systems, namely QATest, based on the metamorphic testing theory. It provides the first uniform solution to generate tests with oracle information automatically for various QA systems, such as machine reading comprehension, open-domain QA, and QA on knowledge bases. To further improve testing efficiency and generate more tests detecting erroneous behaviors, we design N-Gram coverage and perplexity priority based on the features of the question data to guide the generation process. To evaluate the performance of QATest, we experiment with it on four QA systems that are designed for different tasks. The experiment results show that the tests generated by QATest detect hundreds of erroneous behaviors of QA systems efficiently. Also, the results confirm that the testing criteria can improve test diversity and fuzzing efficiency.,","Association for Computing Machinery,","coverage, code, profilers, widespread, ensuring, adoption, crucial, various, given, correctness, software, passes, password, patients, past, patch, patches, patented, path, paths"
98,"Heterogeneous Testing for Coverage Profilers Empowered with Debugging Support,","2023,","Ensuring the correctness of code coverage profilers is crucial, given the widespread adoption of code coverage for various software","Association for Computing Machinery,","qa, inference, questions, answers, logically, kg, kgit, graph, software, models, testing, driven, knowledge, relations, folds, wake, misbehaving, developments, inevitably, penetrated"
99,"Knowledge Graph Driven Inference Testing for Question Answering Software,","2024,","In the wake of developments in the field of Natural Language Processing, Question Answering (QA) software has penetrated our daily lives. Due to the data-driven programming paradigm, QA software inevitably contains bugs, i.e., misbehaving in real-world applications. Current testing techniques for testing QA software include two folds, reference-based testing and metamorphic testing.This paper adopts a different angle to achieve testing for QA software: we notice that answers to questions would have inference relations, i.e., the answers to some questions could be logically inferred from the answers to other questions. If these answers on QA software do not satisfy the inference relations, an inference bug is detected. To generate the questions with the inference relations automatically, we propose a novel testing method Knowledge Graph driven Inference Testing (KGIT), which employs facts in the Knowledge Graph (KG) as the seeds to logically construct test cases containing questions and contexts with inference relations. To evaluate the effectiveness of KGIT, we conduct an extensive empirical study with more than 2.8 million test cases generated from the large-scale KG YAGO4 and three QA models based on the state-of-the-art QA model structure. The experimental results show that our method (a) could detect a considerable number of inference bugs in all three studied QA models and (b) is helpful in retraining QA models to improve their inference ability.,","Association for Computing Machinery,","mr, mrs, referred, sut, regression, research, output, changes, test, aimed, universally, entailing, standardised, acknowledges, metratrimmer, expected, problem, encompasses, explanations, constraining"
100,"Selecting and Constraining Metamorphic Relations,","2024,","Software testing is a critical aspect of ensuring the reliability and quality of software systems. However, it often poses challenges, particularly in determining the expected output of a System Under Test (SUT) for a given set of inputs, a problem commonly referred to as the test oracle problem. Metamorphic Testing (MT) offers a promising solution to the test oracle problem by examining the relations between input-output pairs in consecutive executions of the SUT. These relations, referred to as Metamorphic Relations (MRs), define the expected changes in the output when specific changes are made to the input. Our research is focused on developing methods and tools to assist testers in the selection of MRs, the definition of constraints, and providing explanations for MR outcomes. The research is divided in three parts. The first part focuses on MR collection and description, entailing the creation of a comprehensive repository of MRs from various sources. A standardised MR representation is devised to promote machine-readability and wide-ranging applicability. The second part introduces MetraTrimmer, a test-data-driven approach for systematically selecting and constraining MRs. This approach acknowledges that MRs may not be universally applicable to all test data space. The final part, evaluation and validation, encompasses empirical studies aimed at assessing the effectiveness of the developed methods and validating their suitability for real-world regression testing scenarios. Through this research, we aim to advance the automation of MR generation, enhance the understanding of MR violations, and facilitate their effective application in regression testing.,","Association for Computing Machinery,","representing, reliability, determine, distributed, executed, systems, applied, model, target, oracle, simulation, study, experiments, contrasted, simplification, entail, simcan, modelled, complex, essence"
101,"Analyzing the reliability of simulated distributed systems using metamorphic testing,","2023,","Simulation is widely adopted by the research community to analyze and study complex systems. It is based on the idea of creating a model representing the target system under study, so that the experiments can be executed over the model instead of the target system. However, since the model is a simplification of a real-world system, the obtained results entail an accuracy loss, which makes determining the reliability of the experiments a complex task.Testing can be applied to check the correctness of systems. Thus, an oracle is used to determine if a test is correct or not. In the field of simulation, an oracle can be applied to determine the reliability of the results, but in most cases, the oracle is not available or is computationally too expensive to be applied.In this work, we propose to use metamorphic testing to detect faults in simulated distributed systems. In essence, we use metamorphic relations - representing the relevant properties of the system under study - as an oracle. Thus, the results provided are contrasted against these relations to determine their reliability. In order to show the applicability of this approach, we have modelled different distributed systems architectures using the SIMCAN simulator and a high performance application that is executed over the models.,","Association for Computing Machinery,","mapf, agents, met, destinations, reach, agent, different, path, violations, mrs, types, unnecessarily, completion, paths, exposing, possibly, scheduling, mission, operate, exposed"
102,"MET-MAPF: A Metamorphic Testing Approach for Multi-Agent Path Finding Algorithms,","2024,","The Multi-Agent Path Finding (MAPF) problem, i.e., the scheduling of multiple agents to reach their destinations, has been widely investigated. Testing MAPF systems is challenging, due to the complexity and variety of scenarios and the agents’ distribution and interaction. Moreover, MAPF testing suffers from the oracle problem, i.e., it is not always clear whether a test shows a failure or not. Indeed, only considering whether the agents reach their destinations without collision is not sufficient. Other properties related to the “quality” of the generated paths should be assessed, e.g., an agent should not follow an unnecessarily long path. To tackle this issue, this paper proposes MET-MAPF, a Metamorphic Testing approach for MAPF systems. We identified ten Metamorphic Relations (MRs) that a MAPF system should guarantee, designed over the environment in which agents operate, the behaviour of the single agents, and the interactions among agents. Starting from the different MRs, MET-MAPF automatically generates test cases addressing them, so possibly exposing different types of failures. Experimental results show that MET-MAPF can indeed find MR violations not exposed by approaches that only consider the completion of the mission as test oracle. Moreover, experiments show that different MRs expose different types of violations.,","Association for Computing Machinery,","qbs, query, patterns, commerce, data, web, identification, types, large, relational, resorted, prestashop, gmail, ordering, hbo, email, analytic, systems, called, metamorphic"
103,"Metamorphic relation patterns for query-based systems,","2019,","Searching and displaying data based on user queries is a key feature of most software applications such as information systems, web portals, web APIs, and data analytic platforms. The large volume of data managed by these types of systems, henceforth called query-based systems (QBS), makes them extremely hard to test due to the difficulty to assess whether the output of a query is correct, the so-called oracle problem. Metamorphic testing has proved to be a very effective approach to alleviate the oracle problem in QBS, enabling the detection of bugs in data repositories, large e-commerce sites, and some of the most used software applications worldwide such as Google Search and YouTube. We have observed, however, that the metamorphic relations used to test different types of QBS are very similar, regardless of their domain, since all of them exploit standard query features such as filtering and ordering. Inspired by this finding, in this paper we present a catalogue of metamorphic relation patterns to assist testers in the identification and inference of metamorphic relations in QBS. For the definition of the patterns we resorted to the root of most query languages: relational algebra. We show how the proposed patterns help in the identification of metamorphic relations in the e-commerce platform PrestaShop, the email service Gmail, and the mobile application of video streaming HBO.,","IEEE Press,","mrc, labels, linguistic, reference, validation, language, software, capabilities, properties, consistency, understanding, reveal, checking, method, based, concealed, picture, sensible, supplement, annotated"
104,"Validation on machine reading comprehension software without annotated labels: a property-based method,","2021,","Machine Reading Comprehension (MRC) in Natural Language Processing has seen great progress recently. But almost all the current MRC software is validated with a reference-based method, which requires well-annotated labels for test cases and tests the software by checking the consistency between the labels and the outputs. However, labeling test cases of MRC could be very costly due to their complexity, which makes reference-based validation hard to be extensible and sufficient. Furthermore, solely checking the consistency and measuring the overall score may not be sensible and flexible for assessing the language understanding capability. In this paper, we propose a property-based validation method for MRC software with Metamorphic Testing to supplement the reference-based validation. It does not refer to the labels and hence can make much data available for testing. Besides, it validates MRC software against various linguistic properties to give a specific and in-depth picture on linguistic capabilities of MRC software. Comprehensive experimental results show that our method can successfully reveal violations to the target linguistic properties without the labels. Moreover, it can reveal problems that have been concealed by the traditional validation. Comparison according to the properties provides deeper and more concrete ideas about different language understanding capabilities of the MRC software.,","Association for Computing Machinery,","matching, vector, augmented, llm, metmap, false, generation, matches, databases, datasets, rag, cag, cached, cache, augmentations, misinformation, backbone, triplets, dissimilar, emphasize"
105,"MeTMaP: Metamorphic Testing for Detecting False Vector Matching Problems in LLM Augmented Generation,","2024,","Augmented generation techniques such as Retrieval-Augmented Generation (RAG) and Cache-Augmented Generation (CAG) have revolutionized the field by enhancing large language model (LLM) outputs with external knowledge and cached information. However, the integration of vector databases, which serve as a backbone for these augmentations, introduces critical challenges, particularly in ensuring accurate vector matching. False vector matching in these databases can significantly compromise the integrity and reliability of LLM outputs, leading to misinformation or erroneous responses. Despite the crucial impact of these issues, there is a notable research gap in methods to effectively detect and address false vector matches in LLM-augmented generation.This paper presents MeTMaP, a metamorphic testing framework developed to identify false vector matching in LLM-augmented generation systems. We derive eight metamorphic relations (MRs) from six NLP datasets, which form our method's core, based on the idea that semantically similar texts should match and dissimilar ones should not. MeTMaP uses these MRs to create sentence triplets for testing, simulating real-world matching scenarios. Our evaluation of MeTMaP over 203 vector matching configurations, involving 29 embedding models and 7 distance metrics, uncovers significant inaccuracies. The results, showing a maximum accuracy of only 41.51% on our tests compared to the original datasets, emphasize the widespread issue of false matches in vector matching methods and the critical need for effective detection and mitigation in LLM-augmented applications.,","Association for Computing Machinery,","cr, coreference, resolution, resolve, expressions, task, different, patients, paths, path, patented, patches, patch, past, password, passing, passes, passed, pass, party"
106,"Testing Coreference Resolution Systems without Labeled Test Sets,","2023,",Coreference resolution (CR) is a task to resolve different expressions,"Association for Computing Machinery,","concurrent, conmt, programs, threads, interleaved, testing, mt, shorter, sharing, promoting, problem, oracle, composed, normally, novelty, baseline, brings, degree, determinism, unique"
107,"An Interleaving Guided Metamorphic Testing Approach for Concurrent Programs,","2023,","Concurrent programs are normally composed of multiple concurrent threads sharing memory space. These threads are often interleaved, which may lead to some non-determinism in execution results, even for the same program input. This poses huge challenges to the testing of concurrent programs, especially on the test result verification—that is, the prevalent existence of the oracle problem. In this article, we investigate the application of metamorphic testing (MT), a mainstream technique to address the oracle problem, into the testing of concurrent programs. Based on the unique features of interleaved executions in concurrent programming, we propose an extended notion of metamorphic relations, the core part of MT, which are particularly designed for the testing of concurrent programs. A comprehensive testing approach, namely ConMT, is thus developed and a tool is built to automate its implementation on concurrent programs written in Java. Empirical studies have been conducted to evaluate the performance of ConMT, and the experimental results show that in addition to addressing the oracle problem, ConMT outperforms the baseline traditional testing techniques with respect to a higher degree of automation, better bug detection capability, and shorter testing time. It is clear that ConMT can significantly improve the cost-effectiveness for the testing of concurrent programs and thus advances the state of the art in the field. The study also brings novelty into MT, hence promoting the fundamental research of software testing.,","Association for Computing Machinery,","dnn, frameworks, predictions, decisions, mt, defects, erroneous, existing, consistent, caused, dnns, input, images, mis, lens, successive, elucidate, pervasiveness, mutate, contemporary"
108,"Unveiling Hidden DNN Defects with Decision-Based Metamorphic Testing,","2023,","Contemporary DNN testing works are frequently conducted using metamorphic testing (MT). In general, de facto MT frameworks mutate DNN input images using semantics-preserving mutations and determine if DNNs can yield consistent predictions. Nevertheless, we find that DNNs may rely on erroneous decisions (certain components on the DNN inputs) to make predictions, which may still retain the outputs by chance. Such DNN defects would be neglected by existing MT frameworks. Erroneous decisions, however, would likely result in successive mis-predictions over diverse images that may exist in real-life scenarios. This research aims to unveil the pervasiveness of hidden DNN defects caused by incorrect DNN decisions (but retaining consistent DNN predictions). To do so, we tailor and optimize modern eXplainable AI (XAI) techniques to identify visual concepts that represent regions in an input image upon which the DNN makes predictions. Then, we extend existing MT-based DNN testing frameworks to check the consistency of DNN decisions made over a test input and its mutated inputs. Our evaluation shows that existing MT frameworks are oblivious to a considerable number of DNN defects caused by erroneous decisions. We conduct human evaluations to justify the validity of our findings and to elucidate their characteristics. Through the lens of DNN decision-based metamorphic relations, we re-examine the effectiveness of metamorphic transformations proposed by existing MT frameworks. We summarize lessons from this study, which can provide insights and guidelines for future DNN testing.,","Association for Computing Machinery,","asr, asrtest, dnn, systems, improve, implement, performance, behaviors, end, recognition, driven, speeches, impurity, gini, inapplicable, lacking, families, application, testing, detect"
109,"ASRTest: automated testing for deep-neural-network-driven speech recognition systems,","2022,","With the rapid development of deep neural networks and end-to-end learning techniques, automatic speech recognition (ASR) systems have been deployed into our daily and assist in various tasks. However, despite their tremendous progress, ASR systems could also suffer from software defects and exhibit incorrect behaviors. While the nature of DNN makes conventional software testing techniques inapplicable for ASR systems, lacking diverse tests and oracle information further hinders their testing. In this paper, we propose and implement a testing approach, namely ASR, specifically for the DNN-driven ASR systems. ASRTest is built upon the theory of metamorphic testing. We first design the metamorphic relation for ASR systems and then implement three families of transformation operators that can simulate practical application scenarios to generate speeches. Furthermore, we adopt Gini impurity to guide the generation process and improve the testing efficiency. To validate the effectiveness of ASRTest, we apply ASRTest to four ASR models with four widely-used datasets. The results show that ASRTest can detect erroneous behaviors under different realistic application conditions efficiently and improve 19.1% recognition performance on average via retraining with the generated data. Also, we conduct a case study on an industrial ASR system to investigate the performance of ASRTest under the real usage scenario. The study shows that ASRTest can detect errors and improve the performance of DNN-driven ASR systems effectively.,","Association for Computing Machinery,","interpreters, interpretation, makes, motivates, saliency, restricts, transparency, map, different, decision, black, dnn, box, dnns, people, nature, relevant, form, providing, understand"
110,"One step further: evaluating interpreters using metamorphic testing,","2022,","The black-box nature of the Deep Neural Network (DNN) makes it difficult for people to understand why it makes a specific decision, which restricts its applications in critical tasks. Recently, many interpreters (interpretation methods) are proposed to improve the transparency of DNNs by providing relevant features in the form of a saliency map. However, different interpreters might provide different interpretation results for the same classification case, which motivates us to conduct the robustness evaluation of interpreters.","Association for Computing Machinery,","mozi, dbmss, equivalent, bugs, dbms, query, sql, configurations, specification, correctness, semantics, performance, compare, testing, various, 101, mariadb, posing, postgresql, intricacy"
113,"Mozi: Discovering DBMS Bugs via Configuration-Based Equivalent Transformation,","2024,","Testing database management systems (DBMSs) is a complex task. Traditional approaches, such as metamorphic testing, need a precise comprehension of the SQL specification to create diverse inputs with equivalent semantics. The vagueness and intricacy of the SQL specification make it challenging to accurately model query semantics, thereby posing difficulties in testing the correctness and performance of DBMSs. To address this, we propose Mozi, a framework that finds DBMS bugs via configuration-based equivalent transformation. The key idea behind Mozi is to compare the results of equivalent DBMSs with different configurations, rather than between semantically equivalent queries. The framework involves analyzing the query plan, changing configurations to transform the DBMS to an equivalent one, and re-executing the query to compare the results using various test oracles. For example, detecting differences in query results indicates correctness bugs, while observing faster execution times on the optimization-closed DBMS suggests performance bugs.We demonstrate the effectiveness of Mozi by evaluating it on four widely used DBMSs, namely MySQL, MariaDB, Clickhouse, and PostgreSQL. In the continuous testing, Mozi found a total of 101 previously unknown bugs, including 49 correctness and 52 performance bugs in four DBMSs. Among them, 90 bugs are confirmed and 57 bugs have been fixed. In addition, Mozi can be extended to other DBMS fuzzers for testing various types of bugs. With Mozi, testing DBMSs becomes simpler and more effective, potentially saving time and effort that would otherwise be spent on precisely modeling SQL specifications for testing purposes.,","Association for Computing Machinery,","translation, sentence, sit, machine, similar, sentences, political, 70, foreign, structures, word, structure, source, validating, robustness, difficult, constituency, syntactically, mistranslation, symptoms"
114,"Fuzzing Deep Learning Compilers with HirGen,","2023,",Deep Learning (DL) compilers are widely adopted to optimize advanced DL models for efficient deployment on diverse hardware.,"Association for Computing Machinery,","msf, multitest, perception, systems, modal, multi, sensor, fitness, point, realistic, test, object, ai, cases, critical, bringing, intricate, primarily, emphasis, concentrate"
115,"Leveraging mutants for automatic prediction of metamorphic relations using machine learning,","2019,","An oracle is used in software testing to derive the verdict (pass/fail) for a test case. Lack of precise test oracles is one of the major problems in software testing which can hinder judgements about quality. Metamorphic testing is an emerging technique which solves both the oracle problem and the test case generation problem by testing special forms of software requirements known as metamorphic requirements. However, manually deriving the metamorphic requirements for a given program requires a high level of domain expertise, is labor intensive and error prone. As an alternative, we consider the problem of automatic detection of metamorphic requirements using machine learning (ML). For this problem we can apply graph kernels and support vector machines (SVM). A significant problem for any ML approach is to obtain a large labeled training set of data (in this case programs) that generalises well. The main contribution of this paper is a general method to generate large volumes of synthetic training data which can improve ML assisted detection of metamorphic requirements. For training data synthesis we adopt mutation testing techniques. This research is the first to explore the area of data augmentation techniques for ML-based analysis of software code. We also have the goal to enhance black-box testing using white-box methodologies. Our results show that the mutants incorporated into the source code corpus not only efficiently scale the dataset size, but they can also improve the accuracy of classification models.,","Association for Computing Machinery,","bioinformatics, entity, lingpipe, bio, recognition, passed, mrs, test, failed, versions, faulty, testing, according, software, change, used, set, mt, determine, care"
116,"Structure-invariant testing for machine translation,","2020,","In recent years, machine translation software has increasingly been integrated into our daily lives. People routinely use machine translation for various applications, such as describing symptoms to a foreign doctor and reading political news in a foreign language. However, the complexity and intractability of neural machine translation (NMT) models that power modern machine translation make the robustness of these systems difficult to even assess, much less guarantee. Machine translation systems can return inferior results that lead to misunderstanding, medical misdiagnoses, threats to personal safety, or political conflicts. Despite its apparent importance, validating the robustness of machine translation systems is very difficult and has, therefore, been much under-explored.To tackle this challenge, we introduce structure-invariant testing (SIT), a novel metamorphic testing approach for validating machine translation software. Our key insight is that the translation results of ""similar"" source sentences should typically exhibit similar sentence structures. Specifically, SIT (1) generates similar source sentences by substituting one word in a given sentence with semantically similar, syntactically equivalent words; (2) represents sentence structure by syntax parse trees (obtained via constituency or dependency parsing); (3) reports sentence pairs whose structures differ quantitatively by more than some threshold. To evaluate SIT, we use it to test Google Translate and Bing Microsoft Translator with 200 source sentences as input, which led to 64 and 70 buggy issues with 69.5% and 70% top-1 accuracy, respectively. The translation errors are diverse, including under-translation, over-translation, incorrect modification, word/phrase mistranslation, and unclear logic.,","Association for Computing Machinery,","policy, policies, relaxations, action, easier, learned, bug, output, failure, particular, network, behavior, neural, correct, satisfying, defeats, bad, relaxation, games, manifested"
117,"MultiTest: Physical-Aware Object Insertion for Testing Multi-sensor Fusion Perception Systems,","2024,","Multi-sensor fusion stands as a pivotal technique in addressing numerous safety-critical tasks and applications, e.g., self-driving cars and automated robotic arms. With the continuous advancement in data-driven artificial intelligence (AI), MSF's potential for sensing and understanding intricate external environments has been further amplified, bringing a profound impact on intelligent systems and specifically on their perception systems. Similar to traditional software, adequate testing is also required for AI-enabled MSF systems. Yet, existing testing methods primarily concentrate on single-sensor perception systems (e.g., image-based and point cloud-based object detection systems). There remains a lack of emphasis on generating multi-modal test cases for MSF systems.To address these limitations, we design and implement MultiTest, a fitness-guided metamorphic testing method for complex MSF perception systems. MultiTest employs a physical-aware approach to synthesize realistic multi-modal object instances and insert them into critical positions of background images and point clouds. A fitness metric is designed to guide and boost the test generation process. We conduct extensive experiments with five SOTA perception systems to evaluate MultiTest from the perspectives of: (1) generated test cases' realism, (2) fault detection capabilities, and (3) performance improvement. The results show that MultiTest can generate realistic and modality-consistent test data and effectively detect hundreds of diverse faults of an MSF system under test. Moreover, retraining an MSF system on the test cases generated by MultiTest can improve the system's robustness. Our replication package and synthesized testing dataset are publicly available at https://sites.google.com/view/msftest.,","Association for Computing Machinery,","nlidbs, database, nlidb, utterances, teql, variations, neural, schemas, schema, sql, benchmarks, robustness, variants, manual, language, expert, world, requiring, queries, effort"
118,"Quality assurance of bioinformatics software: a case study of testing a biomedical text processing tool using metamorphic testing,","2018,","Bioinformatics software plays a very important role in making critical decisions within many areas including medicine and health care. However, most of the research is directed towards developing tools, and little time and effort is spent on testing the software to assure its quality. In testing, a test oracle is used to determine whether a test is passed or failed during testing, and unfortunately, for much of bioinformatics software, the exact expected outcomes are not well defined. Thus, the main challenge associated with conducting systematic testing on bioinformatics software is the oracle problem.Metamorphic testing (MT) is a technique used to test programs that face the oracle problem. MT uses metamorphic relations (MRs) to determine whether a test has passed or failed and specifies how the output should change according to a specific change made to the input. In this work, we use MT to test LingPipe, a tool for processing text using computational linguistics, often used in bioinformatics for bio-entity recognition from biomedical literature.First, we identify a set of MRs for testing any bio-entity recognition program. Then we develop a set of test cases that can be used to test LingPipe's bio-entity recognition functionality using these MRs. To evaluate the effectiveness of this testing process, we automatically generate a set of faulty versions of LingPipe. According to our analysis of the experimental results, we observe that our MRs can detect the majority of these faulty versions, which shows the utility of this testing technique for quality assurance of bioinformatics software.,","Association for Computing Machinery,","metaic, ic, image, captioning, object, errors, objects, omission, caption, incorrect, exhibit, dataset, reports, reported, successfully, inserts, ms, notch, perceiving, resizing"
119,"Metamorphic relations via relaxations: an approach to obtain oracles for action-policy testing,","2022,","Testing is a promising way to gain trust in a learned action policy π, in particular if π is a neural network. A “bug” in this context constitutes undesirable or fatal policy behavior, e.g., satisfying a failure condition. But how do we distinguish whether such behavior is due to bad policy decisions, or whether it is actually unavoidable under the given circumstances? This requires knowledge about optimal solutions, which defeats the scalability of testing. Related problems occur in software testing when the correct program output is not known. Metamorphic testing addresses this issue through metamorphic relations, specifying how a given change to the input should affect the output, thus providing an oracle for the correct output. Yet, how do we obtain such metamorphic relations for action policies? Here, we show that the well explored concept of relaxations in the Artificial Intelligence community can serve this purpose. In particular, if state s′ is a relaxation of state s, i.e., s′ is easier to solve than s, and π fails on easier s′ but does not fail on harder s, then we know that π contains a bug manifested on s′. We contribute the first exploration of this idea in the context of failure testing of neural network policies π learned by reinforcement learning in simulated environments. We design fuzzing strategies for test-case generation as well as metamorphic oracles leveraging simple, manually designed relaxations. In experiments on three single-agent games, our technology is able to effectively identify true bugs, i.e., avoidable failures of π, which has not been possible until now.,","Association for Computing Machinery,","ods, metaod, images, object, od, looking, synthetic, map, workflow, results, objects, score, cause, despite, erroneous, detection, practical, natural, designed, design"
120,"MT-teql: evaluating and augmenting neural NLIDB on real-world linguistic and schema variations,","2021,","Natural Language Interface to Database (NLIDB) translates human utterances into SQL queries and enables database interactions for non-expert users. Recently, neural network models have become a major approach to implementing NLIDB. However, neural NLIDB faces challenges due to variations in natural language and database schema design. For instance, one user intent or database conceptual model can be expressed in various forms. However, existing benchmarks, using hold-out datasets, cannot provide thorough understanding of how good neural NLIDBs really are in real-world situations and its robustness against such variations. A key difficulty is to annotate SQL queries for inputs under real-world variations, requiring considerable manual effort and expert knowledge.To systematically assess the robustness of neural NLIDBs without extensive manual effort, we propose MT-Teql, a unified framework to benchmark NLIDBs against real-world language and schema variations. Inspired by recent advances in DBMS metamorphic testing, MT-Teql implements semantics-preserving transformations on utterances and database schemas to generate their variants. NLIDBs can thus be examined for robustness utilizing utterances/schemas and their variants without requiring manual intervention.We benchmarked nine neural NLIDBs using 62,430 inputs and identified 15,433 defects. We analyzed potential root causes of defects and conducted a user study to show how MT-Teql can assist developers to systematically assess NLIDBs. We further show that the transformed (error-triggering) inputs can be used to augment popular NLIDBs and eliminate 46.5%(±5.0%) errors made by them without compromising their accuracy on standard benchmarks. We summarize lessons from this study that can provide insights to select and design NLIDBs that fit particular usage scenarios.,","VLDB Endowment,","rome, ic, objects, image, captioning, images, object, melting, unnatural, caption, generated, generate, remove, sota, description, cases, microsoft, test, erroneous, pairs"
121,"Automated testing of image captioning systems,","2022,","Image captioning (IC) systems, which automatically generate a text description of the salient objects in an image (real or synthetic), have seen great progress over the past few years due to the development of deep neural networks. IC plays an indispensable role in human society, for example, labeling massive photos for scientific studies and assisting visually-impaired people in perceiving the world. However, even the top-notch IC systems, such as Microsoft Azure Cognitive Services and IBM Image Caption Generator, may return incorrect results, leading to the omission of important objects, deep misunderstanding, and threats to personal safety. To address this problem, we propose MetaIC, the first metamorphic testing approach to validate IC systems. Our core idea is that the object names should exhibit directional changes after object insertion. Specifically, MetaIC (1) extracts objects from existing images to construct an object corpus; (2) inserts an object into an image via novel object resizing and location tuning algorithms; and (3) reports image pairs whose captions do not exhibit differences in an expected way. In our evaluation, we use MetaIC to test one widely-adopted image captioning API and five state-of-the-art (SOTA) image captioning models. Using 1,000 seeds, MetaIC successfully reports 16,825 erroneous issues with high precision (84.9%-98.4%). There are three kinds of errors: misclassification, omission, and incorrect quantity. We visualize the errors reported by MetaIC, which shows that flexible overlapping setting facilitates IC testing by increasing and diversifying the reported errors. In addition, MetaIC can be further generalized to detect label errors in the training dataset, which has successfully detected 151 incorrect labels in MS COCO Caption, a standard dataset in image captioning.,","Association for Computing Machinery,","counters, model, formulas, bounded, testmc, consists, counter, counting, suite, exhaustive, probabilistic, tools, advances, exact, led, principles, bugs, input, tool, complementary"
122,"Metamorphic object insertion for testing object detection systems,","2021,","Recent advances in deep neural networks (DNNs) have led to object detectors (ODs) that can rapidly process pictures or videos, and recognize the objects that they contain. Despite the promising progress by industrial manufacturers such as Amazon and Google in commercializing deep learning-based ODs as a standard computer vision service, ODs --- similar to traditional software --- may still produce incorrect results. These errors, in turn, can lead to severe negative outcomes for the users. For instance, an autonomous driving system that fails to detect pedestrians can cause accidents or even fatalities. However, despite their importance, principled, systematic methods for testing ODs do not yet exist.To fill this critical gap, we introduce the design and realization of MetaOD, a metamorphic testing system specifically designed for ODs to effectively uncover erroneous detection results. To this end, we (1) synthesize natural-looking images by inserting extra object instances into background images, and (2) design metamorphic conditions asserting the equivalence of OD results between the original and synthetic images after excluding the prediction results on the inserted objects. MetaOD is designed as a streamlined workflow that performs object extraction, selection, and insertion. We develop a set of practical techniques to realize an effective workflow, and generate diverse, natural-looking images for testing. Evaluated on four commercial OD services and four pretrained models provided by the TensorFlow API, MetaOD found tens of thousands of detection failures. To further demonstrate the practical usage of MetaOD, we use the synthetic images that cause erroneous detection results to retrain the model. Our results show that the model performance is significantly increased, from an mAP score of 9.3 to an mAP score of 10.5.,","Association for Computing Machinery,","ocean, tidal, tap, software, astronomical, modelling, variables, physical, systems, mt, hourly, projections, timeseries, earth, nonlinear, climate, periodic, sea, forecasts, tide"
123,"ROME: Testing Image Captioning Systems via Recursive Object Melting,","2023,","Image captioning (IC) systems aim to generate a text description of the salient objects in an image. In recent years, IC systems have been increasingly integrated into our daily lives, such as assistance for visually-impaired people and description generation in Microsoft Powerpoint. However, even the cutting-edge IC systems (e.g., Microsoft Azure Cognitive Services) and algorithms (e.g., OFA) could produce erroneous captions, leading to incorrect captioning of important objects, misunderstanding, and threats to personal safety. The existing testing approaches either fail to handle the complex form of IC system output (i.e., sentences in natural language) or generate unnatural images as test cases. To address these problems, we introduce Recursive Object MElting (ROME), a novel metamorphic testing approach for validating IC systems. Different from existing approaches that generate test cases by inserting objects, which easily make the generated images unnatural, ROME melts (i.e., remove and inpaint) objects. ROME assumes that the object set in the caption of an image includes the object set in the caption of a generated image after object melting. Given an image, ROME can recursively remove its objects to generate different pairs of images. We use ROME to test one widely-adopted image captioning API and four state-of-the-art (SOTA) algorithms. The results show that the test cases generated by ROME look much more natural than the SOTA IC testing approach and they achieve comparable naturalness to the original images. Meanwhile, by generating test pairs using 226 seed images, ROME reports a total of 9,121 erroneous issues with high precision (86.47%-92.17%). In addition, we further utilize the test cases generated by ROME to retrain the Oscar, which improves its performance across multiple evaluation metrics.,","Association for Computing Machinery,","tax, preparation, legal, software, specifications, income, similar, trustworthiness, behavior, debugging, form, individual, case, relations, nonrobust, properties, schedule, posit, eligibility, qualifying"
124,"TestMC: testing model counters using differential and metamorphic testing,","2021,","Model counting is the problem for finding the number of solutions to a formula over a bounded universe. This is a classic problem in computer science that has seen many recent advances in techniques and tools that tackle it. These advances have led to applications of model counting in many domains, e.g., quantitative program analysis, reliability, and security. Given the sheer complexity of the underlying problem, today's model counters employ sophisticated algorithms and heuristics, which result in complex tools that must be heavily optimized. Therefore, establishing the correctness of implementations of model counters necessitates rigorous testing. This experience paper presents an empirical study on testing industrial strength model counters by applying the principles of differential and metamorphic testing together with bounded exhaustive input generation and input minimization. We embody these principles in the TestMC framework, and apply it to test four model counters, including three state-of-the-art model counters from three different classes. Specifically, we test the exact model counters projMC and dSharp, the probabilistic exact model counter Ganak, and the probabilistic approximate model counter ApproxMC. As subjects, we use three complementary test suites of input formulas. One suite consists of larger formulas that are derived from a wide range of real-world software design problems. The second suite consists of a bounded exhaustive set of small formulas that TestMC generated. The third suite consists of formulas generated using an off-the-shelf CNF fuzzer. TestMC found bugs in three of the four subject model counters. The bugs led to crashes, segmentation faults, incorrect model counts, and resource exhaustion by the solvers. Two of the tools were corrected subsequent to the bug reports we submitted based on our study, whereas the bugs we reported in the third tool were deemed by the tool authors to not require a fix.,","Association for Computing Machinery,","stp, translations, translation, erroneous, sentence, art, state, unique, machine, pruning, syntactic, bing, translator, tree, systems, techniques, translate, microsoft, sentences, semantics"
125,"Testing ocean software with metamorphic testing,","2023,","Advancing ocean science has a significant impact to the development of the world, from operating a safe navigation for vessels to maintaining a healthy and diverse ocean ecosystem. Various ocean software systems have been extensively adopted for different purposes, for instance, predicting hourly sea level elevation across shorelines, simulating large-scale ocean circulations, as well as integrating into Earth system models for weather forecasts and climate projections. Regardless of their significance, guaranteeing the trustworthiness of ocean software and modelling systems is a long-standing challenge. The testing of ocean software suffers a lot from the so-called oracle problem, which refers to the absence of test oracles mainly due to the nonlinear interactions of multiple physical variables and the high complexity in computation. In the ocean, observed tidal signals are distorted by non-deterministic physical variables, hindering us from knowing the ""true"" astronomical tidal constituents existing in the timeseries. In this paper, we present how to test tidal analysis and prediction (TAP) software based on metamorphic testing (MT), a simple yet effective testing approach to the oracle problem. In particular, we construct metamorphic relations from the periodic property of astronomical tide, and then use them to successfully detect a real-life defect in an open-source TAP software. We also conduct a series of experiments to further demonstrate the applicability and effectiveness of MT in the testing of TAP software. Our study not only justifies the potential of MT in testing more complex ocean software and modelling systems, but also can be expanded to assess and improve the quality of a broader range of scientific simulation software systems.,","Association for Computing Machinery,","dl, compilers, dnn, ir, executables, hardware, high, prosperous, compilation, error, compilations, level, models, variants, triggering, inputs, specifications, platform, erroneous, diverse"
126,"Metamorphic Testing and Debugging of Tax Preparation Software,","2023,","This paper presents a data-driven debugging framework to improve the trustworthiness of US tax preparation software systems. Given the legal implications of bugs in such software on its users, ensuring compliance and trustworthiness of tax preparation software is of paramount importance. The key barriers in developing debugging aids for tax preparation systems are the unavailability of explicit specifications and the difficulty of obtaining oracles. We posit that, since the US tax law adheres to the legal doctrine of precedent, the specifications about the outcome of tax preparation software for an individual taxpayer must be viewed in comparison with individuals that are deemed similar. Consequently, these specifications are naturally available as properties on the software requiring similar inputs provide similar outputs. Inspired by the metamorphic testing paradigm, we dub these relations metamorphic relations as they relate to structurally modified inputs.In collaboration with legal and tax experts, we explicated metamorphic relations for a set of challenging properties from various US Internal Revenue Services (IRS) publications including Form 1040 (U.S. Individual Income Tax Return), Publication 596 (Earned Income Tax Credit), Schedule 8812 (Qualifying Children and Other Dependents), and Form 8863 (Education Credits). While we focus on an open-source tax preparation software for our case study, the proposed framework can be readily extended to other commercial software. We develop a randomized test-case generation strategy to systematically validate the correctness of tax preparation software guided by metamorphic relations. We further aid this test-case generation by visually explaining the behavior of software on suspicious instances using easy-to-interpret decision-tree models. Our tool uncovered several accountability bugs with varying severity ranging from nonrobust behavior in corner-cases (unreliable behavior when tax returns are close to zero) to missing eligibility conditions in the updated versions of software.,","IEEE Press,","moderation, content, textual, mttm, toxic, efr, malicious, evade, commercial, software, users, art, state, algorithms, propagate, obtains, enthusiastically, link1, teen, 91"
127,"Machine Translation Testing via Syntactic Tree Pruning,","2024,","Machine translation systems have been widely adopted in our daily life, making life easier and more convenient. Unfortunately, erroneous translations may result in severe consequences, such as financial losses. This requires to improve the accuracy and the reliability of machine translation systems. However, it is challenging to test machine translation systems because of the complexity and intractability of the underlying neural models. To tackle these challenges, we propose a novel metamorphic testing approach by syntactic tree pruning (STP) to validate machine translation systems. Our key insight is that a pruned sentence should have similar crucial semantics compared with the original sentence. Specifically, STP (1) proposes a core semantics-preserving pruning strategy by basic sentence structures and dependency relations on the level of syntactic tree representation, (2) generates source sentence pairs based on the metamorphic relation, and (3) reports suspicious issues whose translations break the consistency property by a bag-of-words model. We further evaluate STP on two state-of-the-art machine translation systems (i.e., Google Translate and Bing Microsoft Translator) with 1,200 source sentences as inputs. The results show that STP accurately finds 5,073 unique erroneous translations in Google Translate and 5,100 unique erroneous translations in Bing Microsoft Translator (400% more than state-of-the-art techniques), with 64.5% and 65.4% precision, respectively. The reported erroneous translations vary in types and more than 90% of them are not found by state-of-the-art techniques. There are 9,393 erroneous translations unique to STP, which is 711.9% more than state-of-the-art techniques. Moreover, STP is quite effective in detecting translation errors for the original sentences with a recall reaching 74.0%, improving state-of-the-art techniques by 55.1% on average.,","Association for Computing Machinery,","multiple, outputs, source, cases, mr, test, note, alignment, heuristic, simultaneously, follow, programs, type, property, obtain, mrs, program, designed, information, aligned"
128,"Metamorphic Testing of Deep Learning Compilers,","2022,","The prosperous trend of deploying deep neural network (DNN) models to diverse hardware platforms has boosted the development of deep learning (DL) compilers. DL compilers take the high-level DNN model specifications as input and generate optimized DNN executables for diverse hardware architectures like CPUs, GPUs, and various hardware accelerators. Compiling DNN models into high-efficiency executables is not easy: the compilation procedure often involves converting high-level model specifications into several different intermediate representations (IR), e.g., graph IR and operator IR, and performing rule-based or learning-based optimizations from both platform-independent and platform-dependent perspectives. Despite the prosperous adoption of DL compilers in real-world scenarios, principled and systematic understanding toward the correctness of DL compilers does not yet exist. To fill this critical gap, this paper introduces MT-DLComp, a metamorphic testing framework specifically designed for DL compilers to effectively uncover erroneous compilations. Our approach leverages deliberately-designed metamorphic relations (MRs) to launch semantics-preserving mutations toward DNN models to generate their variants. This way, DL compilers can be automatically examined for compilation correctness utilizing DNN models and their variants without requiring manual intervention. We also develop a set of practical techniques to realize an effective workflow and localize identified error-revealing inputs. Real-world DL compilers exhibit a high level of engineering quality. Nevertheless, we detected over 435 inputs that can result in erroneous compilations in four popular DL compilers, all of which are industry-strength products maintained by Amazon, Facebook, Microsoft, and Google. While the discovered error-triggering inputs do not cause the DL compilers to crash directly, they can lead to the generation of incorrect DNN executables. With substantial manual effort and help from the DL compiler developers, we uncovered four bugs in these DL compilers by debugging them using the error-triggering inputs. Our proposed testing frameworks and findings can be used to guide developers in their efforts to improve DL compilers.,","Association for Computing Machinery,","translation, comparison, closure, word, output, mts, input, errors, follow, grained, mtss, existing, f1, fine, rigorous, score, violation, works, increase, limitations"
129,"MTTM: Metamorphic Testing for Textual Content Moderation Software,","2023,","The exponential growth of social media platforms such as Twitter and Facebook has revolutionized textual communication and textual content publication in human society. However, they have been increasingly exploited to propagate toxic content, such as hate speech, malicious advertisement, and pornography, which can lead to highly negative impacts (e.g., harmful effects on teen mental health). Researchers and practitioners have been enthusiastically developing and extensively deploying textual content moderation software to address this problem. However, we find that malicious users can evade moderation by changing only a few words in the toxic content. Moreover, modern content moderation software's performance against malicious inputs remains underexplored. To this end, we propose MTTM, a Metamorphic Testing framework for Textual content Moderation software. Specifically, we conduct a pilot study on 2, 000 text messages collected from real users and summarize eleven metamorphic relations across three perturbation levels: character, word, and sentence. MTTM employs these metamorphic relations on toxic textual contents to generate test cases, which are still toxic yet likely to evade moderation. In our evaluation, we employ MTTM to test three commercial textual content moderation software and two state-of-the-art moderation algorithms against three kinds of toxic content. The results show that MTTM achieves up to 83.9%, 51%, and 82.5% error finding rates (EFR) when testing commercial moderation software provided by Google, Baidu, and Huawei, respectively, and it obtains up to 91.2% EFR when testing the state-of-the-art algorithms from the academy. In addition, we leverage the test cases generated by MTTM to retrain the model we explored, which largely improves model robustness (0% ~ 5.9% EFR) while maintaining the accuracy on the original test set. A demo can be found in this link1.,","IEEE Press,","anomalies, deepfake, model, fairness, dl, ai, makeup, male, mesoinception, female, examine, work, detection, input, potential, images, eyeshadows, unfair, population, lipsticks"
130,"Harnessing multiple source test cases in metamorphic testing: a case study in bioinformatics,","2017,","Metamorphic testing (MT) has been applied to software verification, validation and quality assessment. In most previous studies, research has focused on deriving metamorphic relations (MRs) such that the input of one or more follow-up test cases is generated from one source test case. We note that some programs under test (PUT) naturally take multiple inputs and process them simultaneously to generate multiple outputs. This type of programs are common in the field of big data analysis and bioinformatics. This means, in the source execution of the program, we can obtain multiple outputs from multiple source test cases. Here we consider a type of MR in which multiple follow-up test cases are generated from multiple source test cases simultaneously. We hypothesise that harnessing the outputs from multiple source test cases enables us to obtain additional information about the PUT, and therefore allows us to construct more effective MRs. In this paper, we designed a new MR to test a popular RNA sequence alignment program. Since the MR was designed based on a desirable property of the PUT (which uses a complex heuristic algorithm) rather than a necessary property, violation of this MR indicates the program outputs deviate from user expectation, hence this MR can be used for assessing the quality of the outputs. Furthermore, we note that outputs of the follow-up test cases allow us to putatively assign alignment information to some sequences that were not aligned in the source test cases, hence potentially identifying and correcting these 'false negative' outputs. We believe this case study provides important insight into designing MRs based on multiple source test cases, and how testing results can be used to improve the performance of some heuristic-based programs.,","IEEE Press,","deeproad, driving, scenes, images, dnn, systems, autonomous, weather, based, input, synthetic, consistency, conditions, automatically, second, behaviors, techniques, networks, training, validate"
131,"Word Closure-Based Metamorphic Testing for Machine Translation,","2024,","With the wide application of machine translation, the testing of Machine Translation Systems (MTSs) has attracted much attention. Recent works apply Metamorphic Testing (MT) to address the oracle problem in MTS testing. Existing MT methods for MTS generally follow the workflow of input transformation and output relation comparison, which generates a follow-up input sentence by mutating the source input and compares the source and follow-up output translations to detect translation errors, respectively. These methods use various input transformations to generate the test case pairs and have successfully triggered numerous translation errors. However, they have limitations in performing fine-grained and rigorous output relation comparison and thus may report many false alarms and miss many true errors. In this paper, we propose a word closure-based output comparison method to address the limitations of the existing MTS MT methods. We first propose word closure as a new comparison unit, where each closure includes a group of correlated input and output words in the test case pair. Word closures suggest the linkages between the appropriate fragment in the source output translation and its counterpart in the follow-up output for comparison. Next, we compare the semantics on the level of word closure to identify the translation errors. In this way, we perform a fine-grained and rigorous semantic comparison for the outputs and thus realize more effective violation identification. We evaluate our method with the test cases generated by five existing input transformations and the translation outputs from three popular MTSs. Results show that our method significantly outperforms the existing works in violation identification by improving the precision and recall and achieving an average increase of 29.9% in F1 score. It also helps to increase the F1 score of translation error localization by 35.9%.,","Association for Computing Machinery,","crashing, bugs, genie, functional, apps, non, app, fully, android, crash, automated, releases, property, tests, gui, 34, manual, user, detected, independent"
132,"Fairness evaluation in deepfake detection models using metamorphic testing,","2023,","Fairness of deepfake detectors in the presence of anomalies are not well investigated, especially if those anomalies are more prominent in either male or female subjects. The primary motivation for this work is to evaluate how deepfake detection model behaves under such anomalies. However, due to the black-box nature of deep learning (DL) and artificial intelligence (AI) systems, it is hard to predict the performance of a model when the input data is modified. Crucially, if this defect is not addressed properly, it will adversely affect the fairness of the model and result in discrimination of certain sub-population unintentionally. Therefore, the objective of this work is to adopt metamorphic testing to examine the reliability of the selected deepfake detection model, and how the transformation of input variation places influence on the output. We have chosen MesoInception-4, a state-of-the-art deepfake detection model, as the target model and makeup as the anomalies. Makeups are applied through utilizing the Dlib library to obtain the 68 facial landmarks prior to filling in the RGB values. Metamorphic relations are derived based on the notion that realistic perturbations of the input images, such as makeup, involving eyeliners, eyeshadows, blushes, and lipsticks (which are common cosmetic appearance) applied to male and female images, should not alter the output of the model by a huge margin. Furthermore, we narrow down the scope to focus on revealing potential gender biases in DL and AI systems. Specifically, we are interested to examine whether MesoInception-4 model produces unfair decisions, which should be considered as a consequence of robustness issues. The findings from our work have the potential to pave the way for new research directions in the quality assurance and fairness in DL and AI systems.,","Association for Computing Machinery,","web, apis, spotify, api, albums, total, output, mrop, result, metamorphic, relation, relations, search, query, faults, issues, keyword, suppose, approach, reported"
133,"DeepRoad: GAN-based metamorphic testing and input validation framework for autonomous driving systems,","2018,","While Deep Neural Networks (DNNs) have established the fundamentals of image-based autonomous driving systems, they may exhibit erroneous behaviors and cause fatal accidents. To address the safety issues in autonomous driving systems, a recent set of testing techniques have been designed to automatically generate artificial driving scenes to enrich test suite, e.g., generating new input images transformed from the original ones. However, these techniques are insufficient due to two limitations: first, many such synthetic images often lack diversity of driving scenes, and hence compromise the resulting efficacy and reliability. Second, for machine-learning-based systems, a mismatch between training and application domain can dramatically degrade system accuracy, such that it is necessary to validate inputs for improving system robustness.  In this paper, we propose DeepRoad, an unsupervised DNN-based framework for automatically testing the consistency of DNN-based autonomous driving systems and online validation. First, DeepRoad automatically synthesizes large amounts of diverse driving scenes without using image transformation rules (e.g. scale, shear and rotation). In particular, DeepRoad is able to produce driving scenes with various weather conditions (including those with rather extreme conditions) by applying Generative Adversarial Networks (GANs) along with the corresponding real-world weather scenes. Second, DeepRoad utilizes metamorphic testing techniques to check the consistency of such systems using synthetic images. Third, DeepRoad validates input images for DNN-based systems by measuring the distance of the input and training images using their VGGNet features. We implement DeepRoad to test three well-recognized DNN-based autonomous driving systems in Udacity self-driving car challenge. The experimental results demonstrate that DeepRoad can detect thousands of inconsistent behaviors for these systems, and effectively validate input images to potentially enhance the system robustness as well.,","Association for Computing Machinery,","source, test, generation, cases, case, testing, fault, effectiveness, metamorphic, impact, random, finding, coverage, systematic, mettester, branch, 77, methods, repositories, seeds"
134,"Fully automated functional fuzzing of Android apps for detecting non-crashing logic bugs,","2021,","Android apps are GUI-based event-driven software and have become ubiquitous in recent years. Obviously, functional correctness is critical for an app’s success. However, in addition to crash bugs, non-crashing functional bugs (in short as “non-crashing bugs” in this work) like inadvertent function failures, silent user data lost and incorrect display information are prevalent, even in popular, well-tested apps. These non-crashing functional bugs are usually caused by program logic errors and manifest themselves on the graphic user interfaces (GUIs). In practice, such bugs pose significant challenges in effectively detecting them because (1) current practices heavily rely on expensive, small-scale manual validation (the lack of automation); and (2) modern fully automated testing has been limited to crash bugs (the lack of test oracles). This paper fills this gap by introducing independent view fuzzing, a novel, fully automated approach for detecting non-crashing functional bugs in Android apps. Inspired by metamorphic testing, our key insight is to leverage the commonly-held independent view property of Android apps to manufacture property-preserving mutant tests from a set of seed tests that validate certain app properties. The mutated tests help exercise the tested apps under additional, adverse conditions. Any property violations indicate likely functional bugs for further manual confirmation. We have realized our approach as an automated, end-to-end functional fuzzing tool, Genie. Given an app, (1) Genie automatically detects non-crashing bugs without requiring human-provided tests and oracles (thus fully automated); and (2) the detected non-crashing bugs are diverse (thus general and not limited to specific functional properties), which set Genie apart from prior work. We have evaluated Genie on 12 real-world Android apps and successfully uncovered 34 previously unknown non-crashing bugs in their latest releases — all have been confirmed, and 22 have already been fixed. Most of the detected bugs are nontrivial and have escaped developer (and user) testing for at least one year and affected many app releases, thus clearly demonstrating Genie’s effectiveness. According to our analysis, Genie achieves a reasonable true positive rate of 40.9%, while these 34 non-crashing bugs could not be detected by prior fully automated GUI testing tools (as our evaluation confirms). Thus, our work complements and enhances existing manual testing and fully automated testing for crash bugs.,","Association for Computing Machinery,","theory, graph, test, testing, applications, expensive, oracle, metamorphic, problems, succeeded, explains, mathematics, rigid, alternate, shortest, time, simplify, oracles, process, numeric"
136,Metamorphic Testing of RESTful Web APIs,2018,"Web Application Programming Interfaces (APIs) specify how to access services and data over the network, typically using Web services. Web APIs are rapidly proliferating as a key element to foster reusability, integration, and innovation, enabling new consumption models such as mobile or smart TV apps. Companies such as Facebook, Twitter, Google, eBay or Netflix receive billions of API calls every day from thousands of different third-party applications and devices, which constitutes more than half of their total traffic. As Web APIs are progressively becoming the cornerstone of software integration, their validation is getting more critical. In this context, the fast detection of bugs is of utmost importance to increase the quality of internal products and third-party applications. However, testing Web APIs is challenging mainly due to the difficulty to assess whether the output of an API call is correct, i.e., the oracle problem. For instance, consider the Web API of the popular music streaming service Spotify. Suppose a search for albums with the query ""redhouse"" returning 21 total matches: Is this output correct? Do all the albums in the result set contain the keyword? Are there any albums containing the keyword not included in the result set? Answering these questions is difficult, even with small result sets, and often infeasible when the results are counted by thousands or millions. Metamorphic testing alleviates the oracle problem by providing an alternative when the expected output of a test execution is complex or unknown. Rather than checking the output of an individual program execution, metamorphic testing checks whether multiple executions of the program under test fulfil certain necessary properties called metamorphic relations. For instance, consider the following metamorphic relation in Spotify: two searches for albums with the same query should return the same number of total results regardless of the size of pagination. Suppose that a new Spotify search is performed using the exact same query as before and increasing the maximum number of results per page from 20 (default value) to 50: This search returns 27 total albums (6 more matches than in the previous search), which reveals a bug. This is an example of a real and reproducible fault detected using the approach presented in this paper and reported to Spotify. According to Spotify developers, it was a regression fault caused by a fix with undesired side effects. In this paper [1], we present a metamorphic testing approach for the automated detection of faults in RESTful Web APIs (henceforth also referred to as simply Web APIs). We introduce the concept of metamorphic relation output patterns. A Metamorphic Relation Output Pattern (MROP) defines an abstract output relation typically identified in Web APIs, regardless of their application domain. Each MROP is defined in terms of set operations among test outputs such as equality, union, subset, or intersection. MROPs provide a helpful guide for the identification of metamorphic relations, broadening the scope of our work beyond a particular Web API. Based on the notion of MROP, a methodology is proposed for the application of the approach to any Web API following the REST architectural pattern. The approach was evaluated in several steps. First, we used the proposed methodology to identify 33 metamorphic relations in four Web APIs developed by undergraduate students. All the relations are instances of the proposed MROPs. Then, we assessed the effectiveness of the identified relations at revealing 317 automatically seeded faults (i.e., mutants) in the APIs under test. As a result, 302 seeded faults were detected, achieving a mutation score of 95.3%. Second, we evaluated the approach using real Web APIs and faults. In particular, we identified 20 metamorphic relations in the Web API of Spotify and 40 metamorphic relations in the Web API of YouTube. Each metamorphic relation was implemented and automatically executed using both random and manual test data. In total, 469K metamorphic tests were generated. As a result, 21 metamorphic relations were violated, and 11 issues revealed and reported (3 issues in Spotify and 8 issues in YouTube). To date, 10 of the reported issues have been either confirmed by the API developers or reproduced by other users supporting the effectiveness of our approach.",IEEE,"autonomous, avoidance, drones, metamorphic, relations, domain, implementation, testing, spots, gnc, gazebo, utilising, properties, alongside, systems, light, obstacle, detection, helps, weak"
137,Fault Detection Effectiveness of Source Test Case Generation Strategies for Metamorphic Testing,2018,"Metamorphic testing is a well known approach to tackle the oracle problem in software testing. This technique requires the use of source test cases that serve as seeds for the generation of follow-up test cases. Systematic design of test cases is crucial for the test quality. Thus, source test case generation strategy can make a big impact on the fault detection effectiveness of metamorphic testing. Most of the previous studies on metamorphic testing have used either random test data or existing test cases as source test cases. There has been limited research done on systematic source test case generation for metamorphic testing. This paper provides a comprehensive evaluation on the impact of source test case generation techniques on the fault finding effectiveness of metamorphic testing. We evaluated the effectiveness of line coverage, branch coverage, weak mutation and random test generation strategies for source test case generation. The experiments are conducted with 77 methods from 4 open source code repositories. Our results show that by systematically creating source test cases, we can significantly increase the fault finding effectiveness of metamorphic testing. Further, in this paper we introduce a simple metamorphic testing tool called ""METtester"" that we use to conduct metamorphic testing on these methods.",IEEE,"pattern, burnup, verification, output, calculation, numerical, physical, relation, metamorphic, identification, nuclide, received, nuclear, input, categories, examples, according, method, doubt, inflated"
138,Adopting Metamorphic Relations to Verify Non-Testable Graph theory Algorithms,2015,"Test oracles are playing a vital role in automated software testing to determine whether the test cases are succeeded or not. Designing the test cases become rigid in some areas of application testing due to the complexity and unavailability. Metamorphic testing emerged as an alternate to alleviate the test oracle problems in testing, by implementing metamorphic relations instead of test oracles. Many researchers were applied metamorphic testing to various real time applications like Machine Learning, bioinformatics, Network simulations, Computer graphics and compilers to overcome the test oracle problem and to feasible result verification. Graph Theory is a prominent non-numeric technology of mathematics and widely used in many gaming and other real time applications. Testing and verifying these combinatorial graph theory applications with test oracle is a very expensive and inaccurate process under many circumstances. In this paper we proposed metamorphic testing to address the problems of testing graph theory applications. This process employs the metamorphic relations of graph theory to simplify testing and alleviates the expensive test oracle utilization. Our case studies on shortest path and minimal spanning tree testing explains the applicability and advantages of metamorphic relations in the area of graph theory in detail.",IEEE,"sequencing, resources, cloud, testing, challenged, genomic, clinical, nonetheless, framework, genome, centres, discusses, suffers, demand, smaller, analyses, pipeline, metamorphic, implementing, suitable"
139,Test oracles based on metamorphic relations for image processing applications,2015,"Testing of image processing applications is a challenging job especially, when evaluating the correctness of output image. Generally, output images are evaluated manually by visual inspection carried out by an expert tester, which is the main hindrance in automation of testing process. Recently, statistical and metamorphic testing approaches are presented to automate output evaluation of image processing applications. The statistical method is dependent on availability of statistical distribution of output images, whereas metamorphic testing require more research efforts to make it widely used in practice. Metamorphic testing is a well-known technique to alleviate the test oracle problem and eliminates the required manual efforts by using relations of input and output images. Follow-up test cases are generated based on these relations and their expected output is evaluated. This paper addresses test oracle problem for image processing applications and demonstrates how properties of implementation under test can be adopted as metamorphic relations. We have studied general and specific metamorphic relations of morphological image operations such as dilation and erosion. Selection of metamorphic relations and their effectiveness by mutation analysis is demonstrated. The results show that metamorphic testing is useful for evaluation of output images in the absence of a perfect test oracle.",IEEE,"identity, map, minimize, function, cost, application, constructing, metamorphic, implementations, relation, finding, possible, test, known, oceanmodeling, subjected, rewarding, restrict, algorithms, tests"
140,Metamorphic Testing in Autonomous System Simulations,2022,"Metamorphic testing has proven to be effective for test case generation and fault detection in many domains. It is a software testing strategy that uses certain relations between input-output pairs of a program, referred to as metamorphic relations. This approach is relevant in the autonomous systems domain since it helps in cases where the outcome of a given test input may be difficult to determine. In this paper therefore, we provide an overview of metamorphic testing as well as an implementation in the autonomous systems domain. We implement an obstacle detection and avoidance task in autonomous drones utilising the GNC API alongside a simulation in Gazebo. Particularly, we describe properties and best practices that are crucial for the development of effective metamorphic relations. We also demonstrate two metamorphic relations for metamorphic testing of single and more than one drones, respectively. Our relations reveal several properties and some weak spots of both the implementation and the avoidance algorithm in the light of metamorphic testing. The results indicate that metamorphic testing has great potential in the autonomous systems domain and should be considered for quality assurance in this field.",IEEE,"dse, source, inputs, random, coverage, compared, use, fault, metamorphic, increases, improves, rate, test, relations, testing, code, tests, supportive, marginal, considerably"
141,An Identification Method of Image-based for Output Pattern of Metamorphic Relation in Burnup Calculation Program,2021,"It is challenging to verify the design and analysis software adequately for nuclear power areas because of the inflated cost, time-consuming benchmark problems development, and few verification examples. This situation is called the test oracle problem. Metamorphic testing cleverly combines the specific properties of physical equations and numerical algorithms with software verification. Without constructing numerical solutions or verification examples, it verifies the software by checking whether the input and output of multiple executions meet the metamorphic relations. Since metamorphic relation is the nature rules of physical models and numerical algorithms, it is not restricted to specific code implementation technology. Therefore, it is no doubt that metamorphic testing is a promising technique to alleviate the test oracle problem.Metamorphic relation is the key to metamorphic testing, which consists of input pattern and output pattern. The former can be obtained through manual analysis by industry experts, while the latter does not have a system identification method. An output pattern identification method based on the solution figure has been introduced here. Specifically, the input pattern is received by artificially analyzing the physical property of the program under test. Next, a group of test inputs has been generated according to such patterns. The calculation results are received after those inputs drive the program. Moreover, the function form of the output pattern is guided by the image of the results. Finally, metamorphic relation is constructed by input pattern and output pattern. For a demonstration of this method’s details, a nuclide burnup calculation code is employed here, namely NUIT. By investigating the resulting image of 3820 isotopes, their output pattern classification models have been established according to the burnup depth and nuclide density. It includes four categories and seventeen sub-categories. The verification of other burnup calculation codes can use these metamorphic relations directly. This technique can effectively avoid blindness and randomness in the metamorphic relation identification process. Besides, it can be used for verification in other nuclear professional fields, such as thermal-hydraulics and radiation protection. It would provide critical support for applying metamorphic testing.",IEEE,"relations, identify, metamorphic, reduced, attributes, identity, application, ocean, implementations, computational, modeling, function, previously, cost, complexity, minimizes, symmetries, orthogonal, penalize, rarely"
142,A Cloud-Based Framework for Applying Metamorphic Testing to a Bioinformatics Pipeline,2016,"Testing of bioinformatics software often suffers from the oracle problem, especially when testing software that analyses human genome sequencing data. Metamorphic testing has been proposed to alleviate the oracle problem. Nonetheless, smaller research or clinical centres may be challenged by the complexity and resources required to implement a suitable metamorphic testing framework in practice. This paper presents a case study on how a cloud-based metamorphic testing framework can be applied to a widely used genomic sequencing pipeline, and discusses the future of implementing large-scale on-demand automated metamorphic testing using cloud-based resources.",IEEE,"unsupervised, configuration, bayesian, learning, optimization, clustering, configurations, numerous, systems, datasets, autoconf, streamline, 89, hyperparameters, configuring, process, expertise, trials, 84, adds"
143,Automated identification of metamorphic test scenarios for an ocean-modeling application,2020,"Metamorphic testing seeks to validate software in the absence of test oracles. Our application domain is ocean modeling, where test oracles often do not exist, but where symmetries of the simulated physical systems are known. In this short paper we present work in progress for automated generation of metamorphic test scenarios using machine learning. Metamorphic testing may be expressed as f(g(X))=h(f(X)) with f being the application under test, with input data X, and with the metamorphic relation (g, h). Automatically generated metamorphic relations can be used for constructing regression tests, and for comparing different versions of the same software application. Here, we restrict to h being the identity map. Then, the task of constructing tests means finding different g which we tackle using machine learning algorithms. These algorithms typically minimize a cost function. As one possible g is already known to be the identity map, for finding a second possible g, we construct the cost function to minimize for g being a metamorphic relation and to penalize for g being the identity map. After identifying the first metamorphic relation, the procedure is repeated with a cost function rewarding g that are orthogonal to previously found metamorphic relations. For experimental evaluation, two implementations of an oceanmodeling application will be subjected to the proposed method with the objective of presenting the use of metamorphic relations to test the implementations of the applications.",IEEE,"simulation, verification, validation, modeling, eliciting, expand, metamorphic, vary, slightly, testing, accurate, testable, utilized, guidelines, definition, prior, ensuring, aspects, appropriate, standard"
144,Generating Source Inputs for Metamorphic Testing Using Dynamic Symbolic Execution,2016,"Metamorphic testing uses domain-specific properties about a program’s intended behaviour to alleviate the oracle problem. From a given set of source test inputs, a set of follow- up test inputs are generated which have some relation to the source inputs, and their outputs are compared to outputs from the source tests, using metamorphic relations. We evaluate the use of an automated test input generation technique called dynamic symbolic execution (DSE) to generate the source test inputs for metamorphic testing. We investigate whether DSE increases source-code coverage and fault finding effectiveness of metamorphic testing compared to the use of random testing, and whether the use of metamorphic relations as a supportive technique improves the test inputs generated by DSE. Our results show that DSE improves the coverage and fault detection rate of metamorphic testing compared to random testing using significantly smaller test suites, and the use of metamorphic relations increases code coverage of both DSE and random tests considerably, but the improvement in the fault detection rate may be marginal and depends on the used metamorphic relations.",IEEE,"met, mt, workshop, summary, 2017, immensely, grown, ultimate, 1998, exploits, international, introduction, new, testing, databases, experiences, discussion, research, academia, applications"
145,Towards Automated Metamorphic Test Identification for Ocean System Models,2021,"Metamorphic testing seeks to verify software in the absence of test oracles. Our application domain is ocean system modeling, where test oracles rarely exist, but where symmetries of the simulated physical systems are known. The input data set is large owing to the requirements of the application domain.This paper presents work in progress for the automated generation of metamorphic test scenarios using machine learning. We extended our previously proposed method [1] to identify metamorphic relations with reduced computational complexity. Initially, we represent metamorphic relations as identity maps. We construct a cost function that minimizes for identifying a metamorphic relation orthogonal to previously found metamorphic relations and penalize for the identity map. A machine learning algorithm is used to identify all possible metamorphic relations minimizing the defined cost function. We propose applying dimensionality reduction techniques to identify attributes in the input which have high variance among the identified metamorphic relations. We apply mutation on these selected attributes to identify distinct metamorphic relations with reduced computational complexity. For experimental evaluation, we subject the two implementations of an ocean-modeling application to the proposed method to present the use of metamorphic relations to test the two implementations of this application.",IEEE,"commerce, websites, indonesia, satisfaction, discovered, conduct, search, proposed, relation, engines, studies, feature, users, study, user, wasn, tokopedia, mr_sorting, influencing, blibli"
146,AutoConf: Automated Configuration of Unsupervised Learning Systems Using Metamorphic Testing and Bayesian Optimization,2023,"Unsupervised learning systems using clustering have gained significant attention for numerous applications due to their unique ability to discover patterns and structures in large unlabeled datasets. However, their effectiveness highly depends on their configuration, which requires domain-specific expertise and often involves numerous manual trials. Specifically, selecting appropriate algorithms and hyperparameters adds to the complexity of the configuration process. In this paper, we propose, apply, and assess an automated approach (AutoConf) for configuring unsupervised learning systems using clustering, leveraging metamorphic testing and Bayesian optimization. Metamorphic testing is utilized to verify the configurations of unsupervised learning systems by applying a series of input transformations. We use Bayesian optimization guided by metamorphic-testing output to automatically identify the optimal configuration. The approach aims to streamline the configuration process and enhance the effectiveness of unsupervised learning systems. It has been evaluated through experiments on six datasets from three domains for anomaly detection. The evaluation results show that our approach can find configurations outperforming the baseline approaches as they achieved a recall of 0.89 and a precision of 0.84 (on average).",IEEE,"causal, approach, apply, alerting, catching, defects4j, succinct, fundamentally, misspecification, formulation, evasive, bugs, studies, expertise, inaccuracies, generate, test, lightweight, exercise, affecting"
147,Metamorphic Testing on the Continuum of Verification and Validation of Simulation Models,2021,"Metamorphic testing has been shown to be useful in testing ""non-testable"" programs in many domains. Modeling & simulation is one such domain, where both verification and validation can be difficult due to lack of oracles. Although the definition of verification and validation vary slightly in modeling and simulation when compared to standard software, we show that metamorphic testing is appropriate in both aspects of ensuring that a simulation model is accurate. In this paper we expand on our five years of prior work on metamorphic testing for simulation validation to show how metamorphic testing can be used for verification as well, and how the previously defined guidelines for validation can be utilized in eliciting metamorphic relations for verification.",IEEE,"output, program, provides, morphs, summarises, 1998, metamorphic, determines, introduction, observing, contributions, ranging, determined, formally, reveals, input, seen, capture, analyses, survey"
148,2nd International Workshop on Metamorphic Testing (MET 2017),2017,"Summary form only given. MET 2017 Workshop Summary. Metamorphic Testing (MT) is a testing technique that exploits the relationships among the inputs and outputs of multiple executions of the program under test, so- called Metamorphic Relations (MRs). MT has been proven highly effective in testing programs that face the oracle problem, for which the correctness of individual output is difficult to determine. Since the introduction of MT in 1998, the interest in this testing methodology has grown immensely with numerous applications in various domains such as machine learning, bioinformatics, computer graphics, simulation, search engines, decision support, cloud computing, databases, and compilers. The Second International Workshop on Metamorphic Testing (MET) will bring together researchers and practitioners in academia and industry to discuss research results and experiences in MT. The ultimate goal of MET is to provide a platform for the discussion of novel ideas, new perspectives, new applications, and state of research, related to or inspired by MT.",IEEE,"registration, caiman, neurons, imaging, cell, platform, transformed, neuroscience, calcium, brain, rotation, transformations, scientific, analysis, module, identified, step, actual, comparing, assurance"
149,Applying Metamorphic Testing to E-commerce Website Search Engines,2019,"The main challenges of e-commerce is to attract and maintain a healthy relationship with users, because users simply interact with software. Development of E-commerce in Indonesia within the last four years rapidly increased up to 500%. The growth of e-commerce has made testings on e-commerce important. Search engine is one of the most important features in e-commerce. This study conducts testing on e-commerce's search engines using metamorphic testing. This study proposes MR_Sorting and MR_SubsetEquality. The proposed metamorphic relation is a part of a feature provided by e-commerce. The testing is implemented on three major e-commerce websites used in Indonesia, which is Lazada, Tokopedia, and Blibli. Based on the proposed metamorphic relation, conducted testing discovered an inconsistency problem which could affect customer satisfaction in using e-commerce websites. It is assumed the problem occur on source data in which the feature's implementation wasn't applied on the original source data requested when a user conduct searches on search engines and a product's low description convention on e-commerces. Proposed metamorphic relation in this study can be used on other e-commerce websites. It is expected upon future studies to conduct similar studies on more e-commerce websites so the maturity of the proposed metamorphic improves and to conduct deeper studies on discovered inconsistencies in influencing user satisfaction and the declining quality of e-commerce websites.",IEEE,"advocated, commerce, product, engines, practice, useful, report, possible, applying, search, testing, world, oracles, real, applied, metamorphic, systems, approach, results, test"
150,Metamorphic Testing with Causal Graphs,2023,"Metamorphic testing provides a means by which to generate succinct test oracles that can apply to large input spaces. For this it depends on the formulation of metamorphic relations, which generally require extensive domain expertise and human input. To address this problem, we present a model-based testing approach that can automatically generate metamorphic relations and associated tests. Our approach is motivated by the observation that metamorphic testing is a fundamentally causal task. We show how it is possible to leverage lightweight graph-based modelling techniques from the field of causal inference to specify causal properties of the system-under-test. Through a series of controlled experiments, we find that the proposed approach is robust to misspecification and can test evasive causal relationships (i.e. those that are difficult to exercise and observe) when combined with an appropriate test generation strategy. We also apply the approach to two case studies from the Defects4J framework with known bugs that affect causal behaviour. The results of these case studies suggest that the approach is not only useful for catching bugs affecting causal structure, but also alerting the user to inaccuracies in the specification.",IEEE,"mia, continuous, flakiness, offline, integration, deployment, facebook, test, suite, web, review, simulation, uses, code, automaton, minutes, unknowable, bot, twin, mode"
151,A Survey on Metamorphic Testing,2016,"A test oracle determines whether a test execution reveals a fault, often by comparing the observed program output to the expected output. This is not always practical, for example when a program's input-output relation is complex and difficult to capture formally. Metamorphic testing provides an alternative, where correctness is not determined by checking an individual concrete output, but by applying a transformation to a test input and observing how the program output “morphs” into a different one as a result. Since the introduction of such metamorphic relations in 1998, many contributions on metamorphic testing have been made, and the technique has seen successful applications in a variety of domains, ranging from web services to computer graphics. This article provides a comprehensive survey on metamorphic testing: It summarises the research results and application areas, and analyses common practice in empirical studies of metamorphic testing as well as the main open challenges.",IEEE,"cases, test, source, fault, increase, efficiency, finding, effectiveness, conducted, testing, trading, claims, mutant, direction, minimization, reduction, suggesting, investigations, new, detect"
152,Metamorphic Testing for Image-based Calcium Imaging Analysis Pipelines,2021,"The BRAIN platform that we developed over the last 2.5 years is a collaborative platform for the neuroscience research community. Such platforms are crucial for expediting research in data-heavy research communities such as the neuroscience optical imaging community. However, it is important to also build-in quality assurance within the platform to ensure that the results can be trusted. Testing the accuracy of scientific algorithms by comparing the actual results to the expected requires tedious manual efforts, which typically has to be repeated for each new context. Metamorphic testing has been shown to be a powerful technique for scientific data analysis applications where asserting correctness is usually a manual, laborious, and challenge task. It uses relations between a set of inputs and a set of outputs to detect issues instead of comparing actual and expected results and thus addresses the above problem. In this paper we report on a feasibility study where we applied metamorphic testing to one step in the calcium imaging pipeline analysis, namely the step to extract the locations of the neuron cells. We tested the cell registration module of CaImAn, one popular software library for calcium imaging analysis, for robustness against slight changes in the input images, i.e. we applied linear transformations such as small degrees of rotation and blurring to the input images, and then evaluated the neurons identified by the cell registration module for both the original and the transformed inputs. Our results show that for transformations such as rotation and translation, CaImAn’s cell registration unexpectedly identified more neurons for the transformed input than for the original image. Meanwhile, for transformations such as padding, CaImAn identified fewer neurons when run on the the transformed inputs. Our results demonstrate the need for evaluating third party libraries for confidence. Furthermore, it also demonstrates that metamorphic testing is a viable quality assurance technique for the BRAIN platform as well as for similar scientific applications where it is difficult to detect analysis inaccuracies.",IEEE,"acoustic, scene, cycle, audio, attributes, classification, design, variations, presented, research, applications, validate, learning, relations, verification, zcr, attribute, cycles, permutation, context"
153,Applying Metamorphic Testing to e-Commerce Product Search Engines,2018,Metamorphic testing has been advocated as a possible approach to testing of systems that have no useful test oracles; but it has not often been applied in practice. Here we report some of the results of applying metamorphic testing to real-world e-commerce product search engines.,IEEE,"search, proposition, novelty, unique, invalidate, discover, identifying, generations, problematically, midpoint, geodesic, verifiable, invalidated, tests, direct, induces, tend, expected, fewer, regard"
154,Testing Web Enabled Simulation at Scale Using Metamorphic Testing,2021,"We report on Facebook's deployment of MIA (Metamorphic Interaction Automaton). MIA is used to test Facebook's Web Enabled Simulation, built on a web infrastructure of hundreds of millions of lines of code. MIA tackles the twin problems of test flakiness and the unknowable oracle problem. It uses metamorphic testing to automate continuous integration and regression test execution. MIA also plays the role of a test bot, automatically commenting on all relevant changes submitted for code review. It currently uses a suite of over 40 metamorphic test cases. Even at this extreme scale, a non-trivial metamorphic test suite subset yields outcomes within 20 minutes (sufficient for continuous integration and review processes). Furthermore, our offline mode simulation reduces test flakiness from approximately 50% (of all online tests) to 0% (offline). Metamorphic testing has been widely-studied for 22 years. This paper is the first reported deployment into an industrial continuous integration system.",IEEE,"dbscan, algorithm, clustering, mrs, target, implementation, density, aspect, verification, showing, ii, validation, oracle, approach, proposed, available, help, based, testing, naive"
155,A Test Suite Minimization Technique for Testing Numerical Programs,2023,"Metamorphic testing is a technique that uses metamorphic relations (i.e., necessary properties of the software under test), to construct new test cases (i.e., follow-up test cases), from existing test cases (i.e., source test cases). Metamorphic testing allows for the verification of testing results without the need of test oracles (a mechanism to detect the correctness of the outcomes of a program), and it has been widely used in many application domains to detect real-world faults. Numerous investigations have been conducted to further improve the effectiveness of metamorphic testing. Recent studies have emerged suggesting a new research direction on the generation and selection of source test cases that are effective in fault detection. Herein, we present two important findings: i) a mutant reduction strategy that is applied to increase the testing efficiency of source test cases, and ii) a test suite minimization technique to help reduce the testing costs without trading off fault-finding effectiveness. To validate our results, an empirical study was conducted to demonstrate the increase in efficiency and fault-finding effectiveness of source test cases. The results from the experiment provide evidence to support our claims.",IEEE,"adobe, explorer, javascript, alleviated, compatibility, browser, justify, settings, analytics, internet, metamorphic, collection, library, type, testing, adoption, environment, simple, systematically, experience"
156,Testing acoustic scene classifiers using Metamorphic Relations,2020,"Context: Artificial Intelligence (AI) applications appear as one of the main demands for the software industry nowadays; within this context, speech recognition and acoustic scene detection and classification achieve near-human performance. However, performing systematic testing on these applications is challenging and very costly if we follow traditional testing methodologies. In this scenario, Metamorphic Testing presents an efficient approach to ensuring the quality of machine learning-based systems. Objective: analyze techniques and applications of metamorphic testing and propose metamorphic relations to perform verification and validation of acoustic scene classifiers. Method: the use of Design Science Research to provide iterative and incremental research development, through which the results achieved in the first cycle of research are presented. Results: in the first design cycle, the use of two metamorphic relations focused on attributes and samples permutation were adopted to verify and validate 6 learning algorithms in an acoustic scene classification system, wherein one of the applied relations, on the random forest algorithm, presented a violation, leading to prediction errors and 2.34% drop in its accuracy in one of the tests performed. In the second design cycle, three new relations based on acoustic variations were proposed to validate the audio attributes, where in all of them the ZCR attribute was more effective to deal with the proposed variations. Conclusion: At the end of the two cycles, our approach has revealed verification flaws and has also proven effective for validation purposes of the systems under test, allowing developers of acoustic scene classification systems to apply them to their learning components, audio extraction processes, and to the test and training dataset.",IEEE,"inspiration, sources, mrs, tools, programming, suitable, libraries, compilers, experience, testing, spir, c4, careful, consultation, giving, concurrency, c11, inform, blocked, spirv"
157,A Novelty Search and Metamorphic Testing Approach to Automatic Test Generation,2021,"A common task in search-based testing is automatically identifying valuable test cases for software systems. However, existing approaches tend to either search for unique tests with regard to inputs or outputs (i.e., novelty search) or search for inputs that invalidate some expected proposition regarding the software (i.e., metamorphic testing). Problematically, verifying unique tests induces the oracle problem while an invalidated proposition results in a single test case. In this paper we utilize novelty search and metamorphic testing to discover a broad range of unique test cases that are directly verifiable via a metamorphic relation and invalidate such an expected proposition in fewer generations of an evolutionary algorithm than direct search. We apply this novelty search and metamorphic testing combination to discover errors in identifying the midpoint of a geodesic as a proof-of-concept.",IEEE,"mettle, systems, machine, unsupervised, learning, users, user, view, specific, assessing, requirements, experiment, perspective, individual, validating, end, tasks, characteristics, appropriateness, abbreviated"
158,An Approach For Verifying And Validating Clustering Based Anomaly Detection Systems Using Metamorphic Testing,2022,"An oracle or test oracle is a mechanism that a software tester uses to verify the program output. In software testing, the oracle problem arises when either the oracle is not available or it may be available but is so expensive that it is infeasible to apply. To help address this problem in testing machine learning-based applications, we propose an approach for testing clustering algorithms. We exemplify this in the implementation of the award-winning density-based clustering algorithm i.e., Density-based Spatial Clustering of Applications with Noise (DBSCAN). Our proposed approach is based on the ‘Metamorphic Testing’ technique which is considered an effective approach in alleviating the oracle problem. Our contributions in this paper include, i) proposing and showing the applicability of a broader set of 21 Metamorphic Relations (MRs), among which 8 target the verification aspect, whereas, 14 of them target the validation aspect of testing the algorithm under test, and ii) identifying and segregating the MRs (by providing a detailed analysis) to help both naive and expert users understand how the proposed MRs target both the verification and validation aspects of testing the DBSCAN algorithm. To show the effectiveness of the proposed approach, we further conduct a case study on an anomaly detection system. The results obtained show that, i) different MRs have the ability to reveal different violation rates (for the given data instances); thus, showing their effectiveness, and ii) although we have not found any implementation issues (through verification) in the algorithm under test (that further enhances our trust in the implementation), the results suggest that the DBSCAN algorithm may not be suitable for scenarios (meeting the user expectations a.k.a validation) captured by almost 79% of violated MRs; which show high susceptibility to small changes in the dataset.",IEEE,"robustness, model, object, bayesian, uncertainty, realistic, models, detection, maintains, avoiding, improve, metamorphic, capable, simulate, performs, retraining, generates, perturbations, fields, production"
159,Metamorphic Testing for Adobe Analytics Data Collection JavaScript Library,2018,"In recent years, metamorphic testing has been successfully and systematically adopted within Adobe Systems to improve the cost effectiveness of its software process. In this industry experience report, we present a case where metamorphic testing has been applied to the Data Collection JavaScript Library of Adobe Analytics. This type of software is difficult to test using traditional approaches. The application of metamorphic testing alleviated the oracle problem, and detected real-life bugs in the system under test as well as compatibility problems between the system and its environment, namely, the Internet Explorer browser. Our results further justify the adoption of metamorphic testing as a simple yet effective approach in industrial settings.",IEEE,"moderation, content, textual, mttm, toxic, efr, malicious, evade, commercial, software, users, art, state, algorithms, propagate, obtains, enthusiastically, link1, teen, 91"
160,Dreaming up Metamorphic Relations: Experiences from Three Fuzzer Tools,2021,"Metamorphic testing requires the availability of a suitable set of metamorphic relations (MRs) for the application domain of interest. A software testing practitioner interested in using metamorphic testing is thus blocked unless they can devise a suitable set of MRs. In this paper we offer some practical advice on sources of inspiration for MRs, based on our experience building three fuzzing tools based on metamorphic testing: MF++, which supports automated testing of C++11 libraries, C4, which tests concurrency support in C11 compilers, and spirv-fuzz, which aims to find bugs in compilers for the SPIR-V programming language (mainly used in computer graphics). The MRs we have devised have taken inspiration from three main sources: (1) careful study of specification documents related to the libraries and programming languages that these tools target, (2) consultation of prior work and discussion with domain experts, and (3) manual inspection of the results of automated code coverage analysis on the systems under test. We describe these sources of inspiration in detail, giving a range of concrete examples for each. We hope that this experience report will help to inform developers of future metamorphic testing tools as to the steps they can take to discover MRs in their domains of interest.",IEEE,"configuration, service, services, moving, pca, reconfigurations, acceptable, proposal, prone, activities, configurations, production, metrics, performance, error, failures, principal, nominal, updates, drops"
161,METTLE: A METamorphic Testing Approach to Assessing and Validating Unsupervised Machine Learning Systems,2020,"Unsupervised machine learning is the training of an artificial intelligence system using information that is neither classified nor labeled, with a view to modeling the underlying structure or distribution in a dataset. Since unsupervised machine learning systems are widely used in many real-world applications, assessing the appropriateness of these systems and validating their implementations with respect to individual users' requirements and specific application scenarios/contexts are indisputably two important tasks. Such assessments and validation tasks, however, are fairly challenging due to the absence of a priori knowledge of the data. In view of this challenge, in this article, we develop a METamorphic Testing approach to assessing and validating unsupervised machine LEarning systems, abbreviated as mettle. Our approach provides a new way to unveil the (possibly latent) characteristics of various machine learning systems, by explicitly considering the specific expectations and requirements of these systems from individual users' perspectives. To support mettle, we have further formulated 11 generic metamorphic relations (MRs), covering users' generally expected characteristics that should be possessed by machine learning systems. We have performed an experiment and a user evaluation study to evaluate the viability and effectiveness of mettle. Our experiment and user evaluation study have shown that, guided by user-defined MR-based adequacy criteria, end users are able to assess, validate, and select appropriate clustering systems in accordance with their own specific needs. Our investigation has also yielded insightful understanding and interpretation of the behavior of the machine learning systems from an end-user software engineering's perspective, rather than a designer's or implementor's perspective, who normally adopts a theoretical approach.",IEEE,"nfrs, mobile, peculiarities, flaws, mt, evaluate, applications, approach, increasingly, ineffective, ph, imposes, office, intend, banking, privacy, adaptation, interface, expect, compliance"
162,Uncertainty-aware Metamorphic Testing for Robust Object Detection Models,2023,"Object detection models are widely used in safety-critical systems in industrial fields such as autonomous driving. It is essential to improve the robustness of object detection models capable of avoiding failures in realistic scenarios. This study proposes metamorphic testing on the object detection model robustness. The metamorphic testing generates metamorphic tested images that simulate the realistic perturbations in production environments. In order to evaluate the model robustness, Bayesian uncertainty is used to describe how the model maintains its reliability on the prediction. This paper shows how metamorphic testing performs the evaluation of the model robustness with Bayesian uncertainty, and how metamorphic testing can improve the model robustness by retraining the models.",IEEE,"network, neural, idss, intrusion, 66, detection, based, kill, nondeterministic, inadequate, slightly, cancer, computationally, stochastic, runs, rendering, applications, proposed, strong, technique"
163,MTTM: Metamorphic Testing for Textual Content Moderation Software,2023,"The exponential growth of social media platforms such as Twitter and Facebook has revolutionized textual communication and textual content publication in human society. However, they have been increasingly exploited to propagate toxic content, such as hate speech, malicious advertisement, and pornography, which can lead to highly negative impacts (e.g., harmful effects on teen mental health). Researchers and practitioners have been enthusiastically developing and extensively deploying textual content moderation software to address this problem. However, we find that malicious users can evade moderation by changing only a few words in the toxic content. Moreover, modern content moderation software's performance against malicious inputs remains underexplored. To this end, we propose MTTM, a Metamorphic Testing framework for Textual content Moderation software. Specifically, we conduct a pilot study on 2, 000 text messages collected from real users and summarize eleven metamorphic relations across three perturbation levels: character, word, and sentence. MTTM employs these metamorphic relations on toxic textual contents to generate test cases, which are still toxic yet likely to evade moderation. In our evaluation, we employ MTTM to test three commercial textual content moderation software and two state-of-the-art moderation algorithms against three kinds of toxic content. The results show that MTTM achieves up to 83.9%, 51%, and 82.5% error finding rates (EFR) when testing commercial moderation software provided by Google, Baidu, and Huawei, respectively, and it obtains up to 91.2% EFR when testing the state-of-the-art algorithms from the academy. In addition, we leverage the test cases generated by MTTM to retrain the model we explored, which largely improves model robustness 0% ~ 5.9% EFR) while maintaining the accuracy on the original test set. A demo can be found in this link1.",IEEE,"custom, bmt, meaningful, traffic, predictions, behaviors, constraints, experts, violations, erroneous, enables, human, metamorphic, driving, based, express, bdd, decelerate, bicycle, judges"
164,Misconfiguration Discovery with Principal Component Analysis for Cloud-Native Services,2020,"Cloud applications and services have significantly increased the importance of system and service configuration activities. These activities include updating (i) these services, (ii) their dependencies on third parties, (iii) their configurations, (iv) the configuration of the execution environment, (v) network configurations. The high frequency of updates results in significant configuration complexity that can lead to failures or performance drops. To mitigate these risks, service providers extensively rely on testing techniques, such as metamorphic testing, to detect these failures before moving to production. However, the development and maintenance of these tests are costly, especially the oracle, which must determine whether a system's performance remains within acceptable boundaries. This paper explores the use of a learning method called Principal Component Analysis (PCA) to learn about acceptable performance metrics on cloudnative services and identify a metamorphic relationship between the nominal service behavior and the value of these metrics. We investigate the following research question: Is it possible to combine the metamorphic testing technique with learning methods on service monitoring data to detect error-prone reconfigurations before moving to production? We remove the developers' burden to define a specific oracle in detecting these configuration issues. For validation, we applied this proposal on a distributed media streaming application whose authentication was managed by an external identity and access management services. This application illustrates both the heterogeneity of the technologies used to build this type of service and its large configuration space. Our proposal demonstrated the ability to identify error-prone reconfigurations using PCA.",IEEE,"normal, tables, function, expressions, normalization, mr, gives, tabular, possess, readability, mathematical, documentation, extraction, turn, mt, typical, combines, metamorphic, core, good"
165,Automated verification of compliance of non-functional requirements on mobile applications through metamorphic testing,2020,"The growing use of mobile applications in almost every aspect of modern life, from banking to office systems, is making it is quality increasingly necessary. Thus, software testing activities have been increasingly in demand in this domain. However, mobile application testing imposes several new challenges and several peculiarities, such as limited power, interface adaptation, and privacy of user data. Most of these peculiarities are related to Non-Functional Requirements (NFRs) and conventional software testing approaches are ineffective. Based on this, the Metamorphic Testing (MT) is an approach that has been applied in many domains as a strategy for generating new test cases and an alternative to alleviate the oracle problem. Through the generation of Metamorphic Relations (MRs), generated from characteristics of the System Under Testing (SUT), it is possible to evaluate the presence of flaws. Recently, studies have been conducted to evaluate the applicability of MT to reveal performance flaws. The goal of this Ph.D. project proposal is to propose an approach to automate the verification of compliance of NFRs on mobile applications through MT. Also, we intend to develop a tool for applying the approach, and a set of criteria to improve the process of verifying NFRs through MT. Finally, we expect to evaluate the effectiveness of the approach on real mobile applications.",IEEE,"performance, pmrs, turned, relations, topic, bugs, program, executions, test, violate, hypothesize, measurements, multiple, metamorphic, unexplored, removing, generation, simulators, acceptable, assertions"
166,Statistical Metamorphic Testing of Neural Network Based Intrusion Detection Systems,2021,"Testing computationally complex neural network-based applications (i.e. network intrusion detection systems) is a challenging task due to the absence of a test oracle. Metamorphic testing is a method to potentially solve the oracle problem when the correctness of individual output is difficult to determine. However, due to the stochastic nature of these applications, multiple runs with the same input can produce slightly different results; thus rendering traditional metamorphic testing technique inadequate. To address this problem, this paper proposes a statistical metamorphic testing technique to test neural network based Network Intrusion Detection Systems (N-IDSs) in a nondeterministic environment. We also performed mutation analysis to show the effectiveness of the proposed approach. The results show that the proposed method has a strong defect detection capability and is able to kill 100% implementation bugs in two neural network-based N-IDSs, and 66.66% in a neural network-based cancer prediction system.",IEEE,"analytics, data, series, time, test, adobe, anomaly, geometric, software, purposes, investigation, metamorphic, study, build, revealed, simple, experience, reports, transformations, make"
167,BMT: Behavior Driven Development-based Metamorphic Testing for Autonomous Driving Models,2021,"Deep Neural Network based models are widely used for perception and control in autonomous driving. Recent work leverages metamorphic testing to improve defect detection but is limited to using only an equality-based metamorphic relation. Thus, it does not provide sufficient expressiveness for users to define custom metamorphic relations nor means to automatically generate meaningful inputs based on such expressive metamorphic relations that reflect real-world traffic behaviors. In this paper, we preliminarily design and evaluate a declarative Behaviour-Driven Development (BDD)-based metamorphic testing framework BMT, which enables domain experts to specify custom traffic behaviors—a car shall decelerate by x% when a bicycle is in front, etc. It then automatically translates a human-written behavior to a corresponding metamorphic relation and synthesizes meaningful test inputs using a variety of image and graphics processing techniques. Our preliminary evaluation shows that BMT can detect a significant number of erroneous predictions of three driving models for speed predictions. These detected erroneous predictions are manually examined and confirmed by six human judges as meaningful traffic violations. By automating test generation from custom behaviors, BMT enables experts to easily express domain-specific constraints and finds violations of such constraints.",IEEE,"coverage, dog, profilers, statistics, flow, control, code, bugs, 24, half, suspicious, constraints, importance, incorrect, provides, art, profiler, hunting, boosting, unsatisfiable"
168,A Metamorphic Testing Approach Based on Normal Function Tables,2022,"Metamorphic testing (MT) can solve the oracle problem in traditional software testing. And metamorphic relationships (MR) are the core of metamorphic testing, which affect the ability, cost and efficiency of MT. Normal function tables are a typical type of Tabular expressions, which possess both the normalization as mathematical expressions and good readability, so they're widely used in software documentation. This article combines metamorphic testing with normal function tables, and gives an approach of MR extraction from normal function tables. Experiments turn out that bugs in programs can be detected efficiently with our method.",IEEE,"dnn, accelerator, accelerators, accuracy, measure, float, bit, format, party, neural, platform, performance, networks, different, ops, equip, snapdragon, softmax, hiai, rid"
169,Performance Metamorphic Testing: Motivation and Challenges,2017,"Performance testing is a challenging task mainly due to the lack of test oracles, that is, mechanisms to decide whether the performance of a program under a certain workload is either acceptable or poor due to a performance bug. Metamorphic testing enables the generation of test cases in the absence of an oracle by exploiting the relations (so-called metamorphic relations) between the inputs and outputs of multiple executions of the program under test. In the last two decades, metamorphic testing has been successfully used to detect functional faults in a variety of domains, ranging from web services to simulators. However, the applicability of metamorphic testing to detect performance bugs is a topic that remains unexplored. In this vision paper, we introduce Performance Metamorphic Relations (PMRs) as expected relations between the performance measurements of multiple executions of the program under test. We hypothesize that these relations can be turned into assertions for the automated detection of performance bugs removing the need for complex benchmarks and domain experts guidance. As a further benefit, PMRs can be turned into fitness functions to guide search-based techniques on the generation of test data that violate the relations, revealing bugs. This novel idea is motivated with examples and an overview of some of the challenges in this promising topic.",IEEE,"cloud, tea, cost, mrs, testing, users, nonfunctional, illusion, virtualization, provisioning, request, designs, seeding, concurrently, used, families, integrates, clouds, complicated, methods"
170,Metamorphic Testing for Adobe Data Analytics Software,2017,It is challenging to test data analytics software because a test oracle might not be available. This study reports our experience of applying metamorphic testing to Adobe's data analytics software that is used for anomaly detection in a set of time series data. We make use of geometric transformations to build metamorphic relations and generate simple time series data as the source test cases. The results of this study show that metamorphic testing is highly effective for both verification and validation purposes. An investigation of the issues detected during metamorphic testing revealed three bugs in the software under test.,IEEE,"obfuscators, mt, numerical, mathematical, look, functions, concept, search, verification, programs, understood, noted, audience, computations, unified, cover, summary, illustrated, talk, maps"
171,Uncovering Bugs in Code Coverage Profilers via Control Flow Constraint Solving,2023,"Code coverage has been widely used as the basis for various software quality assurance techniques. Therefore, it is of great importance to ensure that coverage profilers provide reliable code coverage. However, it is challenging to validate the correctness of the code coverage generated due to the lack of an effective oracle. In this paper, we propose an effective approach based on control flow constraint solving to test coverage profilers and have implemented a coverage bug hunting tool, DOG (finD cOverage buGs). Our core idea is to leverage inherent control flow features to generate control flow constraints that the resulting coverage statistics should respect. If DOG identifies any unsatisfiable constraints, it signifies the presence of incorrect coverage statistics. In such cases, DOG provides detailed diagnostic information about the suspicious coverage statistics for manual inspection. Compared with the state-of-the-art works, DOG has the following prominent advantages: (1) wide applicability: DOG eliminates the need for multiple coverage profilers (as required by differential testing) and program variants (as needed in metamorphic testing), making it highly versatile; (2) unique testing capability: DOG effectively analyzes and utilizes relationships among available coverage statistics, boosting its testing capabilities; and (3) enhanced interpretability: DOG provides clear control flow explanations for incorrect code coverage, enabling the localization of suspicious coverage areas. During our testing period with DOG, we successfully identified and reported 27 bugs in Gcov and llvm-cov, both widely-used coverage profilers. Of these, 17 bugs have been confirmed (11 have been fixed), 3 were deemed expected behaviors by developers, and 7 remain unresolved. Remarkably, 21 out of 24 unexpected bugs had been latent for over two and a half years, and nearly half of the coverage bugs (10 out of 24) were undetectable by state-of-the-art coverage profiler validators. These results demonstrate the effectiveness and importance of using DOG to improve the reliability of code coverage profilers.",IEEE,"homomorphic, encryption, palisade, schemes, space, library, ciphertext, decrypting, homomorphisms, plaintext, encrypted, explores, implements, discovered, allow, described, collection, operations, alleviating, data"
172,Accuracy Measurement of Deep Neural Network Accelerator via Metamorphic Testing,2020,"Deep neural networks (DNNs) have been proved to be popular and successful in our daily life. For mobile devices with the services from DNN, it is needed to equip a DNN accelerator to employ fast and accurate DNN models. Different DNN accelerators may have different accuracy performance, which directly affects the user experience. To measure the accuracy of the DNN accelerators, there only exists indirect approach by comparing to the third-party platform with 32-bit float format. In this paper, metamorphic testing is employed to measure the accuracy of the DNN accelerator for the first time. Specifically, our scheme utilizes the mathematical properties of the operators in deep neural networks to measure the accuracy of the DNN accelerator, getting rid of the dependence on the third-party platform. Besides, we design an objective metric to quantitatively measure the accuracy performance. It can be used not only to facilitate the direct competition between different accelerators but also to detect defects in the implementation of the DNN accelerator. An experiment on two well-known DNN accelerators, HiAI and Snapdragon Neural Processing Engine (SNPE), is conducted, and the results show that the metamorphic distance of the former is smaller than that of the latter in terms of their accuracy performance with 16-bit float format on typical Ops, such as softmax and convolution.",IEEE,"lampion, ml, tasks, models, targeting, approaches, transformations, testing, code, javadoc, identifiers, snippets, codebert, summaries, syntactic, creates, classic, apart, applied, model"
173,TEA-Cloud: A Formal Framework for Testing Cloud Computing Systems,2021,"The validation of a cloud system can be complicated by the size of the system, the number of users that can concurrently request services, and the virtualization used to give the illusion of using dedicated machines. Unfortunately, it is not feasible to use conventional testing methods with cloud systems. This article proposes a framework, called TEA-Cloud, that integrates simulation with testing methods for validating cloud system designs. Testing is applied on both functional and nonfunctional aspects of the cloud, like performance and cost. The aim of the framework is to provide a complete methodology to help users to model both software and hardware parts of cloud systems and automatically test the validity of these clouds using a cost-effective approach. Metamorphic testing is used to overcome the lack of an oracle that checks whether the behavior observed in testing is allowed. Metamorphic testing is based on metamorphic relations (MRs). We define three families of MRs, which target issues such as performance, resource provisioning, and cost. TEA-Cloud was evaluated through an empirical study that used fault seeding (mutation) and ten MRs for testing different cloud configurations. The results were promising, with TEA-Cloud finding all seeded faults.",IEEE,"energy, hotspots, devices, major, compared, conservation, battery, portable, operated, bugs, requirement, concern, noticed, iot, android, output, proposed, designing, gained, scenario"
174,Metamorphic Testing: Beyond Testing Numerical Computations,2017,"Summary form only given. The concept of metamorphic testing (MT) is often illustrated using numerical computation programs that implement mathematical functions. This is because mathematical functions have well-known properties that can be readily understood by the audience. It is to be noted, however, that the application domain of MT is far larger than numerical computations. Hence, this talk will cover some of our research on MT beyond the testing of numerical programs. We first look at the potential of MT for cybersecurity and show how MT was used to detect bugs in real-life obfuscators. Obfuscators are a type of software that can be as important as compilers, but the testing of obfuscators was almost never studied in the past. We then look at the application of MT to search related services such as Google Maps and search engines, and show how the concept of MT has evolved from a verification technique to a more unified framework that covers verification, validation and other types of quality assessment.",IEEE,"users, objectives, understand, better, know, satisfy, pattern, help, borrows, conflicting, empirical, relation, paradigms, metamorphic, direction, simplicity, bespoke, symmetry, shelf, approach"
175,Applying Metamorphic Testing to Homomorphic Cryptography,2021,"Homomorphic encryption schemes allow applications to perform operations on encrypted data without decrypting the data. This is possible due to homomorphisms between the plaintext space and the ciphertext space. The open source PALISADE software library implements a collection of homomorphic encryption schemes. The work described in this paper explores how metamorphic testing, a testing methodology alleviating the oracle problem, can be used to test the PALISADE library. Some faults are discovered and the applicability of metamorphic testing to homomorphic encryption is confirmed.",IEEE,"adas, driving, collisions, standards, ad, simulation, autonomous, testing, brakes, ego, design, tests, immediately, avoidable, ncap, recorded, euro, supplement, changed, osm"
176,Assessing Robustness of ML-Based Program Analysis Tools using Metamorphic Program Transformations,2021,"Metamorphic testing is a well-established testing technique that has been successfully applied in various domains, including testing deep learning models to assess their robustness against data noise or malicious input. Currently, metamorphic testing approaches for machine learning (ML) models focused on image processing and object recognition tasks. Hence, these approaches cannot be applied to ML targeting program analysis tasks. In this paper, we extend metamorphic testing approaches for ML models targeting software programs. We present LAMPION, a novel testing framework that applies (semantics preserving) metamorphic transformations on the test datasets. LAMPION produces new code snippets equivalent to the original test set but different in their identifiers or syntactic structure. We evaluate LAMPION against CodeBERT, a state-of-the-art ML model for Code-To-Text tasks that creates Javadoc summaries for given Java methods. Our results show that simple transformations significantly impact the target model behavior, providing additional information on the models reasoning apart from the classic performance metric.",IEEE,"predict, calculations, kernel, matrix, calculation, programs, relations, graph, applications, approach, metamorphic, matrices, labor, passed, machine, involved, performing, represent, learning, failed"
177,Energy Metamorphic Testing for Android Applications,2019,"A major requirement for portable battery-operated (IoT-related) devices is energy conservation. This concern has not been well noticed by the application developers, while many energy problems in such devices are due to programming errors. Energy testing to find energy bugs and hotspots has gained attention in the last few years, where a major challenge to do so is designing an effective test oracle. In this paper, we use the idea of metamorphic testing to tackle this problem. In metamorphic testing, the output of different scenarios are compared against each other to detect a test failure, whereas in traditional oracles, the output of each scenario is compared with an “expected” value. Applying our proposed metamorphic relations to test a number of Android applications, we found the effectiveness of our proposed approach in detection of the considered bugs and hotspots.",IEEE,"chinese, messages, assumption, text, mrs, used, program, study, follow, inappropriately, 180, comments, film, 2013, douban, tailor, 46, poorly, source, valid"
178,Metamorphic Relations for Enhancing System Understanding and Use,2020,"Modern information technology paradigms, such as online services and off-the-shelf products, often involve a wide variety of users with different or even conflicting objectives. Every software output may satisfy some users, but may also fail to satisfy others. Furthermore, users often do not know the internal working mechanisms of the systems. This situation is quite different from bespoke software, where developers and users typically know each other. This paper proposes an approach to help users to better understand the software that they use, and thereby more easily achieve their objectives—even when they do not fully understand how the system is implemented. Our approach borrows the concept of metamorphic relations from the field of metamorphic testing (MT), using it in an innovative way that extends beyond MT. We also propose a “symmetry” metamorphic relation pattern and a “change direction” metamorphic relation input pattern that can be used to derive multiple concrete metamorphic relations. Empirical studies reveal previously unknown failures in some of the most popular applications in the world, and show how our approach can help users to better understand and better use the systems. The empirical results provide strong evidence of the simplicity, applicability, and effectiveness of our methodology.",IEEE,"reliability, calculating, compute, programs, correct, outputs, known, imperative, pathsets, coherent, metamorphic, correctness, assuring, calculated, allowed, indispensable, solely, relations, focusing, generally"
179,Metamorphic Testing of Advanced Driver-Assistance Systems: Implementing Euro NCAP Standards on OpenStreetMap,2023,"Simulation testing is considered the supplement to ensure the safety of Autonomous driving (AD) and advanced driving assistance (ADAS’s) systems in terms of time and costs. However, it is very difficult and challenging when the simulation results are unexpected. This work presents a simulation-based metamorphic testing (MT) approach to test the ADAS system, implementing the European new car assessment program (Euro NCAP) standards on OpenStreetMap (OSM). We first defined input patterns and relations related to autonomous driving, following the principles of MT. To assess the approach, we executed three tests in two steps at both the design and system levels. Our results show that none of the three (source) tests detected any collisions. However, for follow-up test cases, the ego vehicle failed to apply brakes to avoid a collision when the speed changed. A real-life issue in the system was immediately revealed and confirmed by the development team. We then designed a mechanism and continued the test to check whether the recorded collisions were avoidable. Our results (rate of 5.8%) indicate the fault detection effectiveness when testing the ADAS system. Although we applied the approach to testing the ADAS driving performance, it can be applied to other AD systems. This research, therefore, provides a systematic way to design and test autonomous driving technologies and integrate testing standards with metamorphic testing.",IEEE,"relations, metamorphic, tested, scientific, accurately, verified, adequately, software, testing, step, effectiveness, defined, refine, refined, scattering, hash, particles, number, explain, iteratively"
180,Predicting Metamorphic Relations for Matrix Calculation Programs,2018,"Matrices often represent important information in scientific applications and are involved in performing complex calculations. But systematically testing these applications is hard due to the oracle problem. Metamorphic testing is an effective approach to test such applications because it uses metamorphic relations to determine whether test cases have passed or failed. Metamorphic relations are typically identified with the help of a domain expert and is a labor intensive task. In this work we use a graph kernel based machine learning approach to predict metamorphic relations for matrix calculation programs. Previously, this graph kernel based machine learning approach was used to successfully predict metamorphic relations for programs that perform numerical calculations. Results of this study show that this approach can be used to predict metamorphic relations for matrix calculation programs as well.",IEEE,"cps, dltd, combinational, credibility, learning, deep, generates, relationships, metamorphic, proposed, target, ships, wonder, remarkable, ipo, comes, spectacular, representations, builds, breakthroughs"
181,Metamorphic Relations for Data Validation: A Case Study of Translated Text Messages,2019,"In conventional metamorphic testing, metamorphic relations (MRs) are identified as necessary properties of a computer program's intended functionality, whereby violations of MRs reveal faults in the program-under the assumption that the source and follow-up inputs (test cases used in metamorphic testing) are valid. In the present study, the authors argue that MRs can also be used to validate and assess the quality of the program's input data-under the assumption that the source or follow-up inputs can be inappropriately generated. Using this new perspective, a case study in the natural language processing domain is used to explore the different types of text messages that are difficult to interpret by (Chinese-English) machine translation. A total of 46,180 short user comments on Personal Tailor (a 2013 Chinese film), collected from Douban (a popular Chinese social media platform), has been used as the primary dataset of this study, and the analysis of results demonstrates that the proposed MR-based data validation method is useful for the automatic identification of poorly translated text messages.",IEEE,"dse, suites, tests, generic, uncovered, fuzzing, properties, behaviour, test, outputs, using, pairs, suite, inputs, mt, follow, overflows, buffer, experimented, marginally"
182,Applying metamorphic testing to reliability calculating programs,2023,"Reliability evaluation is imperative for developing safety-critical systems where failures can cause serious consequences. Thus, assuring the correctness of programs that compute reliability is indispensable. However, this is a challenging task when the correct output is not known a prior, since it is impossible to determine whether the calculated reliability is correct or not. To overcome this challenge, we propose the application of metamorphic testing to reliability calculating programs. Metamorphic testing tests software by checking whether particular relations, generally called metamorphic relations, hold or not between multiple inputs and outputs rather than solely focusing on the correctness of independent outputs. Therefore, this testing approach allows software to be tested without known correct outputs. In this study, we focus on programs that compute the reliability of coherent systems from a given set of pathsets. We developed several metamorphic relations, which allowed us to automatically test two programs. To the best of our knowledge, this is the first study where metamorphic testing was applied to reliability calculating software.",IEEE,"supervised, semi, expert, prediction, model, metamorphic, given, removes, relations, unlabeled, base, method, needed, automate, improves, determining, applicable, define, compare, especially"
183,Testing Scientific Software with Invariant Relations: A Case Study,2019,"Adequately testing scientific software is essential to the quality of the software. However, it is a grand challenge due to the oracle problem. Metamorphic testing has shown its effectiveness for alleviating the problem. But the effectiveness of metamorphic testing is highly dependent on the quality of metamorphic relations that are developed for testing the software. In this paper, we propose a framework for iteratively developing metamorphic relations for adequately testing scientific software. The basic idea is to refine metamorphic relations that are loosely defined to those that can be verified with only limited number of cases so that the relations can be accurately tested. We explain the framework through testing a scientific software system that is used for modeling light scattering of particles. Based on domain knowledge and general guidelines, a group of metamorphic relations are first identified and tested. According to testing results, the metamorphic relations are refined step by step until each of them can be accurately tested. In particular, an invariant transform is applied to the metamorphic relations for significantly reducing the number of cases that can satisfy the relations. Finally the relations are further transformed with a carefully defined hash function to ensure each of the metamorphic relations can be automatically verified. The proposed approach truly solves the oracle problem and greatly improves the effectiveness of metamorphic testing. Its effectiveness is evaluated by mutation testing and demonstrated by new problems found in the software.",IEEE,"rbf, mlmr, label, multi, prediction, network, metamorphic, relations, flow, neural, predicting, approaches, control, predict, graph, corresponds, radial, satisfies, soot, inefficient"
184,Combinational Metamorphic Testing for Deep Learning based Target Detection CPS Systems,2021,"Deep learning techniques have emerged as a powerful strategy for learning feature representations directly from data and have led to remarkable breakthroughs in the field of target detection CPS, However, despite their spectacular progress, deep learning based target detection CPS (DLTD-CPS) often demonstrate incorrect or unexpected corner-case behaviors that can lead to potentially fatal errors. Metamorphic testing is a common used technology to tackle the test oracle problem when testing deep learning based CPS to improve its credibility, but when it comes to DLTD-CPS, which is commonly safety-critical or requires more credibility, we wonder if we can improve its effectiveness. In this paper, we proposed a combinational metamorphic testing method for the quality assurance of DLTD-CPS. The proposed method builds the IPO (Input Process Output) model of DLTD-CPS, then generates combinational metamorphic relation-ships based on the model, after that it generates metamorphic test cases to carry out testing. An empirical experiment showed that our proposed methods can increase the effectiveness of metamorphic testing applied to DLTD-CPS using combinational metamorphic relationships compared to single metamorphic relationships.",IEEE,"moderation, oasis, content, toxic, textual, cloud, malicious, contents, social, media, platforms, baidu, including, advertising, alibaba, screenshots, toxicity, weibo, tieba, brought"
185,Using Metamorphic Testing to Improve Dynamic Symbolic Execution,2015,"Dynamic symbolic execution (DSE) is an approach for automatically generating test inputs from source code using constraint information. It is used in fuzzing: the execution of tests while monitoring for generic properties such as buffer overflows and other security violations. Limitations of DSE for fuzzing are two-fold: (1) only generic properties are checked: many deviations from specified behaviour are not found, and (2) many programs are not entirely amenable to DSE because they give rise to hard constraints, so that some parts of a program remain uncovered. In this paper, we discuss how to mitigate these problems using metamorphic testing (MT). Metamorphic testing uses domain-specific properties about program behaviour, relating pairs of inputs to pairs of outputs. From a given test suite, follow-up tests inputs are generated, and their outputs are compared to outputs from the original tests, using metamorphic relations. Our hypothesis is that using metamorphic testing increases the ability of a DSE test suite to find faults, and that the follow-up tests execute some previously-uncovered segments. We have experimented with seven small but non-trivial libraries, comparing DSE test suites with DSE+MT test suites, demonstrating that DSE+MT test suites improve coverage marginally, but find more faults.",IEEE,"apis, web, restful, youtube, api, spotify, mrops, relations, metamorphic, instantiated, style, http, shape, adhere, manipulate, clients, 7k, faults, relation, interact"
186,Using Semi-Supervised Learning for Predicting Metamorphic Relations,2018,"Software testing is difficult to automate, especially in programs which have no oracle, or method of determining which output is correct. Metamorphic testing is a solution this problem. Metamorphic testing uses metamorphic relations to define test cases and expected outputs. A large amount of time is needed for a domain expert to determine which metamorphic relations can be used to test a given program. Metamorphic relation prediction removes this need for such an expert. We propose a method using semi-supervised machine learning to detect which metamorphic relations are applicable to a given code base. We compare this semi-supervised model with a supervised model, and show that the addition of unlabeled data improves the classification accuracy of the MR prediction model.",IEEE,"contributions, fertile, paving, soil, discipline, provide, audience, subsequent, talk, new, discussion, technique, decades, advances, view, overview, perspectives, addressed, vehicles, speech"
187,RBF-MLMR: A Multi-Label Metamorphic Relation Prediction Approach Using RBF Neural Network,2017,"Metamorphic testing has been successfully used in many different fields to solve the test oracle problem. However, how to find a set of appropriate metamorphic relations for metamorphic testing remains a complicated and tedious task. Recently some machine learning approaches have been proposed to predict metamorphic relations. These approaches predicting single label metamorphic relation can alleviate this problem to some extent. However, many applications involve multi-group metamorphic relations, and these approaches are clearly inefficient. To address this problem, in this paper we propose a Multi-Label Metamorphic Relations prediction approach based on an improved radial basis function (RBF) neural network named RBF-MLMR. First, RBF-MLMR uses state-of-the-art soot analysis tool to generate control flow graph and corresponds labels from the source codes of programs. Second, the extracted nodes and the path properties constitute multi-label data sets for the control flow graph. Finally, a multi-label RBF neural network prediction model is established to predict whether the program satisfies multiple metamorphic relations. In order to improve the prediction results, affinity propagation and k-means clustering algorithms are used to optimize the RBF neural network structure of RBF-MLMR. A set of dedicated experiments based on public programs is conducted to validate RBF-MLMR. The experimental results show that RBF-MLMR can achieve accuracy of around 80% for predicting two and three metamorphic relations.",IEEE,"images, image, applications, evaluation, test, processing, proposed, automatic, generation, manual, tedious, output, execution, expert, limitations, framework, selection, cases, human, testing"
188,An Image is Worth a Thousand Toxic Words: A Metamorphic Testing Framework for Content Moderation Software,2023,"The exponential growth of social media platforms has brought about a revolution in communication and content dissemination in human society. Nevertheless, these platforms are being increasingly misused to spread toxic content, including hate speech, malicious advertising, and pornography, leading to severe negative consequences such as harm to teenagers' mental health. Despite tremendous efforts in developing and deploying textual and image content moderation methods, malicious users can evade moderation by embedding texts into images, such as screenshots of the text, usually with some interference. We find that modern content moderation software's performance against such malicious inputs remains underexplored. In this work, we propose OASIS, a metamorphic testing framework for content moderation software. OASIS employs 21 transform rules summarized from our pilot study on 5,000 real-world toxic contents collected from 4 popular social media applications, including Twitter, Instagram, Sina Weibo, and Baidu Tieba. Given toxic textual contents, OASIS can generate image test cases, which preserve the toxicity yet are likely to bypass moderation. In the evaluation, we employ OASIS to test five commercial textual content moderation software from famous companies (i.e., Google Cloud, Microsoft Azure, Baidu Cloud, Alibaba Cloud and Tencent Cloud), as well as a state-of-the-art moderation research model. The results show that OASIS achieves up to 100% error finding rates. Moreover, through retraining the models with the test cases generated by OASIS, the robustness of the moderation model can be improved without performance degradation.",IEEE,"decision, consistency, dnn, dmtdt, disentangled, frameworks, defects, transformation, prediction, images, induce, mutates, overlook, flaws, quantity, new, solely, relying, evaluations, expose"
189,Metamorphic Testing of RESTful Web APIs,2018,"Web Application Programming Interfaces (APIs) allow systems to interact with each other over the network. Modern Web APIs often adhere to the REST architectural style, being referred to as RESTful Web APIs. RESTful Web APIs are decomposed into multiple resources (e.g., a video in the YouTube API) that clients can manipulate through HTTP interactions. Testing Web APIs is critical but challenging due to the difficulty to assess the correctness of API responses, i.e., the oracle problem. Metamorphic testing alleviates the oracle problem by exploiting relations (so-called metamorphic relations) among multiple executions of the program under test. In this paper, we present a metamorphic testing approach for the detection of faults in RESTful Web APIs. We first propose six abstract relations that capture the shape of many of the metamorphic relations found in RESTful Web APIs, we call these Metamorphic Relation Output Patterns (MROPs). Each MROP can then be instantiated into one or more concrete metamorphic relations. The approach was evaluated using both automatically seeded and real faults in six subject Web APIs. Among other results, we identified 60 metamorphic relations (instances of the proposed MROPs) in the Web APIs of Spotify and YouTube. Each metamorphic relation was implemented using both random and manual test data, running over 4.7K automated tests. As a result, 11 issues were detected (3 in Spotify and 8 in YouTube), 10 of them confirmed by the API developers or reproduced by other users, supporting the effectiveness of the approach.",IEEE,"counters, model, formulas, bounded, testmc, consists, counter, counting, suite, exhaustive, probabilistic, tools, advances, exact, led, principles, bugs, input, tool, complementary"
190,Metamorphic Testing: Challenges Ahead,2018,"Metamorphic testing is a popular testing technique that has shown to be effective at detecting faults in numerous domains such as web services and autonomous vehicles. Despite the many advances made in the last two decades, however, metamorphic testing is still a fertile soil for new contributions. This talk will provide an overview of the current state of the discipline and some of the key challenges to be addressed from three different perspectives: the technique, its applications, and the research community. The speech and the subsequent discussion aims to provide the audience with a common view of the field and the work to be done, paving the way for new promising contributions.",IEEE,"recommender, robustness, solution, ignored, provision, librec, taking, recommendation, systems, regarded, content, targeting, trustworthiness, commerce, testable, proposed, internet, metamorphic, mainly, library"
191,A framework of automatic testing of image processing applications,2016,"Image processing applications are playing indispensable role in the modern life. These applications are required to be reliable due to their significance and human dependence. However, testing of these applications is very challenging due to complex nature of images also carrying visual semantics. Currently, the testing of these applications is performed manually, carried out by selecting some standard test images to exercise the implementation under test and their output images are evaluated by a human oracle. Manual selection, execution and evaluation of images have some limitations such as, a tedious job, selection of appropriate test images, unavailability of a domain expert, different expert levels of the evaluators, limited number of test cases, coverage evaluation etc. The increasing complexity of image processing applications and limitations of manual testing has elicited the requirement of automatic testing of image processing applications. In this paper, we have proposed a fully automatic framework to test image processing applications which includes generation of test images, execution of generated test cases and correctness evaluation of output images. In our previous work, we proposed a novel image generation technique based on symbolic evaluation of program under test and also proposed two schemes to address test oracle problem, using metamorphic testing and support vector machines. The proposed framework integrates test image generation, tests execution, effectiveness measurement of test cases, stopping criteria and output evaluation. We demonstrated our approach by experiments and the preliminary results show that the proposed framework is useful to eliminate tedious manual work and enables more effective testing with automatic input generation and output evaluation.",IEEE,"malware, benign, app, apps, class, repackaged, hides, removed, originally, features, original, classified, vector, trained, properties, mobile, derived, false, perform, feature"
192,An Efficient Metamorphic Testing Leveraging Disentangled Transformation and Decision Oracle,2023,"Metamorphic testing (MT) is a commonly employed method to detect the defects of Deep Neural Network (DNN). Most frameworks utilizing metamorphic testing introduce semantic-preserving transformations to the input images to induce inconsistent predictions from the DNN. However, relying solely on prediction consistency may overlook some defects of DNNs. We highlight that decision consistency helps to more effectively expose the flaws within DNN, compared with prediction consistency alone. To better test decision consistency, we design a new mutation method, Disentangled Transformation, which mutates input images following human-decision. We name this new MT framework Decision-guided Metamorphic Testing with Disentangled Transformation (DMTDT). Experimental evaluations show that DMTDT outperforms existing frameworks on quantity and diversity of the generated test.",IEEE,"partitioning, dbms, oceanbase, disjoint, mrops, conduct, project, depth, investigation, comprehensive, segura, ternary, rigger, su, transaction, fastest, et, al, exhaustive, databases"
193,TestMC: Testing Model Counters using Differential and Metamorphic Testing,2020,"Model counting is the problem for finding the number of solutions to a formula over a bounded universe. This is a classic problem in computer science that has seen many recent advances in techniques and tools that tackle it. These advances have led to applications of model counting in many domains, e.g., quantitative program analysis, reliability, and security. Given the sheer complexity of the underlying problem, today's model counters employ sophisticated algorithms and heuristics, which result in complex tools that must be heavily optimized. Therefore, establishing the correctness of implementations of model counters necessitates rigorous testing. This experience paper presents an empirical study on testing industrial strength model counters by applying the principles of differential and metamorphic testing together with bounded exhaustive input generation and input minimization. We embody these principles in the TestMC framework, and apply it to test four model counters, including three state-of-the-art model counters from three different classes. Specifically, we test the exact model counters projMC and dSharp, the probabilistic exact model counter Ganak, and the probabilistic approximate model counter ApproxMC. As subjects, we use three complementary test suites of input formulas. One suite consists of larger formulas that are derived from a wide range of real-world software design problems. The second suite consists of a bounded exhaustive set of small formulas that TestMC generated. The third suite consists of formulas generated using an off-the-shelf CNF fuzzer. TestMC found bugs in three of the four subject model counters. The bugs led to crashes, segmentation faults, incorrect model counts, and resource exhaustion by the solvers. Two of the tools were corrected subsequent to the bug reports we submitted based on our study, whereas the bugs we reported in the third tool were deemed by the tool authors to not require a fix.",IEEE,"banking, functions, software, testing, directs, metamorphic, response, reusable, oracle, outputs, deciding, mrs, inputs, functionalities, program, project, pre, input, infrastructure, utilizing"
194,Metamorphic Robustness Testing for Recommender Systems: A Case Study,2020,"Recommender system has been widely used in many Internet-based applications such as e-commerce and content provision. In the existing studies, the focus is mainly on its accuracy, while its robustness and trustworthiness are often ignored. Targeting at the “non-testable” problem of recommender systems, this paper proposes a solution of applying metamorphic testing to validate their robustness. According to the characteristics of most prediction programs in recommender systems, five types of metamorphic relations are proposed. Meanwhile, taking a well-known recommender library LibRec as an example, empirical experiments are conducted to verify the proposed solution and metamorphic relations. The results show that they are effective in revealing the robustness problem of recommender systems, and metamorphic testing can also be regarded as a quality evaluation approach for recommendation algorithms or models.",IEEE,"translation, reference, services, type, preliminary, machine, natural, available, human, bleu, assessor, prevailing, involvement, usefulness, automated, flexibility, mainstream, english, translator, quality"
195,Metamorphic Detection of Repackaged Malware,2021,"Machine learning-based malware detection systems are often vulnerable to evasion attacks, in which a malware developer manipulates their malicious software such that it is misclassified as benign. Such software hides some properties of the real class or adopts some properties of a different class by applying small perturbations. A special case of evasive malware hides by repackaging a bonafide benign mobile app to contain malware in addition to the original functionality of the app, thus retaining most of the benign properties of the original app. We present a novel malware detection system based on metamorphic testing principles that can detect such benign-seeming malware apps. We apply metamorphic testing to the feature representation of the mobile app, rather than to the app itself. That is, the source input is the original feature vector for the app and the derived input is that vector with selected features removed. If the app was originally classified benign, and is indeed benign, the output for the source and derived inputs should be the same class, i.e., benign, but if they differ, then the app is exposed as (likely) malware. Malware apps originally classified as malware should retain that classification, since only features prevalent in benign apps are removed. This approach enables the machine learning model to classify repackaged malware with reasonably few false negatives and false positives. Our training pipeline is simpler than many existing ML-based malware detection methods, as the network is trained end-to-end to jointly learn appropriate features and to perform classification. We pre-trained our classifier model on 3 million apps collected from the widely-used AndroZoo dataset.1 We perform an extensive study on other publicly available datasets to show our approach’s effectiveness in detecting repackaged malware with more than 94% accuracy, 0.98 precision, 0.95 recall, and 0.96 F1 score.",IEEE,"functional, discovery, dependencies, dependency, data, algorithms, algorithm, evolves, references, dimensions, cited, cleaning, quickly, seven, running, quality, society, consumption, larger, discover"
196,Detecting Hidden Failures of DBMS: A Comprehensive Metamorphic Relation Output Patterns Approach,2023,"The testing of large databases faces the test oracle problem, namely, that it is difficult to verify execution results against expected outcomes. Rigger and Su applied metamorphic testing through query partitioning and ternary logic partitioning techniques to alleviate the challenge. In Part (A) of our project, we conduct an in-depth investigation and have identified a gap between the two techniques. We propose a disjoint partitioning approach to address it. In Part (B), we conduct a comprehensive investigation into the metamorphic testing of DBMS by comparing disjoint partitioning with metamorphic relation output patterns (MROPs) by Segura et al. We propose an exhaustive collection of MROPs for DBMS. To the best of our knowledge, this is the first project to integrate in-depth and comprehensive approaches to tackle the diverse challenges in DBMS testing. In Part (C), we conduct an empirical case study of their applications to OceanBase, the DBMS associated with the world’s fastest online transaction processing system. Although OceanBase has been extensively tested and widely used in the industry, we have detected 12 hidden failures and 8 new crashes.",IEEE,"avs, av, qos, simulink, modeled, vehicles, quality, driving, autonomous, travel, lastly, revolutionize, deploy, definitely, complex, predominant, market, measures, matlab, effective"
197,An Approach to Testing Banking Software Using Metamorphic Relations,2023,"Software systems used for banking are crucial for daily operations and are considered to be part of critical infrastructure; however, testing the functions of these highly reusable systems can be difficult due to the project’s complexity and the absence of a reliable oracle. In software testing, the Oracle problem directs to the difficulty of deciding whether the software’s observed behavior is correct. To address this issue, we suggest utilizing metamorphic testing (MT), which tests the banking system’s functionalities based on their properties. Metamorphic testing is a software testing technique where multiple inputs are generated for a program, then those inputs are transformed based on a pre-defined set of rules. The resulting outputs are then compared to the original outputs to verify that the program works correctly. Metamorphic relations (MRs) are a fundamental concept in metamorphic testing. They define the relationships between the input and output of a system under test and specify how they should change in response to input transformations. Through a case study, we introduce new metamorphic relations to test banking functions and demonstrate the effectiveness of using these MRs. The study results indicate that this is a feasible and efficient approach using an alternative to a test oracle when testing complex E-type (i.e., real-world) software.",IEEE,"intrusion, smart, recognition, city, constantly, distortion, ef, eigenface, pixel, jetsonnano, lbph, histogram, using, binary, classical, depending, parking, old, facial, board"
198,Metamorphic Testing for Machine Translations: MT4MT,2018,"Automated machine translation software and services have become widely available and increasingly popular. Due to the complexity and flexibility of natural languages, automated testing and quality assessment of this type of software is extremely challenging, especially in the absence of a human oracle or a reference translation. Furthermore, even if a reference translation is available, some major evaluation metrics, such as BLEU, are not reliable on short sentences, the type of sentence now prevailing on the Internet. To alleviate these problems, we have been using a metamorphic testing technique to test machine translation services in a fully automatic way without the involvement of any human assessor or reference translation. This article reports on our progress, and presents some interesting preliminary experimental results that reveal quality issues of English-to-Chinese translations in two mainstream machine translation services: Google Translate and Microsoft Translator. These preliminary results demonstrate the usefulness and potential of metamorphic testing for applications in the natural language processing domain.",IEEE,"bing, search, engines, lack, large, conducts, owing, ideal, surrounding, oracle, extends, oriented, generally, chinese, software, recognized, engine, conventional, functional, verifying"
199,Metamorphic Testing of Functional Dependency Discovery Algorithms,2023,"As the information society evolves, the size of data becomes larger, and data quality is the most critical issue. Functional dependencies are used as detection rules for data cleaning to improve the data quality. How to quickly and efficiently discover functional dependencies in the data is a well-known challenge. Currently, traditional testing methods evaluate functional dependency discovery algorithms from two dimensions of running time and memory consumption. We apply the method of metamorphic testing to the evaluation of functional dependency discovery algorithms and construct a series of metamorphic relations with seven most cited and important algorithms as examples and perform experimental validation. The results show that the metamorphic testing can show the effectiveness of the algorithm. It also provides some references for algorithm improvement.",IEEE,"rmt, autonomous, driving, rule, enriched, abnormal, detected, rules, traffic, predictions, prior, models, set, scenarios, human, turk, customizable, popularly, parses, flexibly"
200,Metamorphic Testing of Autonomous Vehicles: A Case Study on Simulink,2021,"Autonomous Vehicles (AVs) will revolutionize the way people travel by car. However, in order to deploy autonomous vehicles, effective testing techniques are required. The driving quality of an AV should definitely be considered when testing such systems. However, as in other complex systems, determining the outcome of a test in the driving quality on an AV can be extremely complex. To solve this issue, in this paper we explore the application of Quality-of-Service (QoS) aware metamorphic testing to test AVs modeled in MATLAB/Simulink, one of the predominant modeling tools in the market. We first defined a set of QoS measures applied to AVs by considering as input a recent study. With them, we define metamorphic relations. Lastly we assess the approach in an AV modeled in Simulink by using mutation testing. The results suggests that our approach is effective at detecting faults.",IEEE,"representing, reliability, determine, distributed, executed, systems, applied, model, target, oracle, simulation, study, ulator, sim, experiments, modelled, simcan, entail, contrasted, simplification"
201,Metamorphic Testing for Edge Real-Time Face Recognition and Intrusion Detection Solution,2022,"Smart city applications are using extensively artificial intelligence for decision-making. Among the fields of application are facial recognition and intrusion detection. The subject is old, but processing techniques and hardware are constantly evolving. This paper will review the most widely known practices and apply them to a smart parking and intrusion detection system using the “JetsonNano” board. Nowadays, quality assurance for machine learning systems is becoming increasingly important. This article focuses on detecting bugs in implementing two classical face recognition algorithms: Eigenface (EF) and Local binary pattern histogram (LBPH). We tested the efficiency of our system using metamorphic testing depending on many factors: weather conditions, pixel noise, and distortion.",IEEE,"multiple, outputs, source, cases, mr, test, note, alignment, simultaneously, heuristic, follow, programs, type, property, obtain, mrs, program, designed, information, mostprevious"
202,Metamorphic Testing for Software Quality Assessment: A Study of Search Engines,2016,"Metamorphic testing is a testing technique that can be used to verify the functional correctness of software in the absence of an ideal oracle. This paper extends metamorphic testing into a user-oriented approach to software verification, validation, and quality assessment, and conducts large scale empirical studies with four major web search engines: Google, Bing, Chinese Bing, and Baidu. These search engines are very difficult to test and assess using conventional approaches owing to the lack of an objective and generally recognized oracle. The results are useful for both search engine developers and users, and demonstrate that our approach can effectively alleviate the oracle problem and challenges surrounding a lack of specifications when verifying, validating, and evaluating large and complex software systems.",IEEE,"embedded, virtual, graphics, extended, eliminated, tft_espi, vps, vp, virtualizing, gd32v, prototypes, risc, leveraged, displays, additionally, 15, focusing, distinct, summarize, integrated"
203,A Declarative Metamorphic Testing Framework for Autonomous Driving,2023,"Autonomous driving has gained much attention from both industry and academia. Currently, Deep Neural Networks (DNNs) are widely used for perception and control in autonomous driving. However, several fatal accidents caused by autonomous vehicles have raised serious safety concerns about autonomous driving models. Some recent studies have successfully used the metamorphic testing technique to detect thousands of potential issues in some popularly used autonomous driving models. However, prior study is limited to a small set of metamorphic relations, which do not reflect rich, real-world traffic scenarios and are also not customizable. This paper presents a novel declarative rule-based metamorphic testing framework called RMT. RMT provides a rule template with natural language syntax, allowing users to flexibly specify an enriched set of testing scenarios based on real-world traffic rules and domain knowledge. RMT automatically parses human-written rules to metamorphic relations using an NLP-based rule parser referring to an ontology list and generates test cases with a variety of image transformation engines. We evaluated RMT on three autonomous driving models. With an enriched set of metamorphic relations, RMT detected a significant number of abnormal model predictions that were not detected by prior work. Through a large-scale human study on Amazon Mechanical Turk, we further confirmed the authenticity of test cases generated by RMT and the validity of detected abnormal model predictions.",IEEE,"planning, path, algorithms, uavs, robots, searching, implementations, graph, based, roles, dormant, complicate, present, framework, unmanned, aerial, released, implements, deployed, project"
204,Analyzing the reliability of simulated distributed systems using Metamorphic Testing,2022,"Simulation is widely adopted by the research community to analyze and study complex systems. It is based on the idea of creating a model representing the target system under study, so that the experiments can be executed over the model instead of the target system. However, since the model is a simplification of a real-world system, the obtained results entail an accuracy loss, which makes determining the reliability of the experiments a complex task. Testing can be applied to check the correctness of systems. Thus, an oracle is used to determine if a test is correct or not. In the field of simulation, an oracle can be applied to determine the reliability of the results, but in most cases, the oracle is not available or is computationally too expensive to be applied. In this work, we propose to use metamorphic testing to detect faults in simulated distributed systems. In essence, we use meta-morphic relations - representing the relevant properties of the system under study - as an oracle. Thus, the results provided are contrasted against these relations to determine their reliability. In order to show the applicability of this approach, we have modelled different distributed systems architectures using the SIMCAN sim-ulator and a high performance application that is executed over the models.",IEEE,"template, relations, metamorphic, adoption, informal, read, eases, ease, approaching, expressiveness, diffusion, dissemination, thriving, noticed, contributing, variability, hope, hinders, proposed, technique"
205,Harnessing Multiple Source Test Cases in Metamorphic Testing: A Case Study in Bioinformatics,2017,"Metamorphic testing (MT) has been applied to software verification, validation and quality assessment. In mostprevious studies, research has focused on deriving metamorphic relations (MRs) such that the input of one or more follow-up test cases is generated from one source test case. We note that some programs under test (PUT) naturally take multiple inputs and process them simultaneously to generate multiple outputs. This type of programs are common in the field of big data analysis and bioinformatics. This means, in the source execution of the program, we can obtain multiple outputs from multiple source test cases. Here we consider a type of MR in which multiple follow-up test cases are generated from multiple source test cases simultaneously. We hypothesise that harnessing the outputs from multiple source test cases enables us to obtain additional information about the PUT, and therefore allows us to construct more effective MRs. In this paper, we designed a new MR to test a popular RNA sequence alignment program. Since the MR was designed based on a desirable property of the PUT (which uses a complex heuristic algorithm) rather than a necessary property, violation of this MR indicates the program outputs deviate from user expectation, hence this MR can be used for assessing the quality of the outputs. Furthermore, we note that outputs of the follow-up test cases allow us to putatively assign alignment information to some sequences that were not aligned in the source test cases, hence potentially identifying and correcting these 'false negative' outputs. We believe this case study provides important insight into designing MRs based on multiple source test cases, and how testing results can be used to improve the performance of some heuristic-based programs.",IEEE,"region, growth, image, program, eliminating, oracle, geometric, operation, uncertainty, verified, mutations, method, analyzing, volume, calculation, numerical, functions, test, series, obtain"
206,Leveraging Virtual Prototypes and Metamorphic Testing for Verification of Embedded Graphics Libraries,2024,"In this extended abstract, we summarize our work from, where we proposed a novel approach focusing on integration testing of embedded graphics libraries. We leveraged Virtual Prototypes (VPs) and integrated them with Metamorphic Testing (MT). Additionally, we eliminated the need for physical hardware by virtualizing the displays within the virtual environment. On an extended RISC-V VP for the GD32V platform we found 15 distinct bugs for the widely used TFT_eSPI embedded graphics library.",VDE,"pmr, methods, replication, python, java, cfgs, details, classifiers, functionally, cfg, mrs, language, trained, programming, explore, features, model, study, original, relations"
207,Testing Graph Searching Based Path Planning Algorithms by Metamorphic Testing,2019,"Path planning algorithms play critical roles in the systems of robots and unmanned aerial vehicles (UAVs). However, it is always difficult to verify the correctness of the implementations for such algorithms because the ""planning oracles"", the expected planning results, are usually hard to be obtained for complicate planning tasks. To improve software reliability, in this paper, we present a testing technique for verifying the implementations of graph searching based path planning algorithms deployed on robots and UAVs. Our approach is based on the technique of Metamorphic Testing, which has been shown considerable effectiveness in alleviating the absence of Oracle problems. According to the characteristics of graph searching based path planning problem, we present a framework to systematically design metamorphic relations. Based on the framework, six categories of metamorphic relations are proposed. We conduct the empirical analysis on 21 implements of three different path planning algorithms applied in a released business software project. The experimental results show that our approach can effectively detect dormant faults.",IEEE,"monotonic, combinatorial, reasoning, order, test, non, testing, automated, truth, complete, maintenance, assumption, basic, combined, capabilities, logic, valuable, proven, parameters, suites"
208,A Template-Based Approach to Describing Metamorphic Relations,2017,"Metamorphic testing enables the generation of test cases in the absence of an oracle by exploiting relations among different executions of the program under test, called metamorphic relations. In a recent survey, we observed a great variability in the way metamorphic relations are described, typically in an informal manner using natural language. We noticed that the lack of a standard mechanism to describe metamorphic relations often makes them hard to read and understand, which hinders the widespread adoption of the technique. In this paper, we propose a template-based approach for the description of metamorphic relations. The proposed template aims to ease communication among practitioners as well as to contribute to research dissemination. Also, it provides a helpful guide for those approaching metamorphic testing for the first time. For the validation of the approach, we used the proposed template to describe 17 previously published metamorphic relations from different domains and groups of authors, without finding expressiveness problems. We hope that this work eases the diffusion and adoption of metamorphic testing, contributing to the progress of this thriving testing technique.",IEEE,"ml, limitations, faced, mt, researchers, make, knowledge, future, applying, disastrous, revolutionizing, informatics, internally, organizations, waste, imagination, centralized, number, address, extract"
209,Metamorphic Testing of Image Region Growth Programs in Image Processing Applications,2018,"Image region growth is one of the most important functions in image processing applications. However, due to the uncertainty of operation and large volume of data, it is difficult to obtain the test oracle of image region growth program. In order to alleviate the test oracle problem, this paper applied the metamorphic testing method into image region growth program testing and proposed a series of metamorphic relations by analyzing the geometric properties, numerical calculation features and specific implementation characteristics of the algorithm. The effectiveness of the identified metamorphic relations in eliminating different types of mutations is verified through case studies. The experimental results show that this method can effectively solve the test oracle problem of image region growth program.",IEEE,"models, train, datasets, labelled, specified, samples, mt, classification, reserve, reserved, occurs, expected, unlabelled, initially, outputs, tackles, portion, stochastic, new, testing"
210,A Replication Study on Predicting Metamorphic Relations at Unit Testing Level,2022,"Metamorphic Testing (MT) addresses the test oracle problem by examining the relations between inputs and outputs of test executions. Such relations are known as Metamorphic Relations (MRs). In current practice, identifying and selecting suitable MRs is usually a challenging manual task, requiring a thorough grasp of the SUT and its application domain. Thus, Kanewala et al. proposed the Predicting Metamorphic Relations (PMR) approach to automatically suggest MRs from a list of six pre-defined MRs for testing newly developed methods. PMR is based on a classification model trained on features extracted from the control-flow graph (CFG) of 100 Java methods. In our replication study, we explore the generalizability of PMR. First, since not all details necessary for a replication are provided, we rebuild the entire preprocessing and training pipeline and repeat the original study in a close replication to verify the reported results and establish the basis for further experiments. Second, we perform a conceptual replication to explore the reusability of the PMR model trained on CFGs from Java methods in the first step for functionally identical methods implemented in Python and C++. Finally, we retrain the model on the CFGs from the Python and C++ methods to investigate the dependence on programming language and implementation details. We were able to successfully replicate the original study achieving comparable results for the Java methods set. However, the prediction performance of the Java-based classifiers significantly decreases when applied to functionally equivalent Python and C++ methods despite using only CFG features to abstract from language details. Since the performance improved again when the classifiers were retrained on the CFGs of the methods written in Python and C++, we conclude that the PMR approach can be generalized, but only when classifiers are developed starting from code artefacts in the used programming language.",IEEE,"traffic, sign, recognition, detection, fault, labeled, reduce, mtsdr, signs, images, rate, tsdr, misdetection, isn, reaches, data, faults, designs, highest, systems"
211,Combining Combinatorial Testing and Metamorphic Testing for Testing a Logic-Based Non-monotonic Reasoning System,2018,"Combinatorial testing has proven to be a very valuable testing technique for automated generation of test suites given the domain of the inputs and the configuration parameters. In order to fully automate combinatorial testing, however, there is a need for an automated test oracle. In case of testing logic-based non-monotonic reasoning systems, we show how to generate test cases and how to make use of metamorphic testing in order to provide a test oracle. The combined testing method allows for complete test automation. We further discuss first experimental results obtained for an implementation of an assumption-based truth maintenance system implementing basic non-monotonic reasoning capabilities.",IEEE,"ams, pll, analog, digital, level, clearly, verification, mt, mrs, industrial, verify, successfully, pure, theses, stems, radio, expand, behavioral, amplifiers, rf"
212,"Metamorphic Testing For Machine Learning: Applicability, Challenges, and Research Opportunities",2023,"The wide adoption and growth of Machine Learning (ML) have made tremendous advancements in revolutionizing a number of fields i.e., manufacturing, transportation, bio-informatics, and self-driving cars. Its ability to extract patterns from a large set of data and then use this knowledge to make future predictions is beyond the human imagination. However, the complex calculations internally performed in them make these systems suffer from the oracle problem; thus, hard to test them for identifying bugs in them and enhancing their quality. An application not properly tested can have disastrous consequences in the production environment. Metamorphic Testing (MT) has been widely accepted by researchers to address the oracle problem in testing both supervised and unsupervised ML-based systems. However, MT has several limitations (when used for testing ML) that the existing literature lacks in capturing them in a centralized place. Applying MT to test ML-based critical systems without prior knowledge/understanding of those limitations can cost organizations a waste of time and resources. In this study, we highlight those limitations to help both the researchers and practitioners to be aware of them for better testing of ML applications. Our efforts result in making the following contributions in this paper, i) providing insights into various challenges faced in testing ML-based solutions, ii) highlighting a number of key challenges faced when applying MT to test ML applications, and iii) presenting the potential future research opportunities/directions for the research community to address them.",IEEE,"lstm, application, characteristics, learning, future, deep, proofs, forecaster, outages, caught, hypothetical, estimating, allocation, bugs, looks, 65, characteristic, forecasting, relations, based"
213,Summary of: Adaptive Metamorphic Testing with Contextual Bandits,2021,"Metamorphic Testing (MT) is a software testing paradigm that aims at using user-specified properties of a program under test to either check its expected outputs or to generate new test cases [1] , [2] . More precisely, MT tackles the so-called oracle problem which occurs whenever predicting the expected outputs of a system is just too difficult or even impossible. A typical example where MT has been successfully deployed is for testing machine learning models. For instance, in supervised machine learning, we train models for classification problems, but testing these models is hard as only stochastic behaviors of these models can be specified [3] . Indeed, we initially train these models with existing labelled datasets and then we exploit them to classify new data samples. Testing these models means only to reserve some portion of the labelled datasets to control that the correct classification is given for these reserved datasets. However, nothing is really available to test these models on unlabelled data samples.",IEEE,"news, fake, detection, social, media, areas, intelligence, artificial, entered, spreading, digitally, popularization, biggest, confirm, faster, lot, broader, lives, topic, long"
214,Metamorphic Testing for Traffic Sign Detection and Recognition,2023,"Traffic sign detection and recognition (TSDR) is a crucial technology to realize vehicle autonomous driving and maintain road safety. Misdetection or misclassification of traffic signs can lead to serious traffic accidents. Therefore, it is essential to ensure the correctness of traffic sign detection and recognition systems. However, most existing methods use labeled data, but it isn't easy to obtain labeled data. The metamorphic testing can reduce the dependence on the labeled data, but the current metamorphic relations do not consider the domain characteristics of traffic signs, so it is difficult to effectively detect traffic sign detection and recognition systems faults. To solve the above problems, this paper introduces metamorphic testing to verify traffic sign detection and recognition systems and designs and implements a tool, MTSDR, which provides a series of metamorphic relations in the traffic domain. It can generate many follow-up test images based on these metamorphic relations and automatically performs tests for evaluation, focusing on practical failure situations. The experimental evaluation was carried out on four advanced traffic sign detection and recognition models on open datasets. The results show that MTSDR can generate natural images and find thousands of traffic sign detection and recognition faults. Compared with the previous methods, our method has a higher fault detection capability, and the highest fault detection rate reaches more than 40%. In addition, it finds that retraining the traffic sign detection and recognition models using the images that found the fault can improve the model's performance, reduce its fault, and reduce the fault rate by 11.77% on average.",IEEE,"errors, analysing, tags, cities, elements, information, map, positives, false, nature, certain, error, order, different, versatility, osmose, fulfilling, goodness, chose, checker"
215,System Level Verification of Phase-Locked Loop using Metamorphic Relations,2021,"In this paper we build on Metamorphic Testing (MT), a verification technique which has been employed very successfully in the software domain. The core idea is to uncover bugs by relating consecutive executions of the program under test. Recently, MT has been applied successfully to the verification of Radio Frequency (RF) amplifiers at the system level as well. However, this is clearly not sufficient as the true complexity stems from Analog/Mixed-Signal (AMS) systems. In this paper, we go beyond pure analog systems, i.e. we expand MT to verify AMS systems. As a challenging AMS system, we consider an industrial PLL. We devise a set of eight generic Metamorphic Relations (MRs). Theses MRs allow to verify the PLL behavioral at the component level and at the system level. Therefore, we have created MRs considering analog-to-digital as well as digital-to-digital behavior. We found a critical bug in the industrial PLL which clearly demonstrates the quality and potential of MT for AMS verification.",IEEE,"deepfake, deepfakes, models, detection, twostreamnet, mesoinception, makeup, media, scenario, adversarial, create, dataset, help, art, perturbed, fool, dire, overcoming, person, outstanding"
216,Metamorphic Testing of a Deep Learning Based Forecaster,2019,"In this paper, we present the Metamorphic Testing of an in-use deep learning based forecasting application. The application looks at the past data of system characteristics (e.g. 'memory allocation') to predict outages in the future. We focus on two statistical / machine learning based components - a) detection of co-relation between system characteristics and b) estimating the future value of a system characteristic using an LSTM (a deep learning architecture). In total, 19 Metamorphic Relations have been developed and we provide proofs & algorithms where applicable. We evaluated our method through two settings. In the first, we executed the relations on the actual application and uncovered 8 issues not known before. Second, we generated hypothetical bugs, through Mutation Testing, on a reference implementation of the LSTM based forecaster and found that 65.9% of the bugs were caught through the relations.",IEEE,"object, photos, detection, synthetic, image, autonomous, vehicles, images, 3d, reconstruction, driving, module, objects, decisions, dnns, new, detected, vanishing, blank, estimation"
217,Metamorphic Testing of Fake News Detection Software,2021,"Since the popularization of social media, news has entered our lives digitally. While news is spreading broader and faster, fake news is becoming an increasingly popular topic. Fake news detection is therefore important in both social media and research areas. With artificial intelligence technology, software engineers have developed a lot of fake news detection systems. One of the biggest challenges for such systems is that they may face the oracle problem, which means that there may not be a way, or it may take too long time, to confirm the correctness of a specific output. Metamorphic Testing has been applied successfully to alleviate the oracle problem in many different areas, including in artificial intelligence. In this paper, we propose several metamorphic relations for fake news detection and report on experiments using metamorphic testing on fake news detection applications.",IEEE,"plagiarism, detection, validate, systems, mrs, optimum, proposed, mt, mrp, preserved, corpus, outputs, source, subsequent, leads, global, local, vital, inputs, relations"
218,Using Metamorphic Testing to Improve the Quality of Tags in OpenStreetMap,2023,"We present a metamorphic testing approach to validate the information included in OpenStreetMap, a collaborative effort to produce a free map of the world. We focus on the quality of the tags storing the information about the elements of the map. We identified metamorphic relations with the potential to detect different types of tagging errors. In particular, we carefully designed mechanisms to automatically generate follow-up inputs, a fundamental component in the successful application of a metamorphic testing approach. The intrinsic nature of automatically analysing tags implies that we will detect real errors but some false positives as well. In order to obtain a good trade-off between real errors and false positives, we introduce thresholds. Our MRs will raise an error associated with a certain value if, depending on the nature of the MR, we have a certain number of elements (not) fulfilling a given condition. In order to evaluate the goodness and versatility of our framework, we chose four cities in different continents with the goal of analysing very heterogeneous contributors adding information in different languages. The application of this framework to the analysis of the chosen cities revealed errors in all of them and in all the considered categories. In addition, around 66% of the errors found by our MRs in the analysed areas have not been previously reported by Osmose, the de facto standard OSM error checker.",IEEE,"mrs, prioritize, test, diversity, derived, metrics, finding, behavior, based, weight, execution, fault, answer, exhibited, distinguish, calculated, levels, determined, play, capture"
219,Metamorphic Testing-based Adversarial Attack to Fool Deepfake Detectors,2022,"Deepfakes utilise Artificial Intelligence (AI) techniques to create synthetic media where the likeness of one person is replaced with another. There are growing concerns that deepfakes can be maliciously used to create misleading and harmful digital contents. As deepfakes become more common, there is a dire need for deepfake detection technology to help spot deepfake media. Present deepfake detection models are able to achieve outstanding accuracy (>90%). However, most of them are limited to within-dataset scenario. Most models do not generalise well enough in cross-dataset scenario. Furthermore, state-of-the-art deepfake detection models rely on neural network-based classification models that are known to be vulnerable to adversarial attacks. Motivated by the need for a robust deepfake detection model, this study adapts metamorphic testing (MT) principles to help identify potential factors that could influence the robustness of the examined model, while overcoming the test oracle problem in this domain. Metamorphic testing is specifically chosen as the testing technique as it fits our demand to address learning-based system testing with probabilistic outcomes from largely black-box components, based on potentially large input domains. We performed our evaluations on MesoInception-4 and TwoStreamNet models, which are the state-of-the-art deepfake detection models. This study identified makeup application as an adversarial attack that could fool deepfake detectors. Our experimental results demonstrate that both the MesoInception-4 and TwoStreamNet models degrade in their performance by up to 30% when the input data is perturbed with makeup.",IEEE,"dat, testing, determine, time, stamps, dimension, equivalences, add, scheme, automatically, framework, encodes, delivers, nasa, beneficial, use, model, determined, allowing, infrastructure"
220,Testing Object Detection for Autonomous Driving Systems via 3D Reconstruction,2021,"Object detection is to identify objects from images. In autonomous driving systems, object detection serves as an intermediate module, which is used as the input of autonomous decisions for vehicles. That is, the accuracy of autonomous decisions relies on the object detection. The state-of-the-art object detection modules are designed based on Deep Neural Networks (DNNs). It is difficult to employ white-box testing on DNNs since the output of a single neuron is inexplicable. Existing work conducted metamorphic testing for object detection via image synthesis: the detected object in the original image should be detected in the new synthetic image. However, a synthetic image may not look real from humans' perspective. Even the object detection module fails in detecting such synthetic image, the failure may not reflect the ability of object detection. In this paper, we propose an automatic approach to testing object detection via 3D reconstruction of vehicles in real photos. The 3D reconstruction is developed via vanishing point estimation in photos and heuristic based image insertion. Our approach adds new objects to blank spaces in photos to synthesize images. For example, a new vehicle can be added to a photo of a road and vehicles. In this approach, the output synthetic images are expected to be more natural-looking than randomly synthesizing images. The experiment is conducting on 500 driving photos from the Apollo autonomous driving dataset.",IEEE,"prioritized, classifiers, labeling, test, hypothesis, inputs, machine, behavior, enhancing, ii, learning, costs, statistical, input, mt, network, based, neural, incurring, high"
221,Validating Plagiarism Detection Systems with Metamorphic Testing,2023,"Context: Plagiarism is a severe issue in the academic world, and plagiarism detection systems are commonly used to find plagiarism violations. Although advanced technologies have improved plagiarism detection systems, there is a lack of focus on assessing their effectiveness and performance. Objective: Plagiarism detection systems give a local optimum rather than a global optimum, which leads to a test oracle problem. Therefore, a feasible and novel approach to validate those systems is required. Method: We propose Metamorphic Testing (MT) to validate plagiarism detection systems. Metamorphic relations (MRs) validate the relations between inputs and outputs, which are vital components of MT. Based on the concept of Metamorphic relations patterns (MRP), three MRs are proposed to generate follow-up test inputs while characteristics of the source test outputs are preserved. If the proposed MRs are violated, faults in the system will be detected. Results: The experimental results show that the proposed MRs can validate four plagiarism detection systems. Conclusion: The result shows that MT can systematically and effectively validate plagiarism detection systems. Subsequent studies can further extend MT applications in validating other plagiarism detection systems by applying proposed MRs or exploring other MRs related to the semantics of source text corpus.",IEEE,"qbs, query, patterns, commerce, data, web, identification, types, large, relational, resorted, prestashop, gmail, ordering, hbo, email, analytic, systems, called, metamorphic"
222,Prioritization of Metamorphic Relations Based on Test Case Execution Properties,2018,"A test oracle is essential for software testing. In certain complex systems, it is hard to distinguish between correct and incorrect behavior. Metamorphic testing is one of the solution to solve the test oracle problem. In metamorphic testing, metamorphic relations (MRs) are derived based on the properties exhibited by the program under test (PUT). These MRs play a major role in the generation of test data for conducting MT. The effectiveness of MRs can be determined based on the ability to detect considerable faults for the given PUT. Many metamorphic relations with different fault finding capability can be used to test the PUT and it is important to identify and prioritize the MRs based on its fault finding effectiveness. In order to answer this challenge, we propose to prioritize the MRs based on the diversity in the execution path of the source and follow-up test cases of the MRs. We propose four metrics to capture different levels of diversity in the execution behavior of the test cases for each of the derived MRs. The total weight calculated for each of the MRs using the metrics is used to prioritize the MRs.",IEEE,"images, output, incorrect, correct, experts, insignificant, encouraging, demonstration, dilation, correctness, possess, oracle, job, capable, initial, differences, purpose, inspection, decades, medical"
223,Agile Metamorphic Model-Based Testing,2016,"Testing becomes difficult when we cannot easily determine whether the system delivers the correct result or not. To address this issue, we have developed a framework for automated testing of NASA's DAT system using metamorphic testing principles combined with model based testing. Based on the results from using the framework to test DAT we have determined that this is a cost beneficial solution allowing for comprehensive testing that detects defects without having to develop complex testing infrastructure to determine the oracle. In our approach, DAT queries are automatically generated from a set of metamorphic testing models where each model encodes one or more of the identified equivalences. In addition, we use a scheme for generating time stamps that we use to automatically create time pairs that add another equivalence dimension.",IEEE,"ai, classification, bridging, electronics, consumer, bias, fuzz, flexibility, determinism, suffer, based, software, built, needed, testing, property, metrics, defects, systems, proposes"
224,A Hybridized Approach for Testing Neural Network Based Intrusion Detection Systems,2021,"Enhancing the trust of machine learning-based classifiers with large input spaces is a desirable goal; however, due to high labeling costs and limited resources, this is a challenging task. One solution is to use test input prioritization techniques that aim to identify and label only the most effective test instances. These prioritized test inputs can then be used with some popular testing techniques e.g., Metamorphic testing (MT) to test and uncover implementation bugs in computationally complex machine learning classifiers that suffer from the oracle problem. However, there are certain limitations involved with this approach, (i) using a small number of prioritized test inputs may not be enough to check the program correctness over a large variety of input scenarios, and (ii) traditional MT approaches become infeasible when the programs under test exhibit a non-deterministic behavior during training e.g., Neural Network-based classifiers. Therefore, instead of using MT for testing purposes, we propose a metamorphic relation to solve a data generation/labeling problem; that is, enhancing the test inputs effectiveness by extending the prioritized test set with new tests without incurring additional labeling costs. Further, we leverage the prioritized test inputs (both source and follow-up data sets) and propose a statistical hypothesis testing (for detection) and machine learning-based approach (for prediction) of faulty behavior in two other machine learning classifiers (Neural Network-based Intrusion Detection Systems). In our case, the problem is interesting in the sense that injected bugs represent the high accuracy producing mutated program versions that may be difficult to detect by a software developer. The results indicate that (i) the proposed statistical hypothesis testing is able to identify the induced buggy behavior, and (ii) Random Forest outperforms and achieves the best performance over SVM and k-NN algorithms.",IEEE,"deeproad, driving, scenes, images, dnn, systems, autonomous, weather, based, input, synthetic, consistency, conditions, automatically, second, behaviors, techniques, networks, training, validate"
225,Metamorphic Relation Patterns for Query-Based Systems,2019,"Searching and displaying data based on user queries is a key feature of most software applications such as information systems, web portals, web APIs, and data analytic platforms. The large volume of data managed by these types of systems, henceforth called query-based systems (QBS), makes them extremely hard to test due to the difficulty to assess whether the output of a query is correct, the so-called oracle problem. Metamorphic testing has proved to be a very effective approach to alleviate the oracle problem in QBS, enabling the detection of bugs in data repositories, large e-commerce sites, and some of the most used software applications worldwide such as Google Search and YouTube. We have observed, however, that the metamorphic relations used to test different types of QBS are very similar, regardless of their domain, since all of them exploit standard query features such as filtering and ordering. Inspired by this finding, in this paper we present a catalogue of metamorphic relation patterns to assist testers in the identification and inference of metamorphic relations in QBS. For the definition of the patterns we resorted to the root of most query languages: relational algebra. We show how the proposed patterns help in the identification of metamorphic relations in the e-commerce platform PrestaShop, the email service Gmail, and the mobile application of video streaming HBO.",IEEE,"libraries, sequences, equivalent, mf, patches, mismatches, reduction, randomized, projects, test, 21, library, case, avoids, smt, z3, offered, yices2, equipped, isl"
226,Automatic test Oracle for image processing applications using support vector machines,2015,"Software testing has been a challenging job over the decades and possess more challenges for complex inputs such as images. While evaluating correctness of the output images, there may exist a large number of correct or incorrect images with insignificant differences. A test oracle is required to evaluate the correctness of output images which may not be available in most of the cases. Currently, output images are evaluated by domain experts such as medical experts, which involves manual inspection of output images at each step of software development. In this paper, we have proposed a mechanism to automate the test oracle using support vector machine. It requires a few correct and incorrect images for the training and is capable of classification of correct and incorrect output images. For the demonstration purpose, we used different implementations of image dilation and compared the results with statistical oracle and metamorphic testing. The results in our initial experiments are encouraging.",IEEE,"supervised, classifiers, mrs, mutants, test, used, sut, computational, data, previous, characteristics, mt, uses, effectiveness, reachable, 709, biology, fault, multiple, studies"
227,Bridging Fuzz Testing and Metamorphic Testing for Classification of Machine Learning,2022,"Artificial Intelligence (AI) built-in Consumer Electronics is popular, but it is hard to test and evaluate AI-based system with the existing performance metrics. Even though AI-based systems are implemented in software with flexibility, bias and non-determinism property etc., they can suffer the same defects as other software. That is why new software testing approaches are needed when testing AI-based systems. Therefore, this paper proposes a bridging approach between fuzz testing and metamorphic testing focus on the classification of machine learning. This approach can be used as a test oracle for classification of training data.",IEEE,"gis, mt, different, information, foundational, confronted, geographic, try, characters, superficial, position, resolve, global, semi, kinds, navigation, illustrate, program, typical, methodologies"
228,DeepRoad: GAN-Based Metamorphic Testing and Input Validation Framework for Autonomous Driving Systems,2018,"While Deep Neural Networks (DNNs) have established the fundamentals of image-based autonomous driving systems, they may exhibit erroneous behaviors and cause fatal accidents. To address the safety issues in autonomous driving systems, a recent set of testing techniques have been designed to automatically generate artificial driving scenes to enrich test suite, e.g., generating new input images transformed from the original ones. However, these techniques are insufficient due to two limitations: first, many such synthetic images often lack diversity of driving scenes, and hence compromise the resulting efficacy and reliability. Second, for machine-learning-based systems, a mismatch between training and application domain can dramatically degrade system accuracy, such that it is necessary to validate inputs for improving system robustness. In this paper, we propose DeepRoad, an unsupervised DNN-based framework for automatically testing the consistency of DNN-based autonomous driving systems and online validation. First, DeepRoad automatically synthesizes large amounts of diverse driving scenes without using image transformation rules (e.g. scale, shear and rotation). In particular, DeepRoad is able to produce driving scenes with various weather conditions (including those with rather extreme conditions) by applying Generative Adversarial Networks (GANs) along with the corresponding real-world weather scenes. Second, DeepRoad utilizes metamorphic testing techniques to check the consistency of such systems using synthetic images. Third, DeepRoad validates input images for DNN-based systems by measuring the distance of the input and training images using their VGGNet features. We implement DeepRoad to test three well-recognized DNN-based autonomous driving systems in Udacity self-driving car challenge. The experimental results demonstrate that DeepRoad can detect thousands of inconsistent behaviors for these systems, and effectively validate input images to potentially enhance the system robustness as well.",IEEE,"briefing, checking, introduction, successful, challenges, applications, technique, failures, mt, complemented, exercises, outlining, double, fledged, multiple, present, outputs, drones, trends, testing"
229,Metamorphic Fuzzing of C++ Libraries,2022,"We present a method for automated metamorphic fuzzing of software libraries, implemented as an open-source tool, MF++, targeting C++ libraries. Our approach works by automatically synthesising equivalent sequences of calls to a library's API based on a user-provided specification, in a randomized fashion. Equivalent call sequences are then tested using randomized inputs, and result mismatches reveal bugs in the library implementation. This is an instance of metamorphic testing: it avoids the oracle problem because we do not need to know the expected results of a set of equivalent call sequences, only that their results should match. Automated test case reduction can then be used to find minimized equivalent call sequences that trigger mismatches, as an aid to debugging. We evaluate MF++ with respect to four SMT solving libraries and two Presburger arithmetic libraries, leading to the discovery of 21 bugs. We have also successfully used MF++ and its test case reduction facilities to automatically generate small test cases that exercise source code not covered by the regression test suites of various libraries under test. Unlike most test case generation techniques, the tests we synthesise are equipped with an oracle by construction: the equivalence-based oracle offered by our metamorphic approach. We have submitted patches contributing new coverage-enhancing test cases to the isl, Yices2 and Z3 projects. The developers of these projects have accepted 21 tests based on our patches so far.",IEEE,"adss, ma, mt, parking, ads, apollo, actual, sut, correctness, behavior, oer, educational, endeavour, aps, unstable, unsafe, called, evaluate, modifications, automated"
230,Fault Detection Effectiveness of Metamorphic Relations Developed for Testing Supervised Classifiers,2019,"In machine learning, supervised classifiers are used to obtain predictions for unlabeled data by inferring prediction functions using labeled data. Supervised classifiers are widely applied in domains such as computational biology, computational physics and healthcare to make critical decisions. However, it is often hard to test supervised classifiers since the expected answers are unknown. This is commonly known as the oracle problem and metamorphic testing (MT) has been used to test such programs. In MT, metamorphic relations (MRs) are developed from intrinsic characteristics of the software under test (SUT). These MRs are used to generate test data and to verify the correctness of the test results without the presence of a test oracle. Effectiveness of MT heavily depends on the MRs used for testing. In this paper we have conducted an extensive empirical study to evaluate the fault detection effectiveness of MRs that have been used in multiple previous studies to test supervised classifiers. Our study uses a total of 709 reachable mutants generated by multiple mutation engines and uses data sets with varying characteristics to test the SUT. Our results reveal that only 14.8% of these mutants are detected using the MRs and that the fault detection effectiveness of these MRs do not scale with the increased number of mutants when compared to what was reported in previous studies.",IEEE,"uav, module, mstu, multi, modules, unit, systems, end, testing, autonomous, closely, studies, equally, framework, unmanned, aerial, scenes, plan, emerging, rapid"
231,Experience Report: How Do Metamorphic Relations Perform in Geographic Information Systems Testing,2016,"Geographic Information Systems (GIS) is a foundational application for different information systems, such as navigation system and global position system. However, due to the complexity of the system and algorithms, traditional testing methodologies confronted with the test oracle problem. Metamorphic testing (MT) can help resolve the problem by comparing metamorphic relations (MR) among multiple inputs and outputs, which have applied in many different domains. In this paper, we try to apply MT in GIS testing. We propose a semi-automated MT approach for GIS testing. To illustrate the effectiveness of the approach, we conduct a case study with a typical component of GIS: superficial area calculation program. In the empirical study, we construct six kinds of MRs with different properties and characters of the program or its algorithm. Our method could detect the target faults effectively without generating test oracles manually.",IEEE,"controller, pid, proportional, derivative, integral, program, facing, mt, core, control, commonly, proposes, industry, safety, apply, testing, critical, challenges, experimental, effective"
232,Metamorphic Testing 20 Years Later: A Hands-on Introduction,2018,"Two of the key challenges in software testing are the automated generation of test cases, and the identification of failures by checking test outputs. Both challenges are effectively addressed by metamorphic testing (MT), a software testing technique where failures are not revealed by checking an individual concrete output, but by checking the relations among the inputs and outputs of multiple executions of the software under test. Two decades after its introduction, MT is becoming a fully-fledged testing paradigm with successful applications in multiple domains including, among others, big data engineering, simulation and modeling, compilers, machine learning programs, autonomous cars and drones, and cybersecurity. This technical briefing will provide an introduction to MT from a double perspective. First, we will present the technique and the results of a novel survey outlining its main trends and lessons learned. Then, we will go deeper and present some of the successful applications of the technique, as well as challenges and opportunities on the topic. The briefing will be complemented with practical exercises on testing real web applications and APIs.",IEEE,"gis, program, try, characters, superficial, mrs, different, construction, calculation, feasible, area, exploration, construct, useful, ability, compare, common, failure, algorithm, apply"
233,Metamorphic Testing of an Automated Parking System: An Experience Report,2023,"Automated Driving Systems (ADSs) have gained popularity recently. However, the unstable and unsafe ADSs have caused many traffic accidents and received widespread attention. One way to alleviate such issues is to enhance the correctness and efficiency of testing ADSs. Due to the difficulty of checking ADSs’ behavior such as parking the car, confirming the correctness of the actual behavior may be non-trivial or impossible. This kind of problem is called the test oracle problem. Unlike traditional software testing, Metamorphic Testing (MT) does not focus on the correctness of the actual strategy but examines whether or not the inputs and outputs of multiple executions of a Software Under Test (SUT) satisfy certain relations of the SUT, called Metamorphic Relations (MRs). The paper also implements Mutation Analysis (MA) on Baidu Apollo ADS to evaluate our MT. MA involves small modifications to a program’s source code to see if test-cases can detect these changes. This work was part of a larger endeavour to create an Open Educational Resource (OER) to support learning about how to apply MT to ADSs. This paper reports on an experience of implementing MT to test the Automated Parking System (APS) of Apollo ADS and applying MA to evaluate the MT.",IEEE,"dbms, rigger, su, unveiled, partitioning, fastest, transaction, oceanbase, disjoint, owing, ocean, crashes, hidden, faces, base, extend, online, extensively, associated, big"
234,Metamorphic Testing on Multi-module UAV Systems,2021,"Recent years have seen a rapid development of machine learning based multi-module unmanned aerial vehicle (UAV) systems. To address the oracle problem in autonomous systems, numerous studies have been conducted to use metamorphic testing to automatically generate test scenes for various modules, e.g., those in self-driving cars. However, as most of the studies are based on unit testing including end-to-end model-based testing, a similar testing approach may not be equally effective for UAV systems where multiple modules are working closely together. Therefore, in this paper, instead of unit testing, we propose a novel metamorphic system testing framework for UAV, named MSTU, to detect the defects in multi-module UAV systems. A preliminary evaluation plan to apply MSTU on an emerging autonomous multi-module UAV system is also presented to demonstrate the feasibility of the proposed testing framework.",IEEE,"translation, crti, translating, method, suspicious, translate, precision, machine, language, recent, vietnamese, misunderstandings, referentially, fluency, massively, issues, transparent, 74, documents, meaning"
235,Testing Proportional-Integral-Derivative (PID) Controller with Metamorphic Testing,2017,"The controller program is the core of a safety-critical control system. However, the testing of controller program has been facing challenges because of the oracle problem. Since Proportional-Integral-Derivative (PID) controller is the most commonly used controller in the industry, this paper proposes to apply Metamorphic Testing (MT) to test it. Our experimental results show that MT is effective in testing PID controller.",IEEE,"mt, mrvrs, simulations, regions, analyse, simulation, ways, traditional, widespread, sut, aspects, adoption, performance, mrs, research, cheap, serendipity, ferent, anticipate, hurdle"
236,Metamorphic Testing of a Superficial Area Calculation Program,2016,"In this paper, we try to apply metamorphic testing in a superficial area calculation program, which is common for most of the GIS systems. We construct metamorphic relation (MR) with different properties and characters of the program and its algorithm. These MRs construction methods are also useful for other programs testing of GIS system. At last, we compare effectiveness of different MRs based on the failure detection ability. This exploration would provide a feasible method for GIS program testing.",IEEE,"fog, computing, tdd4fog, development, fashion, cloud, edge, nodes, driven, services, devices, platform, required, systems, end, designed, key, software, utilities, microservice"
237,A Disjoint-Partitioning Approach to Enhancing Metamorphic Testing of DBMS,2022,"Owing to big data, DBMS testing faces the oracle problem, that is, it is difficult to verify execution results against expected outcomes. Rigger and Su applied metamorphic testing to alleviate the challenge. We propose a disjoint-partitioning approach to extend their work. We have conducted an empirical case study on OceanBase, the DBMS associated with the world's fastest online transaction processing system. Even though Ocean- Base has been extensively tested and widely used in the industry, we have unveiled various hidden failures and crashes.",IEEE,"engines, code, search, zoekt, krugle, searchcode, abnormal, github, specifications, behaviors, developers, users, known, identified, sourcegraph, processed, inspecting, partial, used, root"
238,Metamorphic Testing of Machine Translation Models using Back Translation,2023,"Machine translation software has been widely adopted in recent years. The recent advance in deep learning research has massively improved the accuracy and fluency of the translated output. However, incorrect translations may still occur, which causes misunderstandings, and even more detrimental consequences when applying these systems for crucial applications, such as translating legal and medical documents. This calls for methods that can test the correctness of machine translation software efficiently and effectively. In this paper, we propose a method that uses back-translation as a reference for machine translation testing, minimizing the knowledge and use of the NLP tools in the target language so that the same workflow can be applied to test systems translating English to multiple languages. We build a metamorphic testing method using our proposed concept called contextual referentially transparent input (CRTI). A CRTI is a piece of text that should have a similar meaning under a certain context in any given language. Our method detects inconsistency between a CRTI in the original sentence and the back-translation to report translation errors. To evaluate our method, we translate 200 sentences using Google Translate. Our method reports 57 suspicious issues with a precision of 74% in Chinese translation and 22 suspicious issues with a precision of 82% in Vietnamese translation.",IEEE,"validation, hand, mrs, tools, interpreting, ensures, accessible, formalization, guarantees, restrictions, fulfills, elements, homogeneous, artifact, consolidated, outlined, mature, doing, solvers, facilitates"
239,Using Metamorphic Relation Violation Regions to Support a Simulation Framework for the Process of Metamorphic Testing,2022,"Metamorphic testing (MT) has been growing in pop-ularity, but it can still be quite challenging and time-consuming to assess its performance. Typical approaches to performance assessment can require a series of steps, and depend on a variety of factors, often requiring serendipity. This can be a bottleneck for some aspects of MT research. Central to MT, metamorphic relations (MRs) represent necessary properties of the system under test (SUT). In traditional software testing, simulations are often employed to examine and compare the performance of dif-ferent testing strategies. However, these simulations are typically designed based on the assumed availability (and applicability) of a test oracle - a mechanism to decide the correctness of the SUT output or behaviour. A key reason for the popularity of MT is its proven record of effective software testing, without the need for a test oracle. This strength, however, also means that traditional ways of using simulations to analyse software testing approaches are not applicable for MT. This lack of cheap and fast ways to conduct simulation analyses of MT is a hurdle for many aspects of MT research, and may be an obstacle to its more widespread adoption. To address this, in this paper we introduce the concept of MR-violation regions (MRVRs), and show how they can be used for a certain category of MRs, Deterministic MRs (DMRs), to build simulation tools for MT. We analyse the differences between MRVRs and traditional, oracle-defined failure regions; and report on a preliminary case study exploring MRVRs in numerical-input-domain systems from previous MT studies. We anticipate that the proposed MT simulation framework may facilitate more research into MT, and may help lead to its more widespread adoption.",IEEE,"elevators, experts, service, domain, oldest, points, sector, dispatcher, customization, faults, elevator, demands, multiple, called, thriving, measures, behave, meet, transportation, relations"
240,TDD4Fog: A Test-Driven Software Development Platform for Fog Computing Systems,2020,"As an ideal infrastructure for smart services, Fog Computing is becoming the next wave of IT investment harnessing the successful models of Cloud Computing and latest technologies such as 5G and Internet of Things (IoT). However, the development of Fog Computing systems is a big challenge due to its complex, heterogeneous and distributed nature. Currently, there are a few SDKs released by some public Cloud service providers to support the development of Fog services in a top-down fashion as the key motive is to leverage their business Cloud services. However, Fog Computing systems are usually designed in a bottom-up fashion as the major functionalities are centred around the Edge Nodes and the End Devices. Meanwhile, significant efforts are required to verify the conformance of software behaviours as the collaboration between the End Devices, Edge Nodes and Cloud Servers is vital to the success of a Fog Computing System. Therefore, a holistically designed software development platform is urgently required. In this paper, we propose TDD4Fog, a test-driven software development platform for Fog Computing systems. Following the Test-Driven Development (TDD) methodology and a bottom-up design fashion, TDD4Fog supports the microservice architecture and provides the Test-Driven utilities such as metamorphic testing, mutation testing and random testing for the whole software development lifecycle of Fog Computing systems. To demonstrate the feasibility of TDD4Fog, we have presented some preliminary results on the key components of TDD4Fog and discussed some important future research directions.",IEEE,"scanners, network, scanner, scanning, nmap, gathering, comparisons, masscan, hosts, hackers, auditors, tools, penetration, enable, choice, consideration, seven, play, speed, step"
241,Metamorphic Testing of Code Search Engines,2020,"Code search engines are widely used by software developers. However, due to the huge amount of data being processed as well as the lack of complete specifications, the testing of code search engines faces the oracle problem. Metamorphic testing (MT) is a well-known testing technique that is effective for alleviating the oracle problem. In this paper, we propose to apply MT to test code search engines. We first identify five metamorphic relations (MRs) by considering the characteristics of code search engines. Four MRs are defined based on the partial specifications of code search engines and thus are used for the purpose of verification, and the one MR identified from the users' perspective can be used to conduct validation. The approach is evaluated by conducting a series of experiments involving four popular code search engines (namely, Krugle, searchcode, sourcegraph and Zoekt), and one well-known code repository (namely, GitHub) that provides the code search services. The experimental results show that the abnormal behaviors of Krugle, searchcode, GitHub, and Zoekt have been successfully detected. By further inspecting the root causes of these abnormal behaviors, three critical issues related with the code search engines under investigation are identified and reported. These results demonstrate the effectiveness of our approach, and are also helpful for the users and developers to gain a deeper understanding about the code search engines.",IEEE,"gis, samt, construction, mr, program, testing, telecommunications, participation, semiautomated, importantly, geographic, problem, location, superficial, outputs, visualization, constructing, foundation, kinds, mutations"
242,Using Constraint Solvers to Support Metamorphic Testing,2019,"One of the current challenges in the context of Metamorphic Testing (MT) is the formalization and validation of metamorphic relations (MRs), as there is no single method or homogeneous way of doing it. It is a part of this software testing technique that, unlike others, is not yet developed. On one hand, the fact of having an artifact that formally validates these main elements in MT, facilitates the task for developers and testers and ensures that the technique applied fulfills its function with guarantees. On the other hand, nowadays, there are numerous accessible tools based on highly consolidated and mature constraint solvers that can help in this process of validation. Interpreting MRs as a set of constraints, their validation with these tools is directly applicable. This paper presents a proposal based on a use case, in which MRs are implemented as a set of restrictions. The experiments and the results are described and future lines of research are outlined.",IEEE,"dnn, planning, path, reliability, problems, algorithms, dnns, based, dataset, training, threaten, sixteen, generality, combining, specialized, present, actually, randomly, pretrained, insufficient"
243,QoS-aware Metamorphic Testing: An Elevation Case Study,2020,"Elevators are among the oldest and most widespread transportation systems, yet their complexity increases rapidly to satisfy customization demands and to meet quality of service requirements. Verification and validation tasks in this context are costly, since they rely on the manual intervention of domain experts at some points of the process. This is mainly due to the difficulty to assess whether the elevators behave as expected in the different test scenarios, the so-called test oracle problem. Metamorphic testing is a thriving testing technique that alleviates the oracle problem by reasoning on the relations among multiple executions of the system under test, the so-called metamorphic relations. In this practical experience paper, we report on the application of metamorphic testing to verify an industrial elevator dispatcher. Together with domain experts from the elevation sector, we defined multiple metamorphic relations that consider domain-specific quality of service measures. Evaluation results with seeded faults show that the approach is effective at detecting faults automatically.",IEEE,"mr, constraints, defining, mrs, specific, violations, regression, automation, understanding, generating, changes, applicability, nuances, utilise, explainability, expected, capturing, generation, methods, phase"
244,MT4NS: Metamorphic Testing for Network Scanning,2021,"Network scanning tools play an important role in network information gathering, which is the first step in penetration testing. They are tools that can help both hackers and security auditors to detect the hosts in the network environment. Choice of scanner should take consideration of both the speed and the effectiveness of the scanner. In this paper, we report on an experience of using Metamorphic Testing to test two scanners, Nmap and Masscan. Seven Metamorphic Relations for network scanners are presented, and an investigation into their application is reported. The results show the potential for Metamorphic Testing to evaluate and enable comparisons of scanners, with possible problems identified in both scanners under test.",IEEE,"adda, checking, satisfaction, relation, scientific, testing, metamorphic, depended, dipole, promise, refinement, challenges, correlation, approximation, paired, replaced, grand, studying, discrete, adequately"
245,Semiautomated Metamorphic Testing Approach for Geographic Information Systems: An Empirical Study,2020,"A geographic information system (GIS) provides basic location-enabled services for many different applications related to navigation, education, and telecommunications. It is a foundation for analysis and visualization. Testing GIS is critical, but challenging due to the difficulty to assess the correctness of GIS outputs, which is called the test oracle problem of software testing. Metamorphic testing alleviates the problem by constructing metamorphic relations (MRs) among multiple inputs and outputs of the program under test. In this article, a semiautomated metamorphic testing (SAMT) method, based on the formal MR model and an improved adaptive random testing algorithm, was proposed to the GIS. To evaluate the performance of our approach, we conducted a case study on a superficial area calculation program, a typical component of GIS. Six kinds of MR construction methods were suggested for the GIS domain program testing. The experimental results show that SAMT can detect the mutations effectively that could solve the test oracle problem efficiently. More importantly, there is no need to manual participation in the testing process, except for the MR construction.",IEEE,"sqliv, penetration, imr, imt, inferential, fp, web, operators, background, tests, present, inferencebased, mmt, inbuilt, inherited, blind, inaccuracy, injection, mutational, deduction"
246,Testing DNN-Based Path Planning Algorithms by Metamorphic Testing,2020,"Deep Neural Networks (DNNs) are increasingly applied to solve path planning problems in recent years. However, unexpected or incorrect behaviors of DNNs greatly threaten the reliability of DNN-based path planning algorithms. Therefore, the reliability should be evaluated through the software testing process. The quality of the training dataset is of great importance to the pre-trained DNN models. The pretrained model may still lack generality by using a randomly generated and insufficient training dataset. And DNN-based system testing is faced with Oracle problems. Because Metamorphic Testing (MT) has been shown considerable effectiveness in alleviating the absence of oracle problems. To increase the reliability of DNN-based path planning algorithms, in this paper, we present a test technique specialized for DNN-based path planning algorithms based on metamorphic testing. We present a framework for systematically designing sixteen metamorphic relations (MRs) by combining input transformations and output relations. And experiments are carried out on an actually released business software system, which demonstrates that our method is effective. The results show that our approach can effectively improve the diversity of test data, the accuracy of the DNN model, and the reliability of the software.",IEEE,"slicing, orbs, boldsymboln, slices, vorbs, slice, deletion, execution, criterion, program, environments, environment, instantiations, retains, intuitive, speculatively, speculative, initialization, permanent, ameliorate"
247,Towards a Complete Metamorphic Testing Pipeline,2023,"Metamorphic Testing (MT) addresses the test oracle problem by examining the relationships between input-output pairs in consecutive executions of the System Under Test (SUT). These relations, known as Metamorphic Relations (MRs), specify the expected output changes resulting from specific input changes. However, achieving full automation in generating, selecting, and understanding MR violations poses challenges. Our research aims to develop methods and tools that assist testers in generating MRs, defining constraints, and providing explainability for MR outcomes. In the MR generation phase, we explore automated techniques that utilise a domain-specific language to generate and describe MRs. The MR constraint definition focuses on capturing the nuances of MR applicability by defining constraints. These constraints help identify the specific conditions under which MRs are expected to hold. The evaluation and validation involve conducting empirical studies to assess the effectiveness of the developed methods and validate their applicability in real-world regression testing scenarios. Through this research, we aim to advance the automation of MR generation, enhance the understanding of MR violations, and facilitate their effective application in regression testing.",IEEE,"failure, proximity, function, distance, pairwise, fingerprinting, signatures, slices, indexing, failures, violation, oracles, test, coverage, applicability, assignment, computes, duplicated, underpins, code"
248,An Application of Metamorphic Testing for Testing Scientific Software,2016,"One of the grand challenges for adequately testing scientific software is due to the oracle problem. Metamorphic testing is the promise technique for addressing the problem through checking the satisfaction of a metamorphic relation that defines the correlation on the relation of paired test inputs and the one of their corresponding outputs. Therefore, checking the correctness of an individual test is replaced by checking the satisfaction of the metamorphic relation among a group of tests. However, the quality of the testing is highly depended on the identification of metamorphic relations. In this paper, we use an iterative approach for the development and refinement of metamorphic relations during testing process through testing an open source discrete dipole approximation program called ADDA. Through studying ADDA program, we discuss the experience and challenges of metamorphic testing for testing scientific software.",IEEE,"variables, llm, workflow, manuals, end, extracting, matches, user, scientific, manually, human, prompt, consisting, fitting, scalable, autoregressive, auxiliary, arduous, showcase, shot"
249,An Inferential Metamorphic Testing Approach to Reduce False Positives in SQLIV Penetration Test,2017,"SQL Injection Vulnerability (SQLIV) has been the top-ranked threat to the Web security consistently for many years. Penetration tests, which are a most widely adopted technique to detect SQLIV, are usually affected by testing inaccuracy. This problem is even worse in inferencebased, blind penetration tests for online Web sites, where Web page variations (such as those caused by inbuilt dynamic modules or user interactions) may lead to a large number of False Positives (FP). We present a novel approach called Inferential Metamorphic Testing (IMT) to reduce FP in SQLIV penetration tests. First, we define the notion of Inferential Metamorphic Relations (IMR), which is inherited from Mutational Metamorphic Testing (MMT). Second, we present a set of logic operators and mutation operators for generating IMR and deducting the background testing context. Finally, we present an iterative IMT process, which is based on the heuristic IMR generation and the background testing context deduction. Our empirical study demonstrates the effectiveness of our approach by a comparison to three famous SQLIV penetration test tools.",IEEE,"arc, recognition, segmentation, components, activity, probabilistic, systems, nature, testing, mt, chain, mr, algorithms, exploits, association, approach, utilize, sequence, kernel, functionalities"
250,Assessing the Impact of Execution Environment on Observation-Based Slicing,2022,"Program slicing reduces a program to a smaller version that retains a chosen computation, referred to as a slicing criterion. One recent multi-lingual slicing approach, observation-based slicing (ORBS), speculatively deletes parts of the program and then executes the code. If the behavior of the slicing criteria is unchanged, the speculative deletion is made permanent. While this makes ORBS language agnostic, it can lead to the production of some non-intuitive slices. One particular challenge is when the execution environment plays a role. For example, ORBS will delete the line “$\mathrma=0$” if the memory location assigned to a contains zero before executing this statement, because the deletion does not affect the value of a and thus the slicing criterion. Consequently, slices can differ between execution environments due to factors such as initialization and call stack reuse. The technique considered, $\boldsymboln$ VORBS, attempts to ameliorate this problem by validating a candidate slice in $\boldsymboln$ different execution environments. We conduct an empirical study to collect initial insights into how often the execution environment leads to slice differences. Specifically, we compare and contrast the slices produced by seven different instantiations of $\boldsymboln$ VORBS. Looking forward, the technique can be seen as a variation on metamorphic testing, and thus suggests how ideas from metamorphic testing might be used to improve dynamic program analysis.",IEEE,"atom, mics, label, micss, dnn, recognizing, correlations, combinations, labels, combination, image, dnns, ability, industrial, classification, based, images, hoping, 587, voc"
251,Code Coverage-Based Failure Proximity without Test Oracles,2016,"Failure indexing technique plays an important role in modern software maintenance. It can facilitate duplicated failure removal, failure assignment, etc. Failure proximity is a crucial part that underpins failure indexing techniques. It is comprised of two components: a fingerprinting function extracting failure signatures from failures and a distance function computing pairwise distances between failures. Failure proximity usually assumes the existence of test oracle. However, in many real-life application domains, test oracles do not always exist. Hence, the applicability of existing failure proximity techniques is limited. In our paper, we focus on investigating how to apply metamorphic testing on code coverage-based failure proximity without test oracles. In our approach, instead of using the testing results of failure, the results of violation or non-violation for metamorphic test groups are used. Specifically, the fingerprinting function extracts signatures from metamorphic slices rather than execution slices and the distance function computes the pairwise distance between violations rather than between failures. Thereby, the applicability of failure proximity is extended to the situations without test oracles. The experimental results on 50 two-fault mutants show that the quality of proximity matrix obtained through our approach is statistical comparable to traditional code coverage-based failure proximity with test oracle.",IEEE,"ases, search, engine, analyzed, verifying, engines, behaviors, mrs, scientific, springer, mpshufflejd, differently, sciencedirect, characterized, certify, top1absent, acm, mptitle, mpublished, expected"
252,Large Language Models: The Next Frontier for Variable Discovery within Metamorphic Testing?,2023,"Metamorphic testing involves reasoning on necessary properties that a program under test should exhibit regarding multiple input and output variables. A general approach consists of extracting metamorphic relations from auxiliary artifacts such as user manuals or documentation, a strategy particularly fitting to testing scientific software. However, such software typically has large input-output spaces, and the fundamental prerequisite – extracting variables of interest – is an arduous and non-scalable process when performed manually. To this end, we devise a workflow around an autoregressive transformer-based Large Language Model (LLM) towards the extraction of variables from user manuals of scientific software. Our end-to-end approach, besides a prompt specification consisting of few-shot examples by a human user, is fully automated, in contrast to current practice requiring human intervention. We showcase our LLM workflow over a real case, and compare variables extracted to ground truth manually labelled by experts. Our preliminary results show that our LLM-based workflow achieves an accuracy of 0.87, while successfully deriving 61.8% of variables as partial matches and 34.7% as exact matches.",IEEE,"kpqc, candidates, round, pqc, submissions, cryptography, competition, security, quantum, post, implementation, external, analysis, 2022, libraries, extensive, perspective, performance, migration, korea"
253,Improve the Quality of ARC Systems Based on the Metamorphic Testing,2016,"In order to improve the quality of Activity Recognition Chain (ARC) systems, an effective testing approach is required to evaluate the functionalities of their major components, especially for two kernel components, the segmentation and recognition components. Both of them largely utilize the machine learning algorithms to achieve the detection and recognition of activity correctly. The probabilistic nature of the machine learning algorithms present severe challenge to the testing for the ARC systems. The article adopts a MT (metamorphic testing) methodology to address this topic. We analyze the MR (metamorphic relation) between the results of segmentation and recognition components. Based on this kind of MR, we propose a two-stage MT based approach for the testing of ARC systems, which exploits the association fact between segmentation and recognition, and then performs the MT testing on them respectively in sequence. This approach is able to deal with the specific issues in ARC systems testing, and provides a general method for systems testing with probabilistic nature.",IEEE,"object, images, detection, mutated, autonomous, vehicle, box, generate, dnns, systems, method, errors, sensitivity, noises, difficult, high, constructs, inexplicable, removing, removal"
254,ATOM: Automated Black-Box Testing of Multi-Label Image Classification Systems,2023,"Multi-label Image Classification Systems (MICSs) developed based on Deep Neural Networks (DNNs) are extensively used in people's daily life. Currently, although there are a variety of approaches to test DNN-based systems, they typically rely on the internals of DNNs to design test cases, and do not take the core specification of MICS (i.e., correctly recognizing multiple objects in a given image) into account. In this paper, we propose ATOM, an automated and systematic black-box testing framework for testing MICS. Specifically, ATOM exploits the label combination as the testing adequacy criteria, hoping to systematically examine the impact of correlations between a fixed number of labels on the classification ability of MICS. Then, ATOM leverages image search engine and natural language processing to find test images that are not only common to the real-world, but also relevant to target label combinations. Finally, ATOM combines metamorphic testing and label information to realize test oracle identification, based on which the ability of MICS in classifying different label combinations is evaluated. To evaluate the effectiveness of ATOM, we have performed experiments on two popular datasets of MICS, VOC and COCO (each with five state-of-the-art DNN models), and one real-world photo tagging application from our industrial partner. The experimental results reveal that the performance of current DNN-based MICSs remains less satisfactory even in recognizing correlations between only two labels, as ATOM triggers a total number of 6,049 such label combination related errors for all MICSs studied. In particular, ATOM reports 587 error-revealing images for the industrial MICS, in which 92% of them are confirmed by the developers.",IEEE,"regions, sensitive, dl, misclassified, xai, explainable, framework, misclassification, transforming, topics, research, specified, detects, mt, learning, employed, fact, prone, transformed, discuss"
255,On Applying Metamorphic Testing: An Empirical Study on Academic Search Engines,2019,"Software testing can be a helpful practice to certify the quality of a product. However, there are programs which are hard, if not impossible, to determine the expected outputs. This problem is called the ""oracle problem"". Metamorphic testing (MT) is an approach that aims to alleviate this problem by setting a series of relations, called metamorphic relations (MRs). This paper applies MT through a user-oriented approach and the following MRs: MPublished, MPTitle, MPShuffleJD and Top1Absent as a strategy for evaluating, verifying, and validating four Academic Search Engines (ASEs): ACM, IEEE, ScienceDirect, and Springer. Therefore, we conducted an experimental study to analyze how MRs can contribute to verifying the correctness of the properties of ASEs. Results indicate that the ASEs have performed differently in their execution for each MR analyzed. This shows that the algorithms of the scientific search engines have different behaviors among the characteristics analyzed. These behaviors may not be properly characterized by a possible failure, but by a simple design choice. On the other hand, the approach is useful for search engine users that need to be sure that the ASEs behave as expected during a search, as the results of secondary studies strongly depend on the correct behavior of the scientific search engine used.",IEEE,"bioinformatics, entity, lingpipe, bio, recognition, passed, mrs, test, failed, versions, faulty, testing, according, software, change, used, set, mt, determine, linguistics"
256,KpqBench: Performance and Implementation Security Analysis of KpqC Competition Round 1 Candidates,2024,"As the global migration to post-quantum cryptography (PQC) continues to progress actively, in Korea, the Post-Quantum Cryptography Research Center has been established to acquire PQC technology, leading the KpqC Competition. In February 2022, the KpqC Competition issued a call for proposals for PQC algorithms. By November 2022, 16 candidates were selected for the first round (7 KEMs and 9 DSAs). Currently, Round 1 submissions are being evaluated with respect to security, efficiency, and scalability in various environments. At the current stage, evaluating the software through an analysis to improve the software quality of the first-round submissions is judged appropriately. In this paper, we present analysis results regarding performance and implementation security on based dependency-free approach of external libraries. Namely, we configure extensive tests for an analysis with no dependencies by replacing external libraries that can complicate the build process with hard coding. From the performance perspective, we provide analysis results of performance profiling, execution time, and memory usage for each of the KpqC candidates. From the implementation security perspective, we examine bugs and errors in the actual implementations using Valgrind software, a Metamorphic Testing methodology that can include wide test coverage and constant-time implementation against the timing attack. Until the KpqC standard algorithm is announced, we argue that continuous integration of extensive tests will lead to a high-level clean code of KpqC candidates.",IEEE,"msf, multitest, perception, systems, multimodal, sensor, fitness, test, point, realistic, multi, object, ai, cases, tra, ditional, critical, realism, intricate, arms"
257,Object Removal for Testing Object Detection in Autonomous Vehicle Systems,2021,"An object detection system is a critical part of autonomous vehicle systems. To ensure the safety and efficiency of autonomous vehicles, object detection is required to satisfy high sensitivity and accuracy. However, the state-of-the-art object detection systems fully rely on the construction of Deep Neural Networks (DNNs), which are complex and difficult to understand. It is difficult to employ white-box testing on DNNs since the output of a single neuron is inexplicable to developers. In this paper, we propose a black-box testing method based on metamorphic testing to test object detection systems. This method can reveal errors in object detection and generate high-quality test input data, i.e., a large amount of mutated images. To this end, we set up a metamorphic relation for evaluation on the testing results of prediction and design a novel strategy via object removal to generate mutated images. Instead of existing methods of adding noises to images, our method constructs mutated images by removing an object from the image background. This work can generate new images for testing from input images and detect errors in object detection in autonomous vehicle systems.",IEEE,"diagnosis, covid, 19, classification, ct, assisted, intelligent, program, test, images, diseases, difficultly, instability, films, radiologists, accuracy, lesion, reviewing, transparency, programs"
258,Sensitive Region-Based Metamorphic Testing Framework using Explainable AI,2023,"Deep Learning (DL) is one of the most popular research topics in machine learning and DL-driven image recognition systems have developed rapidly. Recent research has employed metamorphic testing (MT) to detect misclassified images. Most of them discuss metamorphic relations (MR), with limited attention given to which regions should be transformed. We focus on the fact that there are sensitive regions where even small transformations can easily change the prediction results and propose an MT framework that efficiently tests for regions prone to misclassification by transforming these sensitive regions. Our evaluation demonstrated that the sensitive regions can be specified by Explainable AI (XAI) and our framework effectively detects faults.",IEEE,"simulation, validation, mt, restaurant, unavailable, servers, credibility, hybrid, agent, proper, applied, models, helping, confidence, discrete, event, access, build, require, situations"
259,Quality Assurance of Bioinformatics Software: A Case Study of Testing a Biomedical Text Processing Tool Using Metamorphic Testing,2018,"Bioinformatics software plays a very important role in making critical decisions with in many areas including medicine and healthcare. However, most of the research is directed towards developing tools, and little time and effort is spent on testing the software to assure its quality. In testing, a test oracle is used to determine whether a test is passed or failed during testing, and unfortunately, for much of bioinformatics software, the exact expected outcomes are not well defined. Thus, the main challenge associated with conducting systematic testing on bioinformatics software is the oracle problem. Metamorphic testing (MT) is a technique used to test programs that face the oracle problem. MT uses metamorphic relations (MRs) to determine whether a test has passed or failed and specifies how the output should change according to a specific change made to the input. In this work, we use MT to test LingPipe, a tool for processing text using computational linguistics, often used in bioinformatics for bio-entity recognition from biomedical literature. First, we identify a set of MRs for testing any bio-entity recognition program. Then we develop a set of test cases that can be used to test LingPipe's bio-entity recognition functionality using these MRs. To evaluate the effectiveness of this testing process, we automatically generate a set of faulty versions of LingPipe. According to our analysis of the experimental results, we observe that our MRs can detect the majority of these faulty versions, which shows the utility of this testing technique for quality assurance of bioinformatics software.",IEEE,"fake, news, software, detection, mt, impact, prediction, greater, accuracy, study, applicability, partly, inability, questionable, experimental, work, targets, affecting, reasonable, record"
260,Multitest:Physical-Aware Object Insertion for Testing Multi-Sensor Fusion Perception Systems,2024,"Multi-sensor fusion stands as a pivotal technique in addressing numerous safety-critical tasks and applications, e.g., self-driving cars and automated robotic arms. With the continuous advancement in data-driven artificial intelligence (AI), MSF's potential for sensing and understanding intricate external environments has been further amplified, bringing a profound impact on intelligent systems and specifically on their perception systems. Similar to tra-ditional software, adequate testing is also required for AI-enabled MSF systems. Yet, existing testing methods primarily concentrate on single-sensor perception systems (e.g., image-based and point cloud-based object detection systems). There remains a lack of emphasis on generating multimodal test cases for MSF systems. To address these limitations, we design and implement MULTI-TEST, a fitness-guided metamorphic testing method for complex MSF perception systems. Multitest employs a physical-aware approach to synthesize realistic multimodal object instances and insert them into critical positions of background images and point clouds. A fitness metric is designed to guide and boost the test generation process. We conduct extensive experiments with five SOTA perception systems to evaluate Multitest from the perspectives of: (1) generated test cases' realism, (2) fault detection capabilities, and (3) performance improvement. The results show that Multitest can generate realistic and modality-consistent test data and effectively detect hundreds of diverse faults of an MSF system under test. Moreover, retraining an MSF system on the test cases generated by Multitest can improve the system's robustness. Our replication package and synthesized testing dataset are publicly available at https://sites.google.com/view/msftest.",IEEE,"tc, reliability, tcs, neural, changes, coverage, networks, network, assured, risks, unseen, pay, exposing, safely, similarity, generated, shall, operate, risk, uncertain"
261,Metamorphic Testing of Classification Program for the COVID-19 Intelligent Diagnosis,2022,"The application of machine learning classification algorithms to COVID-19 for CT images assisted diagnosis not only reduces the workload of radiologists in reviewing films, but also improves the accuracy and efficiency of the assisted diagnosis results. However the instability of such machine learning models may lead to misclassification of results, and the expected output of the models may not be available due to the lack of transparency, which make the obtaining of test oracle difficultly. Thus in this paper, the metamorphic testing technique is applied to test the intelligent diagnosis classification program of COVID-19. The metamorphic relation is constructed by analyzing the characteristics of the lesion areas in the CT images of COVID-19, and compare consistency of the follow up test cases with the original test cases, that is how the failure detection rate of the program can be verified. The experimental results show that this method can detect the inconsistency of this program and it can be extended to test intelligent diagnosis classification programs of different diseases, thus further improving the accuracy of diagnosis classification programs.",IEEE,"expressions, arithmetic, predicate, relations, representation, forms, organized, geometry, categorizes, hiring, expression, percent, inclined, lays, algorithms, similarity, descriptions, generalized, affects, composite"
262,Metamorphic Testing for Hybrid Simulation Validation,2021,"Proper validation of a simulation model is essential for confidence in its accuracy and credibility. However, many of the most effective approaches for simulation validation require access to data that may be unavailable. Metamorphic Testing (MT), an approach from traditional software testing, has been shown to be useful for verification of simulation software in similar situations. Recent research shows that MT can be applied to the validation of agent based and discrete event simulation models as well. In this paper we build on that work and show how MT can be applied to hybrid simulation models. We demonstrate the effectiveness of our approach by applying it on a case study of helping behavior among servers in a restaurant.",IEEE,"software, testing, attractiveness, ingenuity, compounding, tutorial, instructors, creativity, unmotivated, misconceptions, menial, professing, altogether, man, omitted, left, fresh, status, exciting, lacking"
263,Exploring Metamorphic Testing for Fake-News Detection Software: A Case Study,2023,"Concerns have been growing over fake news and its impact. Software that can automatically detect fake news is becoming more popular. However, the accuracy and reliability of such fake-news detection software remains questionable, partly due to a lack of testing and verification. Testing this kind of software may face the oracle problem, which refers to difficulty (or inability) of identifying the correctness of the software’s output in a reasonable amount of time. Metamorphic testing (MT) has a record of effectively alleviating the oracle problem, and has been successfully applied to testing fake-news detection software. This paper reports on a study, extending previous work, exploring the use of MT for fake-news detection software. The study includes new metamorphic relations and additional experimental results and analysis. Some alternative MR-generation approaches are also explored. The study targets software where the output is a real/fake news decision, enhancing the applicability of MT to current fake-news detection software. The paper also explores the impact of the prediction accuracy of the fake-news detection software on the MT process. The study demonstrates the validity and applicability of MT to fake-news detection software. The prediction accuracy of the software has a greater impact on MT experiments with greater changes between the source and follow-up inputs, and less dependence on prediction stability. Some possible factors affecting the experimental results are discussed, and directions for future work are provided.",IEEE,"test, xunit, jfuzz, family, framework, illustrated, integrating, weak, kind, supporting, methodologies, java, plays, class, unit, testing, presented, examples, automation, role"
264,Reliability of Convolutional Neural Networks: Failure Metrics with Metamorphic Test Cases,2021,"The data-driven software development paradigm and the uncertain nature of deep neural networks bring new challenges for reliability engineering. In autonomous driving and other safety-critical domains, high reliability must be assured. However, failure metrics measuring reliability post deployment can be costly. To explore more efficient ways of assessing reliability, we leverage metamorphic testing where a follow-up test case (TC) can be automatically generated to account for unseen conditions once a source TC is given. We further determine source TCs by investigating various TC prioritization strategies based on risk, fault, similarity, and coverage. Our experiment on a convolutional neural network's image classifications shows that TC priorities determined by code coverage are prominent in exposing reliability issues, combined with the metamorphic TCs generated by semantic input data changes. The results also show that, in order to safely operate the neural networks, reliability engineers shall pay attention to the potential network structural changes and the evolving requirements-level risks.",IEEE,"variables, mrs, end, scientific, user, holds, associations, simultaneous, poster, multiple, forum, swmm, storm, parameter, classifying, operating, water, uncovers, input, software"
265,A Review of Metamorphic Relation Representation Forms,2023,"Metamorphic testing can effectively alleviate the problem of testing oracle. The lack of specification descriptions of metamorphic relations affects its generalized application. This text categorizes metamorphic relations into three types based on their representation forms: arithmetic expressions, predicate expressions, and other categories. Among the one hundred and sixty-two relations classified, arithmetic expressions account for sixty-four percent. Within geometry, numerical programs, and algorithms, the main to employ relations on arithmetic expressions, while machine learning and optimization algorithms are mainly inclined toward hiring predicate expression relations. Meanwhile, the research findings about the construction methods of metamorphic relations, the generation of original test cases, and the utilization of testing tools have been systematically organized to guide the application of the above techniques based on representation forms. Moreover, it lays the foundation for studying the fundamental nature of relationships, such as complexity, similarity, and relation composite.",IEEE,"relationship, optimization, gradient, item, zo, smooth, method, generation, solution, loss, non, distribution, line, optimal, function, metamorphic, search, absolute, estimator, differentiable"
266,Teaching software testing skills: Metamorphic testing as vehicle for creativity and effectiveness in software testing,2015,"In spite of its importance to software quality, software testing is often considered the ""poor man"" of software engineering processes, left to the end of many projects, and frequently omitted altogether. Compounding this is the reported perception of testing as a menial, low-level job, lacking any need for creativity or ingenuity, and of much lower status and attractiveness than others, such as design and implementation. When teaching about software testing, instructors often face very unmotivated students, professing little or no interest in becoming testers. This tutorial will address some testing misconceptions, and, through Metamorphic Testing - a new approach to testing which alleviates some of the major challenges in the field (including the Oracle Problem) - will provide a fresh and exciting new perspective on software testing.",IEEE,"mining, maximum, items, thresholds, efficiency, material, aspect, products, number, production, make, modify, itemset, mu, profits, itemsets, discovering, fixing, company, materials"
267,JFuzz: A Tool for Automated Java Unit Testing Based on Data Mutation and Metamorphic Testing Methods,2015,"Automated test framework plays a significant role in test driven software development methodologies. The XUnit family of testing tools has been widely used in the industry. However, they are weak in supporting test case generation and test result checking. In this paper we propose a new kind of test automation framework by integrating data mutation testing and metamorphic testing methods. A tool for unit testing of Java class called JFuzz is presented. Its uses are illustrated by examples.",IEEE,"shader, compilers, fshader, rendered, graphics, nvidia, intel, amd, gpu, rendering, uncover, programs, like, designed, driving, user, images, high, apple, vendors"
268,Finding Metamorphic Relations for Scientific Software,2021,"Metamorphic testing uncovers defects by checking whether a relation holds among multiple software executions. These relations are known as metamorphic relations (MRs). For scientific software operating in a large multi-parameter input space, identifying MRs that determine the simultaneous changes among multiple variables is challenging. In this poster, we propose a fully automatic approach to classifying input and output variables from scientific software's user manual, mining these variables' associations from the user forum to generate MRs, and validating the MRs with existing regression tests. Preliminary results of our end-to-end MR support for the Storm Water Management Model (SWMM) are reported.",IEEE,"visualizations, vizsmith, functions, code, creating, database, end, use, developers, user, search, tools, sift, 7176, steep, matplotlib, procedural, beginners, communicate, forums"
269,Metamorphic Relationship Generation Based on t-Distribution Zeroth-Order Optimization Method,2021,"Metamophic testing is an important method in software testing, and the generation of metamorphic relationship is just the key to metamorphic testing. However, there are some difficulties in generating the metamorphic relationship itself. Its loss function has item(s) defined by L1 norm, which means that it contains the absolute value item(s) and makes the whole problem be a non differentiable non-smooth optimization one. Thus, the conventional gradient related line search method cannot be used to find the optimal solution of the metamorphic relationship generation. Therefore, in this paper, a metamorphic relationship generation method based on t-distribution zero-order (ZO, a derivative free optimization algorithm) optimization method has been proposed, the traditional gradient solution process has been replaced by a gradient estimator obtained by the very t-distribution ZO optimization method, and the line search framework is used to solve the optimal solution of the non-smooth optimization loss function in metamorphic relationship generation.",IEEE,"scale, nasa, data, testing, determine, conducted, using, unfamiliar, telemetry, analysts, toolkit, approach, teams, acceptance, delivers, behaves, broad, occur, base, outcome"
270,Applicable Metamorphic Testing for Erasable-Itemset Mining,2022,"Erasable-itemset mining is often used in production planning to identify itemsets that, if removed, would make little effect on the production profits. Consequently, much recent attention has been focused on increasing the mining efficiency. Yet, in addition to mining efficiency, guaranteeing mining correctness is also an important issue. In real applications, wrong mining results might lead a company to make inappropriate decisions. Therefore, in this paper, we use the metamorphic testing, a lightweight software-testing strategy, to check the mining results via discovering proper metamorphic relations. The core idea contains five metamorphic relations oriented from two aspects. In the first aspect, we alter maximum thresholds without changing the input data, and in the second aspect, we modify product databases and material items with fixing maximum thresholds. In the experiments, 11 datasets and 76 mutants generated by  $\mu $ Java were used to discuss the effects of database parameters, including the average number of materials in products, the number of different material items, the number of products, and the maximum threshold, respectively. The experimental results show that the metamorphic relations deliver good assessment performances in terms of effectiveness and efficiency, especially the fourth metamorphic relation.",IEEE,"v2, stackgan, model, generative, training, robustness, images, authors, adversarial, text, network, algorithm, minimally, obtrusive, overlaps, successively, gan, synthesise, resolution, synthesising"
271,Metamorphic Shader Fusion for Testing Graphics Shader Compilers,2023,"Computer graphics are powered by graphics APIs (e.g., OpenGL, Direct3D) and their associated shader compilers, which render high-quality images by compiling and optimizing user-written high-level shader programs into GPU machine code. Graphics rendering is extensively used in production scenarios like virtual reality (VR), gaming, autonomous driving, and robotics. Despite the development by industrial manufacturers such as Intel, Nvidia, and AMD, shader compilers - like traditional software - may produce ill-rendered outputs. In turn, these errors may result in negative results, from poor user experience in entertainment to accidents in driving assistance systems. This paper introduces FSHADER, a metamorphic testing (MT) framework designed specifically for shader compilers to uncover erroneous compilations and optimizations. FSHADER tests shader compilers by mutating input shader programs via four carefully-designed metamorphic relations (MRs). In particular, FSHADER fuses two shader programs via an MR and checks the visual consistency between the image rendered from the fused shader program with the output of fusing individually rendered images. Our study of 12 shader compilers covers five mainstream GPU vendors, including Intel, AMD, Nvidia, ARM, and Apple. We successfully uncover over 16K error-triggering inputs that generate incorrect rendering outputs. We manually locate and characterize buggy optimization places, and developers have confirmed representative bugs.",IEEE,"ads, av, scenarios, traffic, realistic, autoware, behaviors, judging, non, hand, complex, great, testing, reliability, mt, mann, unable, cohen, rooms, wilcoxon"
272,VizSmith: Automated Visualization Synthesis by Mining Data-Science Notebooks,2021,"Visualizations are widely used to communicate findings and make data-driven decisions. Unfortunately creating bespoke and reproducible visualizations requires the use of procedural tools such as matplotlib. These tools present a steep learning curve as their documentation often lacks sufficient usage examples to help beginners get started or accomplish a specific task. Forums such as StackOverflow have long helped developers search for code online and adapt it for their use. However, developers still have to sift through search results and understand the code before adapting it for their use.We built a tool called VizSmith which enables code reuse for visualizations by mining visualization code from Kaggle notebooks and creating a database of 7176 reusable Python functions. Given a dataset, columns to visualize and a text query from the user, VizSmith searches this database for appropriate functions, runs them and displays the generated visualizations to the user. At the core of VizSmith is a novel metamorphic testing based approach to automatically assess the reusability of functions, which improves end-to-end synthesis performance by 10% and cuts the number of execution failures by 50%.",IEEE,"cram, mrhm, nuclide, nuclear, mrs, equation, burnup, according, algorithm, transition, depletion, chains, chebyshev, inventory, rational, lived, guiding, invalid, layers, mr"
273,Metamorphic Model-Based Testing Applied on NASA DAT -- An Experience Report,2015,"Testing is necessary for all types of systems, but becomes difficult when the tester cannot easily determine whether the system delivers the correct result or not. NASA's Data Access Toolkit allows NASA analysts to query a large database of telemetry data. Since the user is unfamiliar with the data and several data transformations can occur, it is impossible to determine whether the system behaves correctly or not in full scale production situations. Small scale testing was already conducted manually by other teams and unit testing was conducted on individual functions. However, there was still a need for full scale acceptance testing on a broad scale. We describe how we addressed this testing problem by applying the idea of metamorphic testing [1]. Specifically, we base it on equivalence of queries and by using the system itself for testing. The approach is implemented using a model-based testing approach in combination with a test data generation and test case outcome analysis strategy. We also discuss some of the issues that were detected using this approach.",IEEE,"lkas, adas, matlab, prebuilt, standards, 40, bug, tested, scenarios, programme, lane, adass, ncap, immediately, euro, corrected, team, keeping, protocols, continued"
274,Robustness Evaluation of Stacked Generative Adversarial Networks using Metamorphic Testing,2021,"Synthesising photo-realistic images from natural language is one of the challenging problems in computer vision. Over the past decade, a number of approaches have been proposed, of which the improved Stacked Generative Adversarial Network (StackGAN-v2) has proven capable of generating high resolution images that reflect the details specified in the input text descriptions. In this paper, we aim to assess the robustness and fault-tolerance capability of the StackGAN-v2 model by introducing variations in the training data. However, due to the working principle of Generative Adversarial Network (GAN), it is difficult to predict the output of the model when the training data are modified. Hence, in this work, we adopt Metamorphic Testing technique to evaluate the robustness of the model with a variety of unexpected training dataset. As such, we first implement StackGAN-v2 algorithm and test the pre-trained model provided by the original authors to establish a ground truth for our experiments. We then identify a metamorphic relation, from which test cases are generated. Further, metamorphic relations were derived successively based on the observations of prior test results. Finally, we synthesise the results from our experiment of all the metamorphic relations and found that StackGAN-v2 algorithm is susceptible to input images with obtrusive objects, even if it overlaps with the main object minimally, which was not reported by the authors and users of StackGAN-v2 model. The proposed metamorphic relations can be applied to other text-to-image synthesis models to not only verify the robustness but also to help researchers understand and interpret the results made by the machine learning models.",IEEE,"case, failed, test, infeasibility, restricts, severely, estimate, know, localization, debugging, impossible, likely, failure, lead, oracle, able, applicability, help, testing, fault"
275,A Metamorphic Testing Framework and Toolkit for Modular Automated Driving Systems,2023,"Autonomous vehicles (AV), at their highest potentials, will provide a greater mobility, an increased traffic efficiency and, more importantly, safer trips for millions of people every day. While assuring their safety and reliability is, thus, of great importance, it is also a huge challenge. Metamorphic testing (MT) has been shown to be one of the most successful testing techniques to validate automated driving systems (ADS) underpinning the AV. Having said that, there are still lots of rooms for further improving the ADS testing with MT. On one hand, the non-determinism in ADS’ behaviors poses great challenges for precisely judging their correctness. On the other hand, the testing scenarios used in the existing studies are still not very much complex for mimicking various realistic traffic conditions. In this study, we propose a new framework which takes into account the hypothesis testing to provide a more solid way for judging the non-deterministic behaviors of test outcomes. On top of that, we develop a new toolkit to implement more complex and realistic ADS testing scenarios. To demonstrate its practicability, we design complex traffic scenarios and pay attention to examine the ADS’ behaviors in non-collision cases which are often unable to be detected by conventional testing methods. It is then applied to test Autoware, a state-of-the-art modular ADS using the Carla simulator. An analysis of results with the Mann-Whitney-Wilcoxon test and Cohen’s d values reveals a large number of consistencies and reliability issues of Autoware. The findings highlight the flexibility and capability of our MT-based framework in validating the AV using a nondeterministic measure and realistic scenarios that can work in the absence of ground truth datasets.",IEEE,"metwiki, mrs, mt, testers, usages, link, illuminations, historical, desired, facilities, realized, revisited, reuse, illustrate, retrieval, aiming, repository, sample, valuable, access"
276,Metamorphic Relations Identification on Chebyshev Rational Approximation Method in the Nuclide Depletion Calculation Program,2020,"The Chebyshev rational approximation method (CRAM) is an essential numerical solution algorithm for the burnup equation. Since the high complexity of nuclide depletion calculation, especially the existence of short-lived nuclide and closed cycle in the transition chains, outputs of the program are almost impossible to predict accurately. Therefore, the traditional testing methods are inapplicable, even invalid. Metamorphic testing (MT) is a promising method to solve such a typical testing oracle problem. However, the absence of metamorphic relations (MRs) severely hinders its application. According to the nuclear software development process, we established a nuclear MR hierarchical model (MRHM) for guiding MR identification and classification. MRHM divides MRs into three layers: physics, algorithm, and code. After in-depth analysis, we carried out a group of MRs from the burnup equation and CRAM and classified them according to MRHM. We adopted these MRs in MT of the Nuclide Inventory Tool (NUIT), which is a program that has implemented CRAM. These MRs represent the natural properties of CRAM, and other CRAM programs indeed used them. Moreover, the MRHM will extend to more nuclear science software.",IEEE,"conference, ieee, milwaukee, j1c2, signature, marquette, hosted, document, compsac, wisconsin, presentation, usa, computers, journal, 2019, university, untestable, society, publication, following"
277,Enhancing Euro NCAP Standards with Metamorphic Testing for Verification of Advanced Driver-Assistance Systems,2021,"Advanced Driver-Assistance Systems (ADASs) have become increasingly popular. To ensure safety, simulation testing is essential. In this research, we conducted a case study to investigate the fault-detection effectiveness of existing ADAS testing standards: We tested the Lane Keeping Assist System (LKAS), which is a prebuilt ADAS module of MATLAB and Simulink. We first tested LKAS using the European New Car Assessment Programme (Euro NCAP), which contains 40 prebuilt driving scenarios in MATLAB. Our results show that none of the 40 scenarios detected any failure. We then continued the tests by applying a simple metamorphic relation ""equivalence under geometric transformation,"" and a previously unknown real-life bug in LKAS was immediately revealed. We reported this finding to the MATLAB team in the US, who then confirmed the bug and corrected the LKAS code. This research provides a strong case for incorporating metamorphic testing into ADAS testing standards and protocols.",IEEE,"stance, currency, exchange, specific, domain, detection, accuracy, specializes, transitive, debater, specializing, inaccurate, ibm, judging, expressions, proposed, method, sentences, creating, confirmed"
278,Identifying Failed Test Cases Through Metamorphic Testing,2017,"When testing a program without a test oracle, it is impossible to know whether a test case will lead to a failure or not. The infeasibility to identify a failed test case severely restricts the applicability of many testing, debugging and fault localization techniques. However, with the help of Metamorphic Testing (MT) which was proposed to alleviate the test oracle problem, we are able to estimate how likely a test case is a failed test case.",IEEE,"factor, relation, scores, evaluation, test, ranking, priority, needs, method, select, validity, costs, reduce, particularly, presented, limitations, multi, executed, significantly, single"
279,Looking for an MR? Try METWiki Today,2016,"Metamorphic Testing (MT) has been demonstrated to successfully alleviate oracle problems in many areas, including machine learning, compilers, bioinformatics, etc. However, given a new MT task, it is still very challenging to identify enough Metamorphic Relations (MRs) which are key components of MT. Aiming at this problem, we revisited previous MT applications and realized that they could form a very valuable database. Currently there is a lack of efficient link to get testers access these historical data. Therefore, in this paper, we propose to build METWiki, an MR repository, for collection and retrieval of these MRs. By providing exploration and search facilities, testers can find their desired MRs for reuse, reference, or inference. We also illustrate three sample usages of METWiki, which show important illuminations on how MRs can be obtained in practice.",IEEE,"rarity, semantic, rare, unit, based, mt, bert, misrecognition, researches, image, don, transforms, mts, rarely, diffusion, seed, units, stable, detects, recognized"
280,"An Extended Abstract of ""Metamorphic Testing: Testing the Untestable""",2019,"This document is an extended abstract of an IEEE Software paper, ""Metamorphic Testing: Testing the Untestable,"" presented as a J1C2 (Journal publication first, Conference presentation following) at the IEEE Computer Society signature conference on Computers, Software and Applications (COMPSAC 2019), hosted by Marquette University, Milwaukee, Wisconsin, USA.",IEEE,"medical, image, classification, models, combining, constructing, inconsistency, images, relations, semantics, general, characteristics, metamorphic, key, problems, information, conforming, percentage, patients, filming"
281,Automated Metamorphic Testing using Transitive Relations for Specializing Stance Detection Models,2023,"In machine-learning-based natural language processing, methods with high accuracy have been proposed for stance detection tasks. However, when they are applied to specific domains, they are often inaccurate due to domain-specific expressions. We propose an automated metamorphic testing method using transitive relations for creating training data that specializes stance detection in a specific domain. By specializing IBM Debater’s stance detection in currency exchange domain, we confirmed our proposed method can improve the accuracy of judging the currency exchange-related sentences.",IEEE,"node, gcns, gcn, bugs, pipeline, graph, approach, input, implementation, traceable, speedup, idle, cpu, synchronizes, leaves, compile, justifications, time, transparent, adaptively"
282,A Selection Method of Effective Metamorphic Relations,2022,"Metamorphic testing can effectively alleviate the test oracle problem. However, the program under test needs to be executed one more time; it is particularly significant to select the metamorphic relation with the highly fault-detecting ability and improve the test cost-effectiveness. Due to the limitations of existing evaluation methods in engineering applications, a validity evaluation method for metamorphic relation is presented based on single factor and multi-factor mutation scores. It can guide their priority ranking and selection. Experiments show that this method can significantly reduce test costs.",IEEE,"afp, gold, proteins, protein, tools, functions, standard, drug, incompleteness, annotations, workhorses, passing, causing, gaining, incomplete, failing, test, determines, defining, sequences"
283,Semantic Metamorphic Testing focusing on Object Rarity,2023,"Deep Learning (DL) driven image recognition systems have developed rapidly. Recent researches have applied metamorphic testing (MT) to detect image misrecognition. Most of them are based on non-semantic transformation, while semantic MTs don’t focus on rarity. Our fundamental concept is ""Rare object is rarely well-recognized."" In this paper, we propose a semantic rarity-based MT and its test architecture. It consists of two units: BERT-based unit and Stable-Diffusion-based unit. The former transforms a seed word into rare sentences. The latter generates corresponding rare images. Experiments are conducted and show that the semantic rarity-based MT detects more failures.",IEEE,"clustering, agglomerative, mrs, means, algorithms, approach, algorithm, testable, ii, violated, non, verification, borrowed, using, insightful, scikit, organization, hierarchy, don, customer"
284,Metamorphic Testing for the Medical Image Classification Model,2022,"The existing studies have applied metamorphic testing technique to testing the medical image classification models, effectively alleviating the test oracle problem and reducing the testing difficulty. However, existing methods mainly focus on constructing metamorphic relations by using general image transformation methods, without combining the knowledge characteristics of medical imaging domain, resulting in problems such as low validity of metamorphic relations. According to the above problems, this paper based on the premise of conforming to the real scenario of image diagnosis, combining the key information of medical image semantics, and constructing general metamorphic relations in this field from three dimensions: the characteristics of medical images in real environment, the regular changes of lesion stage in images and the motion artifacts produced by patients in the process of filming. The medical images classification models of COVID-19 were also selected for instance validation, and the metamorphic relations were quantitatively analyzed to detect inconsistency in the classification results of different models and to assess the robustness of the model. The experimental results show that the constructed metamorphic relations by the key information of medical image semantics are able to detect inconsistencies in the models with a high detection capability, with the inconsistency percentage reaching up to 38.05%. This method can also be extended to test different types of medical image classification models.",IEEE,"qbss, query, socalled, mrs, systems, web, appli, cability, imdb, skyscanner, limiting, pervasive, portals, qbs, creative, lightweight, displaying, seconds, managed, henceforth"
285,Detecting Implementation Bugs in Graph Convolutional Network based Node Classifiers,2020,"Graph convolutional networks (GCNs) have achieved state-of-the-art performance on the task of node classification. However, the performance of GCNs is prone to implementation bugs that do not explicitly produce compile-time or run-time errors but degrade their effectiveness heavily. These bugs are hard to detect, since the way in which the node attributes and graph structures contribute to the outputs is complicated, non-transparent, and not traceable by humans. To address this issue, we propose a systematic approach with formal justifications to detect implementation bugs in GCN based node classifiers. Our approach is based on the idea of Metamorphic Testing, which does not check input-output relations for a single input, but for input-output pairs. To speed up our approach, we design a pipeline system, which synchronizes the workload on CPUs and GPUs adaptively and processes them simultaneously. Our empirical study shows that our approach is able to identify over 80% of the synthetic mutants and two real-world bugs in GCN implementations. In addition, our pipeline system can achieve more than 10× speedup over the sequential system that leaves the CPU/GPU idle when using the other.",IEEE,"sos, systems, mrps, cs, concrete, problem, order, css, sufficiently, mass, exacerbated, casualty, borrow, incident, mci, represented, comprised, grid, viability, interacting"
286,Metamorphic Testing for Quality Assurance of Protein Function Prediction Tools,2019,"Proteins are the workhorses of life and gaining insight on their functions is of paramount importance for applications such as drug design. However, the experimental validation of functions of proteins is highly-resource consuming. Therefore, recently, automated protein function prediction (AFP) using machine learning has gained significant interest. Many of these AFP tools are based on supervised learning models trained using existing gold-standard functional annotations, which are known to be incomplete. The main challenge associated with conducting systematic testing on AFP software is the lack of a test oracle, which determines passing or failing of a test case; unfortunately, due to the incompleteness of gold-standard data, the exact expected outcomes are not well defined for the AFP task. Thus, AFP tools face the oracle problem. In this work, we use metamorphic testing (MT) to test nine state-of-the-art AFP tools by defining a set of metamorphic relations (MRs) that apply input transformations to protein sequences. According to our results, we observe that several AFP tools fail all the test cases causing concerns over the quality of their predictions.",IEEE,"sr, speech, recognition, devices, noise, mt, com, software, accuracy, baidu, reduce, environment, text, google, level, lfasr, text33https, aasr, text22https, text11https"
287,MT4UML: Metamorphic Testing for Unsupervised Machine Learning,2022,"One of the advantages of using unsupervised machine learning algorithms is that they don't need labeled data; thus, ultimately saving higher labeling costs for an organization. However, the computational complexity and large input space put these algorithms into the category of non-testable programs, which also suffer from the oracle problem. One popular testing approach, borrowed from the Software Engineering (SE) domain is the Metamorphic Testing (MT) technique that has been proven to be an effective approach in alleviating the oracle problem in testing such non-testable programs. We take advantage of this MT approach to make some insightful contributions that include: i) proposing a broader set of 22 Metamorphic Relations (MRs) for assessing the behavior of the K-means clustering algorithm (a prototype-based approach) and the Agglomerative clustering algorithm (a hierarchy-based approach), provided by the leading scikit-learn Python library, ii) providing a detailed analysis/reasoning to show how the proposed MRs can be used to target both the verification and validation aspects of testing the clustering algorithms under investigation, and iii) showing that verification of MRs using multiple criteria is more beneficial than relying on using just a single criterion (i.e., clusters assigned). We further applied the proposed approach to test an open source customer segmentation application and the results obtained show that, i) 10 MRs have been violated for both the K-means and Agglomerative clustering algorithms, and ii) in comparison to K-means, the Agglomerative clustering algorithm is highly susceptible to small changes in inputs and may not offer a better alternative to scenarios captured by the violated MRs.",IEEE,"drivers, graphicsfuzz, graphics, google, vulkan, spin, london, sourced, es, imperial, invited, acquired, college, company, talk, opengl, 2019, shader, compiler, 2018"
288,Automated Generation of Metamorphic Relations for Query-Based Systems,2022,"Searching and displaying data based on user queries is a pervasive feature of most software applications such as information systems, web portals, and web APIs. The large volume of data managed by these types of systems, henceforth called query-based systems (QBSs), makes them extremely hard to test due to the difficulty to assess whether the output of a query is correct, the socalled test oracle problem. Metamorphic testing has proved to be a very effective approach to alleviate the oracle problem in QBSs, by exploiting the relations among multiple executions of the QBS under test, socalled metamorphic relations (MRs). However, the identification of MRs mostly remains a manual and creative task, limiting the appli-cability of the approach. In this paper, we propose a method for the automated generation of MRs in QBSs starting from a lightweight specification of the query parameters of the system. Evaluation results show that hundreds of MRs can be automatically identified in real-world systems like IMDb, SkyScanner, or YouTube in just a few seconds.",IEEE,"distance, lower, number, defect, metamorphic, coverage, cost, relations, based, relation, nearly, discussions, meeting, summaries, procedures, condition, affects, ranking, quantitative, detection"
289,Metamorphic Testing for Reliability in System of Systems,2021,"System of Systems (SoS), refers to a class of systems that are comprised of independent constituent systems (CS) interacting with one another to form a larger system, thus resulting in a common goal being achieved through the set of interactions between the CSs. In conventional systems software testing, the problem of identifying correct behaviour given a set of test inputs is called the oracle problem. In terms of SoS, the oracle problem is exacerbated due to each CS in an SoS being sufficiently complex systems themselves. We address the oracle problem in the domain of the software testing in System of Systems (SoS) by applying Metamorphic Testing (MT). In order to derive concrete Metamorphic Relations (MR) for SoS, we first borrow the concept of creating MRs from abstract Metamorphic Relation Patterns (MRPs), where the represented MRPs themselves describe characteristics that are used in the modeling and analysis of SoS. They are then applied to two SoS simulator types, the Smart Grid SoS and Mass Casualty Incident (MCI) Response SoS in order to test for reliability in SoS and to also determine the viability of MT in SoS. It is shown through the experiments conducted that the derived concrete MRs are able to find faults in both the systems under test.",IEEE,"object, scenic, detector, detectors, driving, autonomous, solved, urgent, pixels, develops, perturb, yolact, 43, probabilities, happen, 96, minimum, github, scene, brings"
290,SR-MT: A Metamorphic Method to Test the Robustness of Speech Recognition Software,2022,"Speech recognition (SR) systems are systems that convert speech signals into text and are widely used in mobile devices, wearable devices, and intelligent living room devices. When SR software recognizes speech in the laboratory or another quiet environment, the recognition accuracy is high. However, when SR software is applied in a complex real-world environment, there may be back-ground noise from birds, machines, and so on, the influence of other speakers, or other adverse factors, which will reduce the recognition accuracy of the SR software. In this work, we propose SR-MT, which is a metamorphic testing (MT) approach to test the robust-ness of SR software. In SR-MT, we adopt four criteria to analyze the MT results and rank the robustness of the target SR software for speech affected by noise interference and speech variations from level 1 to level 5. SR-MT was evaluated on three real industrial applications: iFLYTEK speech-to-text11https://www.xfyun.cn/services/lfasr, Baidu speech-to-text22https://ai.baidu.com/tech/speech/aasr, and Google speech-to-text33https://cloud.google.com/speech-to-text. We found that on average, 13.5% of the words in the speech could not be recognized correctly when the signal-to-noise ratio reached 10 dB. Similarly, changes in speech speed and tone will also reduce the recognition accuracy of SR software.",IEEE,"driving, inequality, autonomous, relations, efficiently, based, models, robustness, metamorphic, audi, basically, promoted, tesla, iemt, compares, raises, actively, equality, detect, manufacturers"
291,Metamorphic Testing of Android Graphics Drivers,2019,"My MET 2019 invited talk will focus on GraphicsFuzz, a technique and tool for automated metamorphic testing of the shader compiler components of graphics drivers. Starting out as a research project at Imperial College London, GraphicsFuzz led to a spin-out company of the same name, which was acquired by Google in 2018. The technology has since been open sourced and is being used by Google to test Vulkan and OpenGL ES graphics drivers and supporting tools.",IEEE,"capabilities, fault, cases, test, datasets, detection, augmented, follow, digits, ask, handwritten, feeding, contributes, 70, augment, source, amounts, inclusion, impacts, mrs"
292,Metamorphic Relations Prioritization And Selection Based on Test Adequacy Criteria,2022,"Metamorphic testing is the mainstream technique to solve oracle problems, and the effectiveness of metamorphic relations directly affects the testing cost. Most existing studies are summaries of engineering experience and lack theoretical discussions. A distance-based definition of metamorphic relation validity is provided, and a quantitative relationship model based on distance and test coverage is established to guide metamorphic relation selection and ranking. Experiments on four procedures and nearly 50 metamorphic relations show that, compared with random, coverage-based, and distance-based methods, this method has higher defect detection capability and can improve test effectiveness under the condition of using the same number of metamorphic relations. The number of metamorphic relations used in this method is lower than the number of programs under test and the cost of testing is lower while meeting the same defect detection level.",IEEE,"clusters, classification, operations, image, algorithm, metamorphic, relations, covariate, dendrogram, plots, began, deep, experiments, recommend, entropy, save, understood, hierarchical, train, poorly"
293,Testing Autonomous Driving System based on Scenic,2021,"Autonomous driving system develops rapidly in recent years, which also brings many critical issues. Object detector is one of the most important modules in autonomous driving system, how to ensure its quality is an urgent problem to be solved. Many studies have been carried out to perturb the input images by mutation to test object detectors. But digital adversarial perturbations, e.g., changing image pixels, may never happen in the physical world. Therefore, a metamorphic testing approach for object detectors based on Scenic is proposed in this paper. An abstract scene in Github repository of Scenic and object detector Yolact were used in the experiments. The experimental result shows that the proposed approach can obtain a minimum of 43% and a maximum of 96% defect detection rates under different confidence probabilities.",IEEE,"translation, sentence, sit, machine, similar, sentences, political, 70, foreign, structures, word, structure, source, validating, robustness, difficult, constituency, syntactically, mistranslation, symptoms"
294,IEMT: Inequality-Based Metamorphic Testing for Autonomous Driving Models,2022,"In the last ten years, the development of deep learning has promoted the progress of autonomous driving. Several major manufacturers, including Google, Tesla, Baidu, Audi, etc., are building and actively testing self-driving cars. However, the safety of autonomous driving still raises concerns. Recent research has used metamorphic testing to evaluate the robustness of autonomous driving models, but metamorphic relations defined during the test are basically based on equality, and there are very few inequality-based metamorphic relations. Our goal is to provide more inequality-based metamorphic relations to efficiently detect autonomous driving model violations. IEMT proposes additional inequality-based metamorphic relations and compares the robustness of autonomous driving models based on different neural network models. The experimental results show that the metamorphic relations we proposed can detect inconsistent behaviors of the driving model quite efficiently.",IEEE,"ods, driven, fault, methods, detection, mt, types, different, study, relative, counterparts, videos, pictures, observation, tedious, output, based, input, detectors, labeled"
295,Follow-up Test Cases are Better Than Source Test Cases in Metamorphic Testing: A Preliminary Study,2021,"Recently, metamorphic testing (MT) has been used to augment test datasets by inclusion of new (follow-up) test cases constructed from existing (source) test cases using metamorphic relations (MRs). It has been reported that the augmented test datasets usually have higher fault detection capabilities. It is natural to ask which contributes to the improvement of the fault detection capabilities. To investigate this issue, we conducted an empirical study on three DNN models by feeding 70,000 handwritten digits images, in which six sets of MRs were designed. We found that follow-up test cases have better fault detection capabilities than source test cases. Furthermore, the impacts of the amounts of follow-up test cases on the fault detection capabilities of the augmented test datasets were investigated.",IEEE,"search, vertical, engine, greatly, rate, requirements, users, verification, divide, timeout, returned, tovertical, collectsinformation, badcase, selenium, tools, data, implicit, improve, replace"
296,Metamorphic Testing for Convolutional Neural Networks: Relations over Image Classification,2021,"Testing deep learning systems requires expensive labeled data. In recent years, researchers began to leverage metamorphic testing to address this issue. However, metamorphic relations on image data remain poorly understood. To gain a deeper understanding of these metamorphic relations, we survey common image operations modeling covariate shift, manually classify and categorize the underlying metamorphic relations, and conduct experiments to validate our classifications. In our experiments, we train three popular convolutional neural network architectures on an image classification task. Next, we apply metamorphic operations on input test images and measure the change in classification accuracy and cross-entropy loss. A hierarchical clustering algorithm clusters these results and plots a dendrogram. We compare the groups from manual classification and the clusters from the algorithm to provide key insights. We find that Affine and Noise relations are consistent. Furthermore, we recommend metamorphic relationships to save time and better test deep learning systems in the future.",IEEE,"embedded, hardware, graphics, libraries, vps, mt, integration, predetermined, tft, espi, firmware, gd32v, vp, graphic, virtualizing, framework, prototypes, confirming, automating, risc"
297,Structure-Invariant Testing for Machine Translation,2020,"In recent years, machine translation software has increasingly been integrated into our daily lives. People routinely use machine translation for various applications, such as describing symptoms to a foreign doctor and reading political news in a foreign language. However, the complexity and intractability of neural machine translation (NMT) models that power modern machine translation make the robustness of these systems difficult to even assess, much less guarantee. Machine translation systems can return inferior results that lead to misunderstanding, medical misdiagnoses, threats to personal safety, or political conflicts. Despite its apparent importance, validating the robustness of machine translation systems is very difficult and has, therefore, been much under-explored. To tackle this challenge, we introduce structure-invariant testing (SIT), a novel metamorphic testing approach for validating machine translation software. Our key insight is that the translation results of “similar” source sentences should typically exhibit similar sentence structures. Specifically, SIT (1) generates similar source sentences by substituting one word in a given sentence with semantically similar, syntactically equivalent words; (2) represents sentence structure by syntax parse trees (obtained via constituency or dependency parsing); (3) reports sentence pairs whose structures differ quantitatively by more than some threshold. To evaluate SIT, we use it to test Google Translate and Bing Microsoft Translator with 200 source sentences as input, which led to 64 and 70 buggy issues with 69.5% and 70% top-1 accuracy, respectively. The translation errors are diverse, including under-translation, over-translation, incorrect modification, word/phrase mistranslation, and unclear logic.",IEEE,"classifier, mrs, report, use, original, images, algorithms, enhancements, artcodes, augmentation, occlusion, markers, separation, enable, performance, extending, hidden, machine, working, augmented"
298,An Empirical Study of Fault Detection Effectiveness of Metamorphic Testing for Object Detectors,2023,"Object detectors (ODs) have been applied in various fields to identify target objects in pictures and videos. A commonly used approach for validating ODs is to compare their outputs with manually labeled data, in which labeling is tedious and time-consuming. To alleviate this problem, Metamorphic Testing (MT) based methods can be used to generate test cases automatically for testing ODs. Our survey has identified two different types of MT-based methods: input driven and output driven. We also observed that their relative effectiveness in fault detection has not yet been studied and compared. Inspired by this observation, we performed an empirical study with different types of ODs to address this research gap. In our study, we proposed an evaluation framework involving three different fault detection effectiveness metrics. An important finding of our study is that the input driven MT-based methods have better fault detection performance than their output driven counterparts.",IEEE,"simulation, abm, des, validating, executable, models, mt, potent, methodical, airport, gossip, realm, validation, taking, studies, agent, pseudo, cancer, establishing, discrete"
299,Automated Functional Testing of Search Engines using Metamorphic Testing,2021,"Search engine refers to a system that collectsinformation on the Internet according to a certain strategy and provides users with search services. Faced with a large amount of information, the testers lack an oracle to verify whether the results returned are correct. The vertical search engine is established in a specific scenario. Its search query are limited. Further verification of vertical search data can greatly improve the quality of product to users. We apply the metamorphic testing (MT) tovertical search engines testing with metamorphic relationships(MRs), which replace the traditional oracle. We divide the MRs into explicit requirements and implicit requirements and develop tools. The tools is based on the Selenium framework, driven by search-engine-data to realize automated testing. We conduct experiments on the Baidu search engine, and the results proved that this method can achieve further verification of vertical data, greatly improve the badcase-rate and timeout-rates and error-rate.",IEEE,"data, quality, assessment, big, exemplary, era, velocity, everyday, approach, things, application, new, suitability, tremendous, internet, volume, applies, computing, presented, impact"
300,Verifying Embedded Graphics Libraries leveraging Virtual Prototypes and Metamorphic Testing,2024,"Embedded graphics libraries are part of the firmware of embedded systems and provide complex functionalities optimized for specific hardware. After unit testing of embedded graphics libraries, integration testing is a significant challenge, in particular since the hardware is needed to obtain the output image as well as the inherent difficulty in defining the reference result. In this paper, we present a novel approach focusing on integration testing of embedded graphic libraries. We leverage Virtual Prototypes (VPs) and integrate them with Metamorphic Testing (MT). MT is a software testing technique that uncovers faults or issues in a system by exploring how its outputs change under predefined input transformations, without relying on explicit oracles or predetermined results. In combination with virtualizing the displays in VPs, we even eliminate the need for physical hardware. This allows us to develop a MT framework automating the verification process. In our evaluation, we demonstrate the effectiveness of our MT framework. On an extended RISC-V VP for the GD32V platform we found 15 distinct bugs for the widely used TFT eSPI embedded graphics library, confirming the strength our approach.",IEEE,"stream, streams, video, input, frame, frames, method, perception, follow, inplace, undetected, finer, treating, incorrectly, granularity, generate, obstacle, place, runtime, relations"
301,Enhancing Supervised Classifications with Metamorphic Relations,2018,"We report on a novel use of metamorphic relations (MRs) in machine learning: instead of conducting metamorphic testing, we use MRs for the augmentation of the machine learning algorithms themselves. In particular, we report on how MRs can enable enhancements to an image classification problem of images containing hidden visual markers (“Artcodes”). Working on an original classifier, and using the characteristics of two different categories of images, two MRs, based on separation and occlusion, were used to improve the performance of the classifier. Our experimental results show that the MR-augmented classifier achieves better performance than the original classifier, algorithms, and extending the use of MRs beyond the context of software testing.",IEEE,"hands, hpe, hand, models, performance, bodyhands, occlusions, nsrm, mediapipe, blur, estimation, motion, pose, robustness, degrade, poses, 50, average, identified, blurred"
302,Increasing Validity of Simulation Models Through Metamorphic Testing,2019,"Simulation validation, demonstrating that a simulation accurately represents the system it studies, poses a particularly potent form of the oracle problem. A simulation must be validated for its results to be reliable, but often no oracle exists due to the nature of simulations. We propose taking the metamorphic testing (MT) approach from the realm of software verification and applying it for validating executable simulation models. By establishing pseudo-oracles based on metamorphic relations between parameters and behaviors within an executable model, we can create a methodical approach for validating simulation models. We propose an overall framework and guidelines to apply MT for simulation validation, with details for two prevalent simulation approaches: agent-based simulation models (ABM), and discrete-event simulation (DES) modeling. Through three case studies, we demonstrate the successful application of MT toward validating three different simulation models: an ABM of gossip propagation, an ABM of cancer, and a DES of airport check-in and security.",IEEE,"mr, mrs, referred, sut, regression, research, output, changes, test, aimed, universally, entailing, standardised, acknowledges, metratrimmer, expected, problem, encompasses, explanations, constraining"
303,Addressing Data Quality Problems with Metamorphic Data Relations,2019,"In the era of big data, cloud computing and the Internet of Things, the quality of data has tremendous impact on our everyday life. Moreover, the increasing velocity, volume and variety of data requires new approaches for quality assessment. In this paper, a new approach for quality assessment is presented that applies metamorphic testing to data quality. The exemplary application of the approach on a big data application shows promising results for the suitability of the approach.",IEEE,"qa, inference, questions, answers, logically, kg, kgit, graph, software, models, testing, driven, knowledge, relations, folds, wake, misbehaving, developments, inevitably, penetrated"
304,In-Place Metamorphic Testing and Exploration,2022,"In this paper, we consider the testing of software whose input involves a data stream, such as in video analysis applications. To address the oracle problem in testing this kind of software, existing metamorphic testing (MT) and metamorphic exploration (ME) techniques typically generate both source and follow-up input streams. In contrast, we propose a different strategy: an inplace method. Instead of examining relations among multiple input streams, our method works on a finer granularity by investigating relations among the data frames within a single input stream - such as the relations among the image frames within a video stream - treating a frame, rather than a stream, as a test case. Because our method does not generate any follow-up input stream, or change any frame values, it is also suitable for runtime error detection. We have applied this in-place method to testing video streams in Baidu Apollo, a real-life autonomous driving system. Our study identified previously-unknown obstacle perception failures in the camera perception module, including both undetected and incorrectly-detected objects. The empirical results show that our approach is practical, and readily applicable to industrial-scale systems that include (but are not limited to) the computer vision domain.",IEEE,"parameters, preprocessing, yield, model, satellite, ensembled, proposed, forecasting, deep, improved, performance, tested, compared, input, literature, neural, images, recurrent, vegetation, gated"
305,Robustness Evaluation in Hand Pose Estimation Models using Metamorphic Testing,2023,"Hand pose estimation (HPE) is a task that predicts and describes the hand poses from images or video frames. When HPE models estimate hand poses captured in a laboratory or under controlled environments, they normally deliver good performance. However, the real-world environment is complex, and various uncertainties may happen, which could degrade the performance of HPE models. For example, the hands could be occluded, the visibility of hands could be reduced by imperfect exposure rate, and the contour of hands prone to be blurred during fast hand movements. In this work, we adopt metamorphic testing to evaluate the robustness of HPE models and provide suggestions on the choice of HPE models for different applications. The robustness evaluation was conducted on four state-of-the-art models, namely MediaPipe hands, OpenPose, BodyHands, and NSRM hand. We found that on average more than 80% of the hands could not be identified by BodyHands, and at least 50% of hands could not be identified by MediaPipe hands when diagonal motion blur is introduced, while an average of more than 50% of strongly underexposed hands could not be correctly estimated by NSRM hand. Similarly, applying occlusions on only four hand joints will also largely degrade the performance of these models. The experimental results show that occlusions, illumination variations, and motion blur are the main obstacles to the performance of existing HPE models. These findings may pave the way for researchers to improve the performance and robustness of hand pose estimation models and their applications.",IEEE,"traffic, light, recognition, lights, driving, autonomous, labels, approach, end, colors, ment, environ, prohibitively, need, systems, verifies, discovers, generate, automatically, test"
306,Selecting and Constraining Metamorphic Relations,2024,"Software testing is a critical aspect of ensuring the reliability and quality of software systems. However, it often poses challenges, particularly in determining the expected output of a System Under Test (SUT) for a given set of inputs, a problem commonly referred to as the test oracle problem. Metamorphic Testing (MT) offers a promising solution to the test oracle problem by examining the relations between input-output pairs in consecutive executions of the SUT. These relations, referred to as Metamorphic Relations (MRs), define the expected changes in the output when specific changes are made to the input. Our research is focused on developing methods and tools to assist testers in the selection of MRs, the definition of constraints, and providing explanations for MR outcomes. The research is divided in three parts. The first part focuses on MR collection and description, entailing the creation of a comprehensive repository of MRs from various sources. A standardised MR representation is devised to promote machine-readability and wide-ranging applicability. The second part introduces MetraTrimmer, a test-data-driven approach for systematically selecting and constraining MRs. This approach acknowledges that MRs may not be universally applicable to all test data space. The final part, evaluation and validation, encompasses empirical studies aimed at assessing the effectiveness of the developed methods and validating their suitability for real-world regression testing scenarios. Through this research, we aim to advance the automation of MR generation, enhance the understanding of MR violations, and facilitate their effective application in regression testing.",IEEE,"fairness, ml, phase, orderings, balanced, tile, data, training, usage, classifiers, checking, learning, age, unbalanced, discriminating, came, learner, disregarding, treat, algorithms"
307,Knowledge Graph Driven Inference Testing for Question Answering Software,2024,"In the wake of developments in the field of Natural Language Processing, Question Answering (QA) software has penetrated our daily lives. Due to the data-driven programming paradigm, QA software inevitably contains bugs, i.e., misbehaving in real-world applications. Current testing techniques for testing QA software include two folds, reference-based testing and metamorphic testing. This paper adopts a different angle to achieve testing for QA software: we notice that answers to questions would have inference relations, i.e., the answers to some questions could be logically inferred from the answers to other questions. If these answers on QA software do not satisfy the inference relations, an inference bug is detected. To generate the questions with the inference relations automatically, we propose a novel testing method Knowledge Graph driven Inference Testing (KGIT), which employs facts in the Knowledge Graph (KG) as the seeds to logically construct test cases containing questions and contexts with inference relations. To evaluate the effectiveness of KGIT, we conduct an extensive empirical study with more than 2.8 million test cases generated from the large-scale KG YAGO4 and three QA models based on the state-of-the-art QA model structure. The experimental results show that our method (a) could detect a considerable number of inference bugs in all three studied QA models and (b) is helpful in retraining QA models to improve their inference ability.",IEEE,"anomalies, deepfake, model, fairness, dl, ai, female, makeup, male, mesoinception, examine, work, detection, input, potential, images, shadows, blushes, population, biases"
308,Enhanced Deep Learning Satellite-based Model for Yield Forecasting and Quality Assurance Using Metamorphic Testing,2023,"Fresh produce (FP) yield forecasting is crucial for both: farmers to estimate fair prices for their crops and retailers to protect against highly priced FPs. To precisely forecast future yield, a deep learning forecasting model is proposed in this work which is trained and tested using relevant input parameters retrieved from satellite images and mapped to tabular yield data recorded for strawberry as an output parameter. To enhance the model performance, the preprocessing approaches and the set of input parameters are improved. The best satellite image preprocessing technique has to be found to represent the images with less data for efficiency. Therefore, a preprocessing approach based on averaging is proposed and implemented then compared with the literature approach which is based on histograms, where the proposed approach improved performance by 20%. The proposed Deep Feed Forward Neural Network with Embedded Gated Recurrent Units (DFNNGRU) ensembled with Attention Deep GRUs (ADGRU) is then tested against well-performing models of Stacked-AutoEncoder (SAE) ensembled with Convolution Neural Networks with Long-short term memory (CNNLSTM), where the proposed model is found to outperform the literature model by 12.5%. To have a better set of parameters, a Normalized Vegetation Difference Index (NDVI) is added to the input parameters which further enhances the performance by 2%. Finally, a quality assurance technique using metamorphic testing is applied and it is found that the model fulfills all expected metamorphic relations which proves the soundness and quality of the model as compared with other solutions.",IEEE,"μmt, figuring, metamorphic, acquisition, numeric, reasonable, directed, relations, deriving, involved, case, derive, feasible, derived, situations, proposes, methodology, mutation, key, challenge"
309,Metamorphic Testing for Traffic Light Recognition in Autonomous Driving Systems,2021,"Traffic light recognition is significant for environ-ment perception and behavior planning in autonomous driving systems. Erroneous traffic light recognition results can lead to serious traffic accidents. Thus, it is necessary to ensure the correctness of traffic light recognition in autonomous driving systems. However, the existing approaches to testing traffic light recognition need manual collection and labeling test data which become prohibitively expensive as the number of test situations increases. In this paper, we propose an approach that uses metamorphic testing to test traffic light recognition. The approach does not need labels to verify traffic light recognition results and can automatically generate traffic lights of different colors of the same scene. In the final experimental stage, we implement our approach to test traffic light recognition models and end-to-end autonomous driving systems. The result of the experiment demonstrates that our approach verifies traffic light recognition results independent of labels and can automatically generate natural traffic lights. Moreover, our approach also discovers traffic light recognition errors.",IEEE,"metatrimmer, step, selecting, mrs, preliminary, data, applicability, logging, comprises, strict, seamless, inspections, mr, avoidance, constraining, evaluation, test, assumptions, novelty, facilitates"
310,Testing Machine Learning Algorithms for Balanced Data Usage,2019,"With the increased application of machine learning (ML) algorithms to decision-making processes, the question of fairness of such algorithms came into the focus. Fairness testing aims at checking whether a classifier as ""learned"" by an ML algorithm on some training data is biased in the sense of discriminating against some of the attributes (e.g. gender or age). Fairness testing thus targets the prediction phase in ML, not the learning phase. In this paper, we investigate fairness for the learning phase. Our definition of fairness is based on the idea that the learner should treat all data in the training set equally, disregarding issues like names or orderings of features or orderings of data instances. We term this property balanced data usage. We consequently develop a (metamorphic) testing approach called TiLe for checking balanced data usage. TiLe is applied on 14 ML classifiers taken from the scikit-learn library using 4 artificial and 9 real-world data sets for training, finding 12 of the classifiers to be unbalanced.",IEEE,"cpsos, mrs, operation, uncertainties, capture, engineers, generated, environment, physical, behaviors, method, challenge, realistically, logs, fot, innate, mr, operational, constituent, robot"
311,Fairness Evaluation in Deepfake Detection Models using Metamorphic Testing,2022,"Fairness of deepfake detectors in the presence of anomalies are not well investigated, especially if those anomalies are more prominent in either male or female subjects. The primary motivation for this work is to evaluate how deepfake detection model behaves under such anomalies. However, due to the black-box nature of deep learning (DL) and artificial intelligence (AI) systems, it is hard to predict the performance of a model when the input data is modified. Crucially, if this defect is not addressed properly, it will adversely affect the fairness of the model and result in discrimination of certain sub-population unintentionally. Therefore, the objective of this work is to adopt metamorphic testing to examine the reliability of the selected deepfake detection model, and how the transformation of input variation places influence on the output. We have chosen MesoInception-4, a state-of-the-art deepfake detection model, as the target model and makeup as the anomalies. Makeups are applied through utilizing the Dlib library to obtain the 68 facial landmarks prior to filling in the RGB values. Metamorphic relations are derived based on the notion that realistic perturbations of the input images, such as makeup, involving eyeliners, eye shadows, blushes, and lipsticks (which are common cosmetic appearance) applied to male and female images, should not alter the output of the model by a huge margin. Furthermore, we narrow down the scope to focus on revealing potential gender biases in DL and AI systems. Specifically, we are interested to examine whether MesoInception-4 model produces unfair decisions, which should be considered as a consequence of robustness issues. The findings from our work have the potential to pave the way for new research directions in the quality assurance and fairness in DL and AI systems.",IEEE,"av, simulator, road, svl, situations, pedestrians, apollo, vehicles, tested, scenarios, imitate, hazardous, 576, ahead, 486, prohibit, naturalistic, accounting, affordably, assertion"
312,μMT: A Data Mutation Directed Metamorphic Relation Acquisition Methodology,2016,"When figuring out the expected output for each test case is difficult, metamorphic testing can be applied to alleviate such situations. An involved key challenge is to derive metamorphic relations for the program under test. This paper proposes a data-mutation directed metamorphic relation acquisition methodology called μMT. Experimental results on three case studies show that μMT is feasible in deriving metamorphic relations for numeric applications and the derived metamorphic relations show reasonable fault detection effectiveness.",IEEE,"image, adversarial, attacks, detect, small, misclassify, guarding, crafted, naked, manipulations, rise, eye, surveillance, imperceptible, consumer, industries, affine, approach, detrimental, models"
313,Exploring a Test Data-Driven Method for Selecting and Constraining Metamorphic Relations,2023,"Identifying and selecting high-quality Metamorphic Relations (MRs) is a challenge in Metamorphic Testing (MT). While some techniques for automatically selecting MRs have been proposed, they are either domain-specific or rely on strict assumptions about the applicability of a pre-defined MRs. This paper presents a preliminary evaluation of MetaTrimmer, a method for selecting and constraining MRs based on test data. MetaTrimmer comprises three steps: generating random test data inputs for the SUT (Step 1), performing test data transformations and logging MR violations (Step 2), and conducting manual inspections to derive constraints (Step 3). The novelty of MetaTrimmer is its avoidance of complex prediction models that require labeled datasets regarding the applicability of MRs. Moreover, MetaTrimmer facilitates the seamless integration of MT with advanced fuzzing for test data generation. In a preliminary evaluation, MetaTrimmer shows the potential to overcome existing limitations and enhance MR effectiveness.",IEEE,"proof, mr, violated, sut, concept, particular, initial, specific, bug, mrs, does, method, test, passes, hints, refining, toy, fault, matched, strengthen"
314,Automatic Generation of Metamorphic Relations for a Cyber-Physical System-of-Systems Using Genetic Algorithm,2022,"A Cyber-Physical System-of-Systems (CPSoS) has innate uncertainties from operation in the physical environment and interaction among the constituent systems. These uncertainties make a CPSoS more susceptible to the oracle problem, a challenge in determining the correct behavior when testing the system. Metamorphic testing (MT) suggests a solution to addressing this challenge by utilizing metamorphic relations (MRs), relations among multiple inputs and corresponding outputs of the system. However, when applying MT on a CPSoS, generating MRs is difficult due to the continuous operation of a CPSoS in uncertain environment. In this study, we propose a method to automatically generate MRs from field operational test (FOT) data logs of a CPSoS. We define an MR template to capture the CPSoS behaviors. We then apply genetic algorithm to adapt the MR generated by the engineers, and thus improve the testing effectiveness. Our method is validated in a case study of an autonomous robot vehicle. Our results show that the automatically generated MRs capture the behaviors of a CPSoS more realistically than the manually generated MRs. With our method, engineers can obtain CPSoS MRs with minimal manual effort.",IEEE,"pos, tagging, tools, nlp, sentence, advanced, reveal, tasks, flair, nltk, spacy, disambiguation, clause, inter, intra, adverbial, appending, handling, consequent, unaware"
315,An Empirical Testing of Autonomous Vehicle Simulator System for Urban Driving,2021,"Safety is one of the main challenges that prohibit autonomous vehicles (AV), requiring them to be well tested ahead of being allowed on the road. In comparison with road tests, simulators allow us to validate the AV conveniently and affordably. However, it remains unclear how to best use the AV-based simulator system for testing effectively. Our paper presents an empirical testing of AV simulator system that combines the SVL simulator and the Apollo platform. We propose 576 test cases which are inspired by four naturalistic driving situations with pedestrians and surrounding cars. We found that the SVL can imitate realistic safe and collision situations; and at the same time, Apollo can drive the car quite safely. On the other hand, we noted that the system failed to detect pedestrians or vehicles on the road in three out of four classes, accounting for 10.0% total number of scenarios tested. We further applied metamorphic testing to identify inconsistencies in the system with additional 486 test cases. We then discussed some insights into the scenarios that may cause hazardous situations in real life. In summary, this paper provides a new empirical evidence to strengthen the assertion that the simulator-based system can be an indispensable tool for a comprehensive testing of the AV.",IEEE,"education, administration, china, covid, innovation, 19, higher, impacted, lining, institution, disrupted, resolving, ningbo, history, administrators, unnc, marking, marks, staff, normalcy"
316,Metamorphic Detection of Adversarial Examples in Deep Learning Models with Affine Transformations,2019,"Adversarial attacks are small, carefully crafted perturbations, imperceptible to the naked eye; that when added to an image cause deep learning models to misclassify the image with potentially detrimental outcomes. With the rise of artificial intelligence models in consumer safety and security intensive industries such as self-driving cars, camera surveillance and face recognition, there is a growing need for guarding against adversarial attacks. In this paper, we present an approach that uses metamorphic testing principles to automatically detect such adversarial attacks. The approach can detect image manipulations that are so small, that they are impossible to detect by a human through visual inspection. By applying metamorphic relations based on distance ratio preserving affine image transformations which compare the behavior of the original and transformed image; we show that our proposed approach can determine whether or not the input image is adversarial with a high degree of accuracy.",IEEE,"encryption, standard, transmission, encrypted, information, algorithms, 3des, aes, triple, data, des, privacy, unsafe, called, correctness, prevent, attempt, storage, deciding, indispensable"
317,Bug or not Bug? Analysing the Reasons Behind Metamorphic Relation Violations,2023,"Metamorphic Testing (MT) is a testing technique that can effectively alleviate the oracle problem. MT uses Metamorphic Relations (MRs) to determine if a test case passes or fails. MRs specify how the outputs should vary in response to specific input changes when executing the System Under Test (SUT). If a particular MR is violated for at least one test input (and its change), there is a high probability that the SUT has a fault. On the other hand, if a particular MR is not violated, it does not guarantee that the SUT is fault free. However, deciding if the MR is being violated due to a bug or because the MR does not hold/fit for particular conditions generated by specific inputs remains a manual task and unexplored. In this paper, we develop a method for refining MRs to offer hints as to whether a violation results from a bug or arises from the MR not being matched to certain test data under specific circumstances. In our initial proof-of-concept, we derive the relevant information from rules using the Association Rule Mining (ARM) technique. In our initial proof-of-concept, we validate our method on a toy example and discuss the lessons learned from our experiments. Our proof-of-concept demonstrates that our method is applicable and that we can provide suggestions that help strengthen the test suite for regression testing purposes.",IEEE,"ocean, tidal, tap, software, modelling, variables, physical, systems, mt, ent, astronom, poten, ical, tial, hourly, projections, justifies, standing, expanded, timeseries"
318,Property-based Test for Part-of-Speech Tagging Tool,2021,"Part-of-Speech (POS) tagging for sentences is a basic and widely-used Natural Language Processing (NLP) technique. People rely heavily on it to predict POS tags that serve as the base for many advanced NLP tasks, such as sentiment analysis, word sense disambiguation, and information retrieval. However, POS tagging tools could make wrong predictions, which bring consequent error propagation to the advanced tasks and even cause serious threats in critical application domains. In this paper, we propose to test POS tagging tools with Metamorphic Testing against some properties that they should follow. The preliminary exploration with two groups of Metamorphic Relations shows that our method can effectively reveal defects of three common POS tagging tools (i.e., spaCy, NLTK, and Flair) on handling fairly simple intra- and inter-sentence transformation regarding adverbial clause and sentence appending. This demonstrates the great potential of our method to deliver a systematic test and reveal the unaware issues, which may benefit the validation, repair, and improvement, for POS tagging tools.",IEEE,"diversities, criteria, metrics, erroneous, behaviors, deep, investigate, essential, comprehensive, defined, learning, correlation, guidance, neuron, lacks, reflect, step, activities, investigation, suites"
319,"Not a Silver Bullet, but a Silver Lining: Metamorphic Marking Administration",2021,"COVID-19 has caused heart-break and disruption. The People's Republic of China (PRC) was one of the first severely-impacted countries, but also one of the first to attempt to return to normalcy. Education, including Higher Education-the context of this paper-was disrupted, and the impact of these disruptions continues to be felt. A small consolation, or silver lining, has been the incredible efforts and innovations made by teachers to overcome the COVID-19 challenges. One such innovation is described in this paper: Drawing on the traditions of Metamorphic Exploration and Testing, the authors applied two different approaches to resolving a technical administration problem related to the management of assessments and marks for undergraduate software engineering team projects. This took place at University of Nottingham Ningbo China (UNNC), a Sino-foreign Higher Education Institution (HEI) with a history of staff-student collaboration, and education innovation. This paper outlines the experience and the insights learned from it. In addition to being of general interest to education administrators, especially those involved with project and marking administration, the innovative use of Metamorphic Testing ideas to develop the solution will be particularly interesting to computer scientists and software engineers.",IEEE,"sensor, networks, calibration, pervasive, health, data, knowledge, throughput, technological, certified, high, disruption, 5g, linked, concurrent, meaningful, streams, interpretation, iot, monitoring"
320,Metamorphic Testing for Block Ciphers,2021,"Information is indispensable in modern society. People’s daily communication and work depend on information transmission. Unsafe storage or transmission of data may result in privacy and security problems. One way to attempt to prevent such issues is to use encryption algorithms to transform information into encrypted forms. Because the encryption steps of most encryption algorithms are complex, deciding the correctness of the encrypted output may take a long time in practice. This kind of problem is called the Test Oracle problem. In contrast to traditional software testing, Metamorphic Testing (MT) does not focus on the correctness of each individual output, but examines whether the inputs and outputs of multiple executions of a Program Under Test (PUT) satisfy necessary relations of the PUT, called metamorphic relations. This paper reports on an experience of applying MT to test three encryption algorithms — Data Encryption Standard (DES), Triple Data Encryption Standard (3DES), and Advanced Encryption Standard (AES).",IEEE,"ods, metaod, images, object, od, looking, synthetic, map, workflow, results, objects, score, cause, despite, erroneous, detection, practical, natural, designed, design"
321,Testing Ocean Software with Metamorphic Testing,2022,"Advancing ocean science has a significant impact to the development of the world, from operating a safe navigation for vessels to maintaining a healthy and diverse ocean ecosystem. Various ocean software systems have been extensively adopted for differ-ent purposes, for instance, predicting hourly sea level elevation across shorelines, simulating large-scale ocean circulations, as well as integrating into Earth system models for weather forecasts and climate projections. Regardless of their significance, guaranteeing the trustworthiness of ocean software and modelling systems is a long-standing challenge. The testing of ocean software suffers a lot from the socalled oracle problem, which refers to the absence of test oracles mainly due to the nonlinear interactions of multiple physical variables and the high complexity in computation. In the ocean, observed tidal signals are distorted by non-deterministic physical variables, hindering us from knowing the “true” astronom-ical tidal constituents existing in the timeseries. In this paper, we present how to test tidal analysis and prediction (TAP) software based on metamorphic testing (MT), a simple yet effective testing approach to the oracle problem. In particular, we construct meta-morphic relations from the periodic property of astronomical tide, and then use them to successfully detect a real-life defect in an open-source TAP software. We also conduct a series of experiments to further demonstrate the applicability and effectiveness of MT in the testing of TAP software. Our study not only justifies the poten-tial of MT in testing more complex ocean software and modelling systems, but also can be expanded to assess and improve the quality of a broader range of scientific simulation software systems.",IEEE,"security, vulnerabilities, automate, mrs, testing, protected, distinguishing, catalog, attackers, owasp, jenkins, agnostic, systems, 39, verifies, oracle, impractical, affecting, targets, refers"
322,On the Investigation of Essential Diversities for Deep Learning Testing Criteria,2019,"Recent years, more and more testing criteria for deep learning systems has been proposed to ensure system robustness and reliability. These criteria were defined based on different perspectives of diversity. However, there lacks comprehensive investigation on what are the most essential diversities that should be considered by a testing criteria for deep learning systems. Therefore, in this paper, we conduct an empirical study to investigate the relation between test diversities and erroneous behaviors of deep learning models. We define five metrics to reflect diversities in neuron activities, and leverage metamorphic testing to detect erroneous behaviors. We investigate the correlation between metrics and erroneous behaviors. We also go further step to measure the quality of test suites under the guidance of defined metrics. Our results provided comprehensive insights on the essential diversities for testing criteria to exhibit good fault detection ability.",IEEE,"nomad, exciting, parser, package, software, problem, relations, known, tool, mitigates, alongside, publish, priori, cycle, automatically, quantity, replication, analyse, material, density"
323,Sensor Networks and Data Management in Healthcare: Emerging Technologies and New Challenges,2019,"Smart pervasive sensor networks are becoming an important part of our daily lives. Low-power, high-availability and high-throughput 5G mobile networks provide the necessary communication means for highly pervasive sensor networks, introducing a technological disruption to health monitoring. The meaningful use of large concurrent sensor networks in healthcare requires multi-level health knowledge integration with sensor data streams. In this paper, we highlight some software engineering and data-processing issues that can be addressed by metamorphic testing. The proposed solution combines data streaming with filtering and cross-calibration, use of medical knowledge for system operation and data interpretation, and IoT-based calibration using certified linked diagnostic devices.",IEEE,"sqa, professionals, ads, apollo, computing, associated, advanced, systems, experience, autonomous, compounded, comprehensibility, trainers, attempting, inadequacy, pushing, scaffold, later, left, complex"
324,Metamorphic Object Insertion for Testing Object Detection Systems,2020,"Recent advances in deep neural networks (DNNs) have led to object detectors (ODs) that can rapidly process pictures or videos, and recognize the objects that they contain. Despite the promising progress by industrial manufacturers such as Amazon and Google in commercializing deep learning-based ODs as a standard computer vision service, ODs — similar to traditional software — may still produce incorrect results. These errors, in turn, can lead to severe negative outcomes for the users. For instance, an autonomous driving system that fails to detect pedestrians can cause accidents or even fatalities. However, despite their importance, principled, systematic methods for testing ODs do not yet exist. To fill this critical gap, we introduce the design and realization of Metaod, a metamorphic testing system specifically designed for ODs to effectively uncover erroneous detection results. To this end, we (1) synthesize natural-looking images by inserting extra object instances into background images, and (2) design metamorphic conditions asserting the equivalence of OD results between the original and synthetic images after excluding the prediction results on the inserted objects. Metaod is designed as a streamlined workflow that performs object extraction, selection, and insertion. We develop a set of practical techniques to realize an effective workflow, and generate diverse, natural-looking images for testing. Evaluated on four commercial OD services and four pretrained models provided by the TensorFlow API, Metaod found tens of thousands of detection failures. To further demonstrate the practical usage of Metaod, we use the synthetic images that cause erroneous detection results to retrain the model. Our results show that the model performance is significantly increased, from an mAP score of 9.3 to an mAP score of 10.5.",IEEE,"reading, llms, code, understanding, chatgpt, capabilities, big, current, centering, prompts, abilities, explosive, data, bases, llm, structural, analyzes, maintain, assumptions, models"
325,Metamorphic Security Testing for Web Systems,2020,"Security testing verifies that the data and the resources of software systems are protected from attackers. Unfortunately, it suffers from the oracle problem, which refers to the challenge, given an input for a system, of distinguishing correct from incorrect behavior. In many situations where potential vulnerabilities are tested, a test oracle may not exist, or it might be impractical due to the many inputs for which specific oracles have to be defined. In this paper, we propose a metamorphic testing approach that alleviates the oracle problem in security testing. It enables engineers to specify metamorphic relations (MRs) that capture security properties of the system. Such MRs are then used to automate testing and detect vulnerabilities. We provide a catalog of 22 system-agnostic MRs to automate security testing in Web systems. Our approach targets 39% of the OWASP security testing activities not automated by state-of-the-art techniques. It automatically detected 10 out of 12 vulnerabilities affecting two widely used systems, one commercial and the other open source (Jenkins).",IEEE,"generated, automatically, test, mrs, cases, fault, improve, algebra, helped, faced, testing, passed, detection, utilized, linear, case, suggests, failed, effectiveness, reduce"
326,Automatically finding Metamorphic Relations in Computational Material Science Parsers,2022,"Software testing is an important part of the software life-cycle. Unfortunately, some software systems have the inherent problem, that it is not clear a priori what the expected outcome is. This is known in the literature as the Oracle Problem. Scientific software suffers from this problem in particular. Metamorphic Testing is a testing approach that mitigates the Oracle Problem, as it is based on identified relations between a program's in- and output pairs. In this study, we investigate the feasibility of automatically finding such metamorphic relations on a software package known as the exciting-NOMAD parser which is widely used in computational material science. We are able to show that it is indeed possible to automatically find metamorphic relations within the NOMAD parser for the density functional theory code exciting. We analyse the metamorphic relations found through our tool in terms of both quantity and relation quality. Furthermore, we also publish our developed tool, as well as used data alongside this study through our replication package.",IEEE,"cma, big, data, algorithms, machine, learning, validation, iteratively, cell, verification, developed, introduced, verifying, framework, ensure, software, feature, validating, scale, approach"
327,Preparing Future SQA Professionals: An Experience Report of Metamorphic Exploration of an Autonomous Driving System,2022,"Computing systems are becoming increasingly complex and sophisticated. Technologies such as artificial intelligence, big data, and autonomous vehicles are pushing the boundaries of system size, complexity, and comprehensibility beyond anything seen before. These advances, however, have left the associated software quality assurance (SQA) tools and processes behind. This is compounded by many training and education programs also not attempting to address this inadequacy in the preparation of future software engineering professionals. We face a situation of extensively-deployed advanced computing systems, many of which lack sufficient SQA support. Metamorphic Testing (MT) and Metamorphic Exploration (ME) are SQA approaches that have a record of being able to alleviate some of the challenges associated with the advanced computer systems. This paper reports on an MT/ME experience with the Baidu Apollo autonomous driving system (ADS). The experience included identifying an apparent problem in Apollo, which was later confirmed to be a misunderstanding, but which illustrated the potential for ME to scaffold learning how to perform SQA on such complex systems. The report will be of benefit not only to other ADS developers and testers, but also to other SQA professionals, and especially to SQA trainers and educators.",IEEE,"mps, kabu, mdt, programs, detecting, human, potential, bugs, preliminary, method, developers, detected, properties, identify, states, considers, methods, transforming, testing, solely"
328,Evaluating LLM’s Code Reading Abilities in Big Data Contexts using Metamorphic Testing,2023,"With the explosive growth of Big Data, understanding complex data-centering algorithms and software has become essential. Large Language Models (LLMs) especially ChatGPT models have been increasingly deployed in Big Data environments to improve workflow in various tasks, including code reading. The current testing method on LLMs’ code reading ability focuses more on code structural understanding and sentiment understanding, all tests are conducted on different prompts with different assumptions. This paper analyzes current LLM code-reading testing methods and presents an innovative evaluation of Metamorphic Testing to evaluate LLMs’ code-reading abilities. We proposed two new metamorphic relations specified f or code reading challenges and evaluated the ChatGPT-3.5 on its code understanding capabilities. Our study offers insights into LLMs’ capabilities to correctly understand diverse code bases and maintain validity.",IEEE,"mt, students, experiences, se, software, recently, testers, finding, training, engage, engineer, fore, classroom, appeared, seldom, behaving, voices, reflections, engaging, textbook"
329,Using Metamorphic Relations to Improve The Effectiveness of Automatically Generated Test Cases,2022,"Automated test case generation has helped to reduce the cost of testing. However, developing effective test oracles for these automatically generated test cases still remains a challenge. Metamorphic testing (MT) has become a well-known software testing approach over the years. This testing technique can effectively alleviate the oracle problem faced when testing using metamorphic relations (MRs) to determine whether a test case is passed or failed. In this work, we conduct an empirical study on an open source linear algebra library to evaluate whether MRs can be utilized to improve the fault detection effectiveness of automatically generated test cases. Our experiment suggests that MRs can help to improve the fault detection effectiveness of automatically generated test cases.",IEEE,"pmr, features, cfg, svm, mrs, auc, roc, kanewala, al, et, candidate, original, costly, models, developing, related, relations, result, walk, rwk"
330,A Machine Learning Based Framework for Verification and Validation of Massive Scale Image Data,2021,"Big data validation and system verification are crucial for ensuring the quality of big data applications. However, a rigorous technique for such tasks is yet to emerge. During the past decade, we have developed a big data system called CMA for investigating the classification of biological cells based on cell morphology which is captured in diffraction images. CMA includes a collection of scientific software tools, machine learning algorithms, and a large-scale cell image repository. In order to ensure the quality of big data system CMA, we developed a framework for rigorously validating the massive scale image data as well as adequately verifying both the software tools and machine learning algorithms. The validation of big data is conducted by iteratively selecting the data using a machine learning approach. An experimental approach guided by a feature selection algorithm is introduced in the framework to select an optimal feature set for improving the machine learning performance. The verification of software and algorithms is developed on the iterative metamorphic testing approach due to the non-testable property of the software and algorithms. A machine learning approach is introduced for developing test oracles iteratively to ensure the adequacy of the test coverage criteria. Performance of the machine learning algorithm is evaluated with a stratified N-fold cross validation and confusion matrix. We describe the design of the proposed big data verification and validation framework with CMA as the case study, and demonstrate its effectiveness through verifying and validating the dataset, the software and the algorithms in CMA.",IEEE,"mt, test, art, generation, distance, case, better, performs, cases, article, performance, research, method, max, measured, algorithms, distances, drawn, family, numbers"
331,Dynamic Inference of Likely Metamorphic Properties to Support Differential Testing,2015,"Metamorphic testing is an advanced technique to test programs without a true test oracle such as machine learning applications. Because these programs have no general oracle to identify their correctness, traditional testing techniques such as unit testing may not be helpful for developers to detect potential bugs. This paper presents a novel system, KABU, which can dynamically infer properties of methods' states in programs that describe the characteristics of a method before and after transforming its input. These Metamorphic Properties (MPs) are pivotal to detecting potential bugs in programs without test oracles, but most previous work relies solely on human effort to identify them and only considers MPs between input parameters and output result (return value) of a program or method. This paper also proposes a testing concept, Metamorphic Differential Testing (MDT). By detecting different sets of MPs between different versions for the same method, KABU reports potential bugs for human review. We have performed a preliminary evaluation of KABU by comparing the MPs detected by humans with the MPs detected by KABU. Our preliminary results are promising: KABU can find more MPs than human developers, and MDT is effective at detecting function changes in methods.",IEEE,"pv, physical, cpss, navigation, seeded, systems, pattern, mrs, detecting, 88, faults, fps, elevator, called, keeping, elevation, uncertainty, lower, effective, assessed"
332,Metamorphic testing: A new student engagement approach for a new software testing paradigm,2016,"Software testing, as part of the software quality assurance processes in software engineering (SE), is seldom cited as the most engaging part of a software engineer's training. In spite of its importance, it was often a neglected area, and only recently, with the adoption of more agile methodologies, has testing come to the fore. Testers face challenges, including the need to be able to identify when software is not behaving as expected. Metamorphic Testing (MT) first appeared twenty years ago in an effort to help testers facing the oracle problem (not having a mechanism to determine correct software behavior). Although MT is simple in concept, it has demonstrated very impressive fault-finding ability, and has recently been attracting a great deal of interest. Training students and practitioners to effectively apply MT has become an important goal, but to date, no textbook or guidelines have been made readily available. This paper, written by some of the leading voices in the MT community, is a sharing of some of the experiences, reflections and insights gained through teaching MT (and other related subjects). These experiences indicate that not only is MT effective in industry and at fault-finding, it has the potential to really engage students in creative SE classroom activities.",IEEE,"apr, mt, ceti, genprog, feasibility, techniques, technique, integration, repair, integrated, effectiveness, categories, previous, different, conductexperimental, consolidate, belonging, yields, category, benefits"
333,Using Source Code Metrics for Predicting Metamorphic Relations at Method Level,2022,"Metamorphic testing (TM) examines the relations between inputs and outputs of test runs. These relations are known as metamorphic relations (MR). Currently, MRs are handpicked and require in-depth knowledge of the System Under Test (SUT), as well as its problem domain. As a result, the identification and selection of high-quality MRs is a challenge. Kanewala et al. suggested the Predicting Metamorphic Relations (PMR) approach for automatic prediction of applicable MRs picked from a predefined list. PMR is based on a Support Vector Machine (SVM) model using features derived from the Control Flow Graphs (CFGs) of 100 Java methods. The original study of Kanewala et al. showed encouraging results, but developing classification models from CFG-related features is costly. In this paper, we aim at developing a PMR approach that is less costly without losing performance. We complement the original PMR approach by considering other than CFG-related features. We define 21 features that can be directly extracted from source code and build several classifiers, including SVM models. Our results indicate that using the original CFG-based method-level features, in particular for a SVM with random walk kernel (RWK), achieve better predictions in terms of AUC-ROC for most of the candidate MRs than our models. However, for one of the candidate MRs, using source code features achieved the best AUC-ROC result (greater than 0.8).",IEEE,"mt, mrs, processor, instruction, kill, risc, domain, mutations, verification, isa, iss, integers, reversed, sorted, sw, sum, fly, mr, unchanged, confirms"
334,MT-ART: A Test Case Generation Method Based on Adaptive Random Testing and Metamorphic Relation,2021,"Most of metamorphic testing (MT) research works focused on the generation and application of metamorphic relations (MRs). There is no clear conclusion about the relationship between test case generation methods and performance of MT. In this article, we introduce a novel method based on adaptive random testing (ART) and MR for MT test case generation. It proposes a family of algorithms for MT test cases generation, named as MT based ART (MT-ART). Three distances are measured to generate the next MT test case. In order to verify the performance of this method, series of experiments on four programs with different numbers of inputs are introduced. The results show that MT-ART performs better than other ART algorithms not only in test effectiveness, but also in test efficiency and test coverage. Based on this article, the following conclusions can be drawn: first, considering the effectiveness of MRs and test cases in MT may lead to better results. In this way, most of the existing research can be improved by this method. This is the most important contribute of our research. Second, not only the source test cases, but also the follow-up test cases can improve the performance of MT. Therefore, they should be considered together during the process of the next test case generation. Third, the average distance performs better than the max distance and the minimum distance in metamorphic test case selection.",IEEE,"nli, models, capabilities, hand, understanding, prediction, characteristics, natural, mt, language, task, interpretations, judge, experiments, possessed, oracles, yield, varying, cornerstone, mitigate"
335,Performance-Driven Metamorphic Testing of Cyber-Physical Systems,2023,"Cyber-physical systems (CPSs) are a new generation of systems, which integrate software with physical processes. The increasing complexity of these systems, combined with the uncertainty in their interactions with the physical world, makes the definition of effective test oracles especially challenging, facing the well-known test oracle problem. Metamorphic testing has shown great potential to alleviate the test oracle problem by exploiting the relations among the inputs and outputs of different executions of the system, so-called metamorphic relations (MRs). In this article, we propose an MR pattern called PV for the identification of performance-driven MRs, and we show its applicability in two CPSs from different domains, which are automated navigation systems and elevator control systems. For the evaluation, we assessed the effectiveness of this approach for detecting failures in an open-source simulation-based autonomous navigation system, as well as in an industrial case study from the elevation domain. We derive concrete MRs based on the PV pattern for both case studies, and we evaluate their effectiveness with seeded faults. Results show that the approach is effective at detecting over 88% of the seeded faults, while keeping the ratio of FPs at 4% or lower.",IEEE,"selection, test, case, evolutionary, executions, objective, operators, multi, suite, problem, approach, supose, accomplishes, cpss, pair, metaheuristic, metamorphic, existing, preserve, new"
336,A Revisit of the Integration of Metamorphic Testing and Test Suite Based Automated Program Repair,2017,"The technique of metamorphic testing (MT) has been integrated with test suite based automated program repair (APR) to alleviate the test oracle problem of APR. The proposed integration yields APR-MT techniques, which can be applied regardless of the existence of a test oracle. In a previous study, the feasibility and effectiveness of the APR-MT technique have been demonstrated via GenProg-MT, an integration of MT and the APR technique GenProg. This paper aims to complement our previous study to investigate the feasibility and effectiveness of APR-MT across different categories of APR techniques. We present the integration of MT with CETI, an APR technique belonging to a different category to GenProg, and conductexperimental analysis on the integrated technique CETI-MT, showing that CETI-MT is comparable to CETI in terms of the repair effectiveness. These results not only demonstrate the feasibility of integrating MT with different categories of APR techniques, but also consolidate the effectiveness of APR-MT techniques, hence increasing the practical benefits of APR-MT techniques.",IEEE,"biasfinder, sa, bias, texts, words, characteristic, gender, templates, sentiments, demographic, predicts, systems, female, baselines, differ, class, associated, characteristics, different, human"
337,Metamorphic Testing for Processor Verification: A RISC-V Case Study at the Instruction Level,2021,"Metamorphic Testing (MT) has been shown to be a very effective technique in the Software (SW) domain. MT does not require a reference model to compare against for testing but instead relies on Metamorphic Relations (MR) to derive the expected result from relationships between several calls to the function under test. An example of an MR is the expectation that the sum of an arbitrary list of integers remain unchanged regardless of it being sorted or reversed. Thus, a key requirement for applying MT effectively is availability of MRs specific to the domain at hand. In this paper, we propose MT to the domain of processor verification. As a case study, we consider the RISC-V Instruction Set Architecture (ISA) and provide MRs tailored for RISC-V For evaluation purposes, we propose an efficient on-the-fly MT framework that integrates the MRs with an Instruction Set Simulator (ISS). We measure the quality of those MRs by the number of mutations they kill, also referred to as mutation analysis. Our experiments demonstrate the effectiveness of the MRs to kill all mutations, which confirms our research question that MT is also a suitable technique for the domain of processor verification.",IEEE,"chess, game, ai, engine, approach, possibilities, deciding, intelligent, point, software, outcomes, proposed, testing, possible, entirety, perft, given, come, 71, seeding"
338,Evaluating Natural Language Inference Models: A Metamorphic Testing Approach,2021,"Natural language inference (NLI) is a fundamental NLP task that forms the cornerstone of deep natural language understanding. Unfortunately, evaluation of NLI models is challenging. On one hand, due to the lack of test oracles, it is difficult to automatically judge the correctness of NLI's prediction results. On the other hand, apart from knowing how well a model performs, there is a further need for understanding the capabilities and characteristics of different NLI models. To mitigate these issues, we propose to apply the technique of metamorphic testing (MT) to NLI. We identify six categories of metamorphic relations, covering a wide range of properties that are expected to be possessed by NLI task. Based on this, MT can be conducted on NLI models without using test oracles, and MT results are able to interpret NLI models' capabilities from varying aspects. We further demonstrate the validity and effectiveness of our approach by conducting experiments on five NLI models. Our experiments expose a large number of prediction failures from subject NLI models, and also yield interpretations for common characteristics of NLI models.",IEEE,"cases, source, mt, test, selection, rt, effectiveness, follow, mrs, random, art, referred, affect, aims, implies, enhancement, verified, enhancing, case, adaptive"
339,Multi-Objective Metamorphic Test Case Selection: an Industrial Case Study (Practical Experience Report),2022,"Metamorphic testing is a technique that has shown great potential to alleviate the test oracle problem by exploiting the relations among the inputs and outputs of different executions of a system. However, this approach requires multiple test executions. In applications like Cyber-Physical Systems (CPSs), where the test executions can be very expensive in terms of time and resources needed, this can supose a problem. Therefore, it is paramount to optimize the test suite to reduce the costs of verifying the system. Test case selection is an optimization technique which accomplishes this by selecting a subset of test cases while aiming to preserve the effectiveness of the original test suite as much as possible. While there are many approaches for test case selection in the existing literature, none of them has been proposed for the metamorphic test case selection problem, where each metamorphic test case consists of a source and, at least, a follow-up test case pair. In this work, we present an evolutionary multi-objective approach for the metamorphic test case selection problem, adapting existing multi-objective test selection techniques and proposing new evolutionary operators and objective functions. Further-more, we evaluate our approach with a set of metamorphic tests developed for an industrial case study from the elevation domain. The results suggest that our approach outperforms both Random Search and the same metaheuristic algorithm without the new evolutionary operators we propose.",IEEE,"translate, languages, translation, target, google, services, language, spanish, korean, russian, 56, swedish, 800, japanese, french, youdao, portuguese, 600, factorial, indo"
340,BiasFinder: Metamorphic Test Generation to Uncover Bias for Sentiment Analysis Systems,2022,"Artificial intelligence systems, such as Sentiment Analysis (SA) systems, typically learn from large amounts of data that may reflect human bias. Consequently, such systems may exhibit unintended demographic bias against specific characteristics (e.g., gender, occupation, country-of-origin, etc.). Such bias manifests in an SA system when it predicts different sentiments for similar texts that differ only in the characteristic of individuals described. To automatically uncover bias in SA systems, this paper presents BiasFinder, an approach that can discover biased predictions in SA systems via metamorphic testing. A key feature of BiasFinder is the automatic curation of suitable templates from any given text inputs, using various Natural Language Processing (NLP) techniques to identify words that describe demographic characteristics. Next, BiasFinder generates new texts from these templates by mutating words associated with a class of a characteristic (e.g., gender-specific words such as female names, “she”, “her”). These texts are then used to tease out bias in an SA system. BiasFinder identifies a bias-uncovering test case (BTC) when an SA system predicts different sentiments for texts that differ only in words associated with a different class (e.g., male vs. female) of a target characteristic (e.g., gender). We evaluate BiasFinder on 10 SA systems and 2 large scale datasets, and the results show that BiasFinder can create more BTCs than two popular baselines. We also conduct an annotation study and find that human annotators consistently think that test cases generated by BiasFinder are more fluent than the two baselines.",IEEE,"mr, mrs, guidelines, metrics, sub, select, test, effective, previous, selection, mt, different, cases, effectiveness, observably, measurable, satisfied, soon, deals, decomposed"
341,Metamorphic Testing of an Artificially Intelligent Chess Game,2020,"Artificially intelligent (AI) game software incorporates different algorithms to generate intelligent human-like responses to the users playing them. Testing AI game software poses great difficulty because of the complex possibilities that can result at a given point and analysis of said possibilities is a tedious task. Also during software development there are resource constraints due to which testing targets specific parts of the software. An AI game of Chess takes into consideration a large amount of possible outcomes at any given point before deciding a move. Therefore, testing it in its entirety is impractical. In this paper we propose a metamorphic testing approach for testing an AI Chess game i.e. a Chess engine's algorithm of determining and pruning out possible outcomes and ultimately deciding on a final outcome. For validating our approach, we have done error seeding on an open source Chess engine and tested it through our approach. The results for our proposed approach for testing an AI Chess game through metamorphic relations show that it is successful in revealing 71% of the total seeded faults. On comparison of our proposed approach with the existing technique of testing Chess engine i.e., perft function, we have come across situations in which our proposed approach reveals errors overlooked by the existing technique. In the future we aim to extend our approach towards other AI game software.",IEEE,"ml, ai, sqa, cs, education, innovation, popularity, growth, developing, mt, training, track, consumers, preparing, sfheis, pressure, sfhei, sino, institutions, republic"
342,The Impact of Source Test Case Selection on the Effectiveness of Metamorphic Testing,2016,"Metamorphic Testing (MT) aims to alleviate the oracle problem. In MT, testers define metamorphic relations (MRs) which are used to generate new test cases (referred to as follow-up test cases) from the available test cases (referred to as source test cases). Both source and follow-up test cases are executed and their outputs are verified against the relevant MRs, of which any violation implies that the software under test is faulty. So far, the research on the effectiveness of MT has been focused on the selection of better MRs (that is, MRs that are more likely to be violated). In addition to MR selection, the source and follow-up test cases may also affect the effectiveness of MT. Since follow-up test cases are defined by the source test cases and MRs, selection of source test cases will then affect the effectiveness of MT. However, in existing MT studies, random testing is commonly adopted as the test case selection strategy for source test cases. This study aims to investigate the impact of source test cases on the effectiveness of MT. Since Adaptive Random Testing (ART) has been developed as an enhancement to Random Testing (RT), this study will focus on comparing the performance of RT and ART as source test case selection strategies on the effectiveness of MT. Experiment results show that ART outperforms RT on enhancing the effectiveness of MT.",IEEE,"ai, articles, selected, software, testing, review, extracted, case, study, string, gradual, using, various, initially, thorough, android, studying, databases, research, emerged"
343,A Monte Carlo Method for Metamorphic Testing of Machine Translation Services,2018,"With the growing popularity of machine translation services, it has become increasingly important to be able to assess their quality. However, the test oracle problem makes it difficult to conduct automated testing. In this paper, we propose a Monte Carlo method, in combination with metamorphic testing, to overcome the oracle problem. Using this method, we assessed the quality of three popular machine translation services - namely, Google Translate, Microsoft Translator, and Youdao Translate. We set the source language to be English, and the target languages included Chinese, French, Japanese, Korean, Portuguese, Russian, Spanish, and Swedish. A sample of 33,600 observations (involving a total of 100,800 actual translations) was collected and analyzed using a 3 x 56 factorial design. Based on this data, our model found Google Translate to be the best (in terms of the metamorphic relation used) for each and every target language considered. A trend for Indo-European languages producing better results was also identified.",IEEE,"obfuscators, compilers, app, mt, strategy, compiler, untestable, android, using, transformation, based, development, code, reverse, tampering, bugs, correctness, prevent, translated, testing"
344,Measurable Metrics for Qualitative Guidelines of Metamorphic Relation,2015,"In software testing, test oracles do not always exist or are too hard to generate, which is called ""test oracle problem"". Metamorphic testing (MT) provide an effective way to alleviate the problem based on metamorphic relations (MR). As a MR is satisfied by a set of test cases, it does not mean that the test cases are success. Therefore, more MRs are needed to improve the effectiveness of MT. For different programs, great deals of valuable MRs have been generated. But not all of them are effective in fault detection. Then, the next issue is how to select the better MRs which could detect the failed test cases as soon as possible. To resolve this problem, several qualitative guidelines were proposed for MR priority recently. For the MRs described with different forms, these guidelines could be used to select the effective MRs and improve the performance of MT observably. In our previous research, we constructed a formal model for MR, with which a MR could be decomposed into three sub relations. In this paper, based on the sub relations of MR, we provide three measurable metrics for MR selection: in-degree of MR, algebra complexity of MR, and distance between test inputs of MR. To evaluate the effectiveness of these metrics, we also conducted experiments on four programs with different numbers of MRs. The empirical results show that the metrics are correlated with the effectiveness of MRs and the previous MR selection guidelines.",IEEE,"tax, preparation, legal, software, specifications, income, similar, trustworthiness, behavior, debugging, form, individual, case, relations, properties, dependents, eligibility, severity, explaining, structurally"
345,Preparing Software Quality Assurance Professionals: Metamorphic Exploration for Machine Learning,2019,"Computer science (CS) subjects have been rapidly growing in popularity, and demand for CS education and training has put increasing pressure on teaching resources in higher education (HE) and elsewhere. HE in the People's Republic of China (PRC) has also been developing, with one product of this evolution being Sino-foreign HE institutions (SfHEIs). Much of the popularity growth for CS can be linked to the growth of CS-based technology and innovation, especially in the form of Artificial Intelligence (AI) and Machine Learning (ML). AI/ML-based innovation has been forecast to offer increases in quality of life for consumers. However, AI/ML systems face a challenge for software quality assurance (SQA): They are so-called “untestable systems” - identifying the correctness of AI/ML system outputs or behaviour may not be feasible. Preparing SQA professionals to be able to ensure AI/ML SQA will require innovative and creative education and training. An SQA approach called metamorphic testing (MT) has a proven track record of alleviating the oracle problem, and has great potential as a testing methodology for AI/ML systems. Metamorphic exploration (ME) is a new addition to the MT literature, and involves developing the user's understanding of the system under study. This paper reports on experiences at an SfHEI of using ME and MT to test an AI/ML system.",IEEE,"conducting, bioinformatics, programs, systematic, approaches, bbmap, subtle, biggest, automated, alignment, genome, pseudo, inherent, prevalent, explore, especially, scientific, identifying, field, open"
346,Artificial Intelligence in Software Testing: A Systematic Review,2023,"Software testing is a crucial component of software development. With the increasing complexity of software systems, traditional manual testing methods are becoming less feasible. Artificial Intelligence (AI) has emerged as a promising approach to software testing in recent years. This review paper aims to provide an in-depth understanding of the current state of software testing using AI. The review will examine the various approaches, techniques, and tools used in this area and assess their effectiveness. The selected articles for this study have been extracted from different research databases using the advanced search string strategy. Initially, 40 articles have been extracted from different research libraries. After gradual filtering finally, 20 articles have been selected for the study. After studying all the selected papers, we find that various testing tasks can be automated successfully using AI (Machine Learning and Deep Learning) such as Test Case Generation, Defect Prediction, Test Case Prioritization Metamorphic Testing, Android Testing, Test Case Validation, and White Box Testing. This study also finds that the integration of AI in software testing is making software testing activities easier along with better performance. This literature review paper provides a thorough analysis of the impact AI can have on the software testing process.",IEEE,"mozi, dbmss, equivalent, bugs, dbms, query, sql, configurations, specification, correctness, semantics, performance, compare, testing, various, 101, mariadb, posing, postgresql, intricacy"
347,Using Obfuscators to Test Compilers: A Metamorphic Experience,2023,"Android compilers play a crucial role in Android app development. The correctness of the apps relies on the compilers because the source code of the app is translated into the target language by the compilers. The use of obfuscators is becoming the standard in app development to prevent reverse engineering or code tampering. Despite their importance, both compilers and obfuscators lack an oracle, which is the mechanism to determine the correctness of the execution, and hence they can be called untestable software. Metamorphic Testing (MT) is a state-of-the-art testing method that can test untestable software. MT tests software based on Metamorphic Relations (MRs). Recent studies have shown that program transformation, an MT-based compiler-testing strategy, is highly effective in revealing bugs in compilers. However, this strategy requires sophisticated tools that could take significant time to develop. Therefore, program transformation using obfuscators is proposed. Based on research into testing obfuscators using MT, it is suggested that an MT-based compiler-testing strategy could be achieved by using obfuscators. In addition, this method has the potential to detect bugs in both compilers and obfuscators. This paper reports on our experience using MT techniques to test compilers and obfuscators. We present three related MRs, two of which uncover evidence of faults.",IEEE,"verification, level, duv, mt, rf, amplifiers, linear, reference, model, verify, subsystems, imposed, soc, tdf, systemc, lnas, lna, stringent, timed, traditionally"
348,Metamorphic Testing and Debugging of Tax Preparation Software,2023,"This paper presents a data-driven debugging framework to improve the trustworthiness of US tax preparation software systems. Given the legal implications of bugs in such software on its users, ensuring compliance and trustworthiness of tax preparation software is of paramount importance. The key barriers in developing debugging aids for tax preparation systems are the unavailability of explicit specifications and the difficulty of obtaining oracles. We posit that, since the US tax law adheres to the legal doctrine of precedent, the specifications about the outcome of tax preparation software for an individual taxpayer must be viewed in comparison with individuals that are deemed similar. Consequently, these specifications are naturally available as properties on the software requiring similar inputs provide similar outputs. Inspired by the metamorphic testing paradigm, we dub these relations metamorphic relations as they relate to structurally modified inputs.In collaboration with legal and tax experts, we explicated metamorphic relations for a set of challenging properties from various US Internal Revenue Services (IRS) publications including Form 1040 (U.S. Individual Income Tax Return), Publication 596 (Earned Income Tax Credit), Schedule 8812 (Qualifying Children and Other Dependents), and Form 8863 (Education Credits). While we focus on an open-source tax preparation software for our case study, the proposed framework can be readily extended to other commercial software. We develop a randomized test-case generation strategy to systematically validate the correctness of tax preparation software guided by metamorphic relations. We further aid this test-case generation by visually explaining the behavior of software on suspicious instances using easy-to-interpret decision-tree models. Our tool uncovered several accountability bugs with varying severity ranging from non-robust behavior in corner-cases (unreliable behavior when tax returns are close to zero) to missing eligibility conditions in the updated versions of software.",IEEE,"ads, organize, adss, driving, module, perception, mt, autonomous, brightness, harness, investigates, region, phases, procedure, sequential, frames, testing, obstacle, camera, demonstrating"
349,Experiences of Testing Bioinformatics Programs for Detecting Subtle Faults,2016,"One of the biggest challenges for conducting automated systematic testing on scientific programs is the oracle problem. This challenge is especially prevalent in the field of bioinformatics due to the inherent complexity of these programs. In this paper, we explore two approaches: pseudo-oracles and metamorphic testing for conducting automated systematic testing of bioinformatics programs. We use BBMap: an open source genome alignment tool as the system under test to evaluate the effectiveness of the above two approaches for identifying subtle faults.",IEEE,"education, educators, software, papers, area, mapping, testing, published, 1992, courses, researchers, experience, pool, literature, body, teaching, university, systematic, demand, topic"
350,Mozi: Discovering DBMS Bugs via Configuration-Based Equivalent Transformation,2024,"Testing database management systems (DBMSs) is a complex task. Traditional approaches, such as metamorphic testing, need a precise comprehension of the SQL specification to create diverse inputs with equivalent semantics. The vagueness and intricacy of the SQL specification make it challenging to accurately model query semantics, thereby posing difficulties in testing the correctness and performance of DBMSs. To address this, we propose Mozi, a framework that finds DBMS bugs via configuration-based equivalent transformation. The key idea behind Mozi is to compare the results of equivalent DBMSs with different configurations, rather than between semantically equivalent queries. The framework involves analyzing the query plan, changing configurations to transform the DBMS to an equivalent one, and re-executing the query to compare the results using various test oracles. For example, detecting differences in query results indicates correctness bugs, while observing faster execution times on the optimization-closed DBMS suggests performance bugs. We demonstrate the effectiveness of Mozi by evaluating it on four widely used DBMSs, namely MySQL, MariaDB, Clickhouse, and PostgreSQL. In the continuous testing, Mozi found a total of 101 previously unknown bugs, including 49 correctness and 52 performance bugs in four DBMSs. Among them, 90 bugs are confirmed and 57 bugs have been fixed. In addition, Mozi can be extended to other DBMS fuzzers for testing various types of bugs. With Mozi, testing DBMSs becomes simpler and more effective, potentially saving time and effort that would otherwise be spent on precisely modeling SQL specifications for testing purposes.",IEEE,"transformations, model, inferred, mrs, likely, transformation, inference, regression, automatic, driven, scenarios, engineering, manipulating, 4254, 4101, 93, migrations, mde, metamorphic, conjunction"
351,System-Level Verification of Linear and Non-Linear Behaviors of RF Amplifiers using Metamorphic Relations,2021,"System-on-Chips (SoC) have imposed new yet stringent design specifications on the Radio Frequency (RF) subsystems. The Timed Data Flow (TDF) model of computation available in SystemC-AMS offers here a good trade-off between accuracy and simulation-speed at the system-level. However, one of the main challenges in system-level verification is the availability of reference models traditionally used to verify the correctness of the Design Under Verification (DUV). Recently, Metamorphic testing (MT) introduced a new verification perspective in the software domain to alleviate this problem. MT uncovers bugs just by using and relating test-cases.In this paper, we present a novel MT-based verification approach to verify the linear and non-linear behaviors of RF amplifiers at the system-level. The central element of our MT-approach is a set of Metamorphic Relations (MRs) which describes the relation of the inputs and outputs of consecutive DUV executions. For the class of Low Noise Amplifiers (LNAs) we identify 12 high-quality MRs. We demonstrate the effectiveness of our proposed MT-based verification approach in an extensive set of experiments on an industrial system-level LNA model without the need of a reference model.",IEEE,"neuron, pattern, prioritization, training, neural, values, cases, various, dnn, dnns, input, method, network, test, problematic, forwards, assigns, validation, deep, high"
352,Metamorphic Testing Harness for the Baidu Apollo Perception-Camera Module,2023,"As the complexity of autonomous driving systems (ADSs) increases, the question of how to organize testing in an efficient manner has become a serious issue. This study investigates the potential for metamorphic testing (MT) to evaluate the perception-camera module of an open-source autonomous driving system (ADS), namely Baidu’s Apollo ADS. The experiments revealed inconsistent obstacle identification results when increasing the brightness of a specific region of the driving scenarios, both in individual and sequential frames, demonstrating the ability of MT to address the oracle problem when testing the perception module of ADSs. Furthermore, this paper presents an MT harness to facilitate ADS testing, which would increase efficiency and help testers to better organize the testing procedure. We also present an industry case study to demonstrate its use in actual production phases.",IEEE,"bandits, contextual, adaptive, weaknesses, metamorphic, learning, testing, test, case, available, learns, chance, generalization, expected, programs, outputs, source, boundaries, reinforcement, identifies"
353,"Software-testing education: A systematic literature mapping,","2020,","Abstract: Context
With the rising complexity and scale of software systems, there is an ever-increasing demand for sophisticated and cost-effective software testing. To meet such a demand, there is a need for a highly-skilled software testing work-force (test engineers) in the industry. To address that need, many university educators worldwide have included software-testing education in their software engineering (SE) or computer science (CS) programs. Many papers have been published in the last three decades (as early as 1992) to share experience from such undertakings.
Objective
Our objective in this paper is to summarize the body of experience and knowledge in the area of software-testing education to benefit the readers (both educators and researchers) in designing and delivering software testing courses in university settings, and to also conduct further education research in this area.
Method
To address the above need, we conducted a systematic literature mapping (SLM) to synthesize what the community of educators have published on this topic. After compiling a candidate pool of 307 papers, and applying a set of inclusion/exclusion criteria, our final pool included 204 papers published between 1992 and 2019.
Results
The topic of software-testing education is becoming more active, as we can see by the increasing number of papers. Many pedagogical approaches (how to best teach testing), course-ware, and specific tools for testing education have been proposed. Many challenges in testing education and insights on how to overcome those challenges have been proposed.
Conclusion
This paper provides educators and researchers with a classification of existing studies within software-testing education. We further synthesize challenges and insights reported when teaching software testing. The paper also provides a reference (“index”) to the vast body of knowledge and experience on teaching software testing. Our mapping study aims to help educators and researchers to identify the best practices in this area to effectively plan and deliver their software testing courses, or to conduct further education-research in this important area.
Keywords: Software testing; Software-testing education; Software-engineering education; Education research; Systematic literature review; Systematic literature mapping",ScienceDirect,"localisation, services, web, soa, business, service, switching, ws, coordination, bpel, fault, slicing, predicate, technique, multiple, faulty, users, language, coordinate, completely"
354,"Automated inference of likely metamorphic relations for model transformations,","2018,","Abstract: Model transformations play a cornerstone role in Model-Driven Engineering (MDE) as they provide the essential mechanisms for manipulating and transforming models. Checking whether the output of a model transformation is correct is a manual and error-prone task, referred to as the oracle problem. Metamorphic testing alleviates the oracle problem by exploiting the relations among different inputs and outputs of the program under test, so-called metamorphic relations (MRs). One of the main challenges in metamorphic testing is the automated inference of likely MRs. This paper proposes an approach to automatically infer likely MRs for ATL model transformations, where the tester does not need to have any knowledge of the transformation. The inferred MRs aim at detecting faults in model transformations in three application scenarios, namely regression testing, incremental transformations and migrations among transformation languages. In the experiments performed, the inferred likely MRs have proved to be quite accurate, with a precision of 96.4% from a total of 4101 true positives out of 4254 MRs inferred. Furthermore, they have been useful for identifying mutants in regression testing scenarios, with a mutation score of 93.3%. Finally, our approach can be used in conjunction with current approaches for the automatic generation of test cases.
Keywords: Model-Driven engineering; Metamorphic testing; Metamorphic relations; Model transformations; Automatic inference; Generic approach",ScienceDirect,"context, contemporary, settings, variation, systems, academic, software, aware, non, initiatives, awareness, testing, mainstream, academia, rapid, deal, evidence, technologies, researchers, review"
355,"Test case prioritization with neuron valuation based pattern,","2022,","Abstract: Deep neural networks (DNNs) have been increasingly adopted in various applications. Systematic verification and validation are essential techniques to guarantee the quality of such systems. Testing is one of the feasible solutions for system validation. However, testing DNNs usually requires a large number of test cases and leads to the high labeling cost. Meanwhile, the test cases may contain various noisy data, which also increases the burden of testing. In this paper, we put forwards a test case prioritization method for DNN-based classifiers, which assigns high priorities to those cases that can lead to problematic classifications. The test cases are prioritized w.r.t. the pattern extracted from the neuron outputs. The difference between the pattern acquired from the training set and the neurons matched from a given input determines the priority of the input. For a trained model, the method consists of two steps. First, we collect neuron output values over the training set and construct a neuron-based pattern for every class of training samples. Second, the metrics are computed according to the comparison between neuron output values of the DNN model from an input and the selected pattern. We carry out the experimentation over three popular datasets with various neural network structures. The extensive experimental results demonstrate that the efficiency and the generalizability of the prioritization method outperform most of the existing techniques.
Keywords: Deep neural network; Test case prioritization; Classifier; Characteristics extraction",ScienceDirect,"cloning, digital, clone, adversarial, decision, mind, skills, environment, pi, generative, component, enables, physical, networks, learning, human, maker, trainer, challenger, responsible"
356,"Adaptive metamorphic testing with contextual bandits,","2020,","Abstract: Metamorphic Testing is a software testing paradigm which aims at using necessary properties of a system under test, called metamorphic relations, to either check its expected outputs, or to generate new test cases. Metamorphic Testing has been successful to test programs for which a full oracle is not available or to test programs for which there are uncertainties on expected outputs such as learning systems. In this article, we propose Adaptive Metamorphic Testing as a generalization of a simple yet powerful reinforcement learning technique, namely contextual bandits, to select one of the multiple metamorphic relations available for a program. By using contextual bandits, Adaptive Metamorphic Testing learns which metamorphic relations are likely to transform a source test case, such that it has higher chance to discover faults. We present experimental results over two major case studies in machine learning, namely image classification and object detection, and identify weaknesses and robustness boundaries. Adaptive Metamorphic Testing efficiently identifies weaknesses of the tested systems in context of the source test case.
Keywords: Software testing; Metamorphic testing; Contextual bandits; Machine learning",ScienceDirect,"visor, automation, image, scaling, test, images, pipeline, variations, translation, false, computer, error, compared, oracle, processing, training, behavior, laptop, differentiate, tvs"
357,"Fault localisation for WS-BPEL programs based on predicate switching and program slicing,","2018,","Abstract: Service-Oriented Architecture (SOA) enables the coordination of multiple loosely coupled services. This allows users to choose any service provided by the SOA without knowing implementation details, thus making coding easier and more flexible. Web services are basic units of SOA. However, the functionality of a single Web service is limited, and usually cannot completely satisfy the actual demand. Hence, it is necessary to coordinate multiple independent Web services to achieve complex business processes. Business Process Execution Language for Web Services (WS-BPEL) makes the coordination possible, by helping the integration of multiple Web services and providing an interface for users to invoke. When coordinating these services, however, illegal or faulty operations may be encountered, but current tools are not yet powerful enough to support the localisation and removal of these problems. In this paper, we propose a fault localisation technique for WS-BPEL programs based on predicate switching and program slicing, allowing developers to more precisely locate the suspicious faulty code. Case studies were conducted to investigate the effectiveness of the proposed technique, which was compared with predicate switching only, slicing only, and one existing fault localisation technique, namely Tarantula. The experimental results show that the proposed technique has a higher fault localisation effectiveness and precision than the baseline techniques.
Keywords: Fault localisation; Debugging; Business process execution language for web services; Web services",ScienceDirect,"cbs, expected, component, atomic, approach, composite, results, algorithm, proposed, case, relationship, generates, generation, components, automatic, study, 015, 001, 590, 998"
358,"Alternatives for testing of context-aware software systems in non-academic settings: results from a Rapid Review,","2022,","Abstract: Context
Context-awareness challenges the engineering of contemporary software systems and jeopardizes their testing. The variation of context represents a relevant behavior that deepens the limitations of available software testing practices and technologies. However, such software systems are mainstream. Therefore, researchers in non-academic settings also face challenges when developing and testing contemporary software systems.
Objective
To understand how researchers deal with the variation of context when testing context-aware software systems developed in non-academic settings.
Method
To undertake a secondary study (Rapid Review) to uncover the necessary evidence from primary sources describing the testing of context-aware software systems outside academia.
Results
The current testing initiatives in non-academic settings aim to generate or improve test suites that can deal with the context variation and the sheer volume of test input possibilities. They mostly rely on modeling the systems' dynamic behavior and increasing computing resources to generate test inputs to achieve this. We found no evidence of test results aiming at managing context variation through the testing lifecycle process.
Conclusions
So far, the identified testing initiatives and strategies are not ready for mainstream adoption. They are all domain-specific, and while the ideas and approaches can be reproduced in distinct settings, the technologies are to be re-engineered and tailored to the context-awareness of contemporary software systems in different problem domains. Further and joint investigations in academia and experiences in non-academic settings can evolve the body of knowledge regarding the testing of contemporary software systems in the field.
Keywords: Context-aware software systems; Software testing; Rapid review; Contemporary software systems",ScienceDirect,"ul, mutation, autoencoder, stability, systems, unsupervised, learning, technique, mtgan, cluster, gradually, encounter, unstable, incorporates, practicability, scores, capacity, paid, gans, combine"
359,"Towards digital cognitive clones for the decision-makers: adversarial training experiments,","2021,","Abstract: There can be many reasons for anyone to make a digital copy (clone) of own decision-making behavior. This enables virtual presence of a professional decision-maker simultaneously in many places and processes of Industry 4.0. Such clone can be used as one’s responsible representative when the human is not available. Pi-Mind (“Patented Intelligence”) is a technology, which enables “cloning” cognitive skills of humans using adversarial machine learning. In this paper, we present a cyber-physical environment as an adversarial learning ecosystem for cloning image classification skills. The physical component of the environment is provided by the logistic laboratory with camera-surveillance over the conveyors. The digital component of the environment contains special modifications of Generative Adversarial Networks, which include a human-operator as a trainer, an autonomous Pi-Mind clone as a trainee (a discriminator) and a smart digital adversary as a challenger (generator of sophisticated decision situations, emergencies and attacks, which supposedly catalyzes the cloning process).
Keywords: digital cloning; machine learning; Generative Adversarial Networks; cybersecurity; logistics",ScienceDirect,"openstreetmap, framework, information, general, relations, contributors, cities, usefulness, maps, users, deal, different, metamorphic, pattern, goal, implemented, order, available, follow, potential"
360,"VISOR: A fast image processing pipeline with scaling and translation invariance for test oracle automation of visual output systems,","2018,","Abstract: Test oracles differentiate between the correct and incorrect system behavior. Hence, test oracle automation is essential to achieve overall test automation. Otherwise, testers have to manually check the system behavior for all test cases. A common test oracle automation approach for testing systems with visual output is based on exact matching between a snapshot of the observed output and a previously taken reference image. However, images can be subject to scaling and translation variations. These variations lead to a high number of false positives, where an error is reported due to a mismatch between the compared images although an error does not exist. To address this problem, we introduce an automated test oracle, named VISOR, that employs a fast image processing pipeline. This pipeline includes a series of image filters that align the compared images and remove noise to eliminate differences caused by scaling and translation. We evaluated our approach in the context of an industrial case study for regression testing of Digital TVs. Results show that VISOR can avoid 90% of false positive cases after training the system for 4 h. Following this one-time training, VISOR can compare thousands of image pairs within seconds on a laptop computer.
Keywords: Black-box testing; Test oracle; Computer vision; Image processing; Test automation",ScienceDirect,"relevance, od, object, metric, questions, objects, faulty, experiment, community, detection, method, network, irrelevant, address, formulated, unrelated, multiple, complex, ods, fairly"
361,"Automatic generation algorithm of expected results for testing of component-based software system,","2015,","Abstract: Context
A component-based software (CBS) system is a typical example of a composite component, which is composed of two or more atomic components. In the test of a CBS system, it is necessary to automatically generate expected results because they are compared with the actual results.
Objective
This paper proposes an automatic generation algorithm of expected results for the testing of a CBS system.
Method
The algorithm analyzes Input/Output (I/O) relationships of a CBS system to identify inputs that influence its outputs. Then, the algorithm uses test cases of atomic components for each input and automatically generates expected results. To evaluate the proposed approach, we compare the proposed approach with the other I/O relationship based approach via two case studies which are the CBS systems for guide robot. The comparison shows the effectiveness of our approach.
Results
To verify effectiveness of the proposed approach, we measure the cost of manual generation of expected results for each case study. The costs are from 0.001 to 0.015 in the first case study, and are from 0.590 to 0.998 in the second case study.
Conclusion
This proposed approach reduces the time-consuming and error-prone task which manually generates expected results for the testing of a CBS system.
Keywords: Component-based software system; Composite component; Automatic expected result generation; I/O relationship analysis",ScienceDirect,"device, touch, authentication, biometric, mobile, continuous, user, session, login, initial, mechanism, behavioural, discusses, needs, challenges, security, comprehensive, illegitimate, theft, password"
362,"Mutation testing of unsupervised learning systems,","2024,","Abstract: Unsupervised learning (UL) is one of the most important areas in artificial intelligence. UL systems are capable of learning patterns from unlabeled data and playing an increasingly critical role in many fields. Therefore, more and more attention has been paid to the security and stability of UL systems. Testing has achieved great success in ensuring the safety of traditional software systems and been gradually applied to supervised learning. However, UL is not in the consideration of most current testing methods. To fill this gap, we propose a novel mutation testing technique specific to UL systems. We design a series of mutation operators to simulate the unstable situations and possible errors that UL systems may encounter, and define corresponding mutation scores. Further, we combine the proposed technique with autoencoder for generating adversarial samples. In the evaluation phase, we demonstrate the practicability of the proposed technique based on three datasets. We have also developed an open-source tool MTGAN, which incorporates the functionality of mutation testing for GANs, to evaluate their stability and assess their capacity to address given issues.
Keywords: Mutation testing; Unsupervised learning; Cluster analysis; Autoencoder",ScienceDirect,"guidelines, gui, review, artifacts, code, mapped, literature, guideline, practice, based, testing, categories, work, applicable, source, industrial, test, checklists, facets, actionable"
363,"Metamorphic testing of OpenStreetMap,","2021,","Abstract: Context:
OpenStreetMap represents a collaborative effort of many different and unrelated users to create a free map of the world. Although contributors follow some general guidelines, unsupervised additions are prone to include erroneous information. Unfortunately, it is impossible to automatically detect most of these issues because there does not exist an oracle to evaluate whether the information is correct or not. Metamorphic testing has shown to be very useful in assessing the correctness of very heterogeneous artifacts when oracles are not available.
Objective:
The main goal of our work is to provide a (fully implemented) framework, based on metamorphic testing, that will support the analysis of the information provided in OpenStreetMap with the goal of detecting faulty information.
Method:
We defined a general metamorphic testing framework to deal with OpenStreetMap. We identified a set of good metamorphic relations. In order to have as much automation as possible, we paid special attention to the automatic selection of follow-up inputs because they are fundamental to diminish manual testing. In order to assess the usefulness of our framework, we applied it to analyze maps of four cities in different continents. The rationale is that we would be dealing with different problems created by different contributors.
Results:
We obtained experimental evidence that shows the potential value of our framework. The application of our framework to the analysis of the chosen cities revealed errors in all of them and in all the considered categories.
Conclusion:
The experiments showed the usefulness of our framework to identify potential issues in the information appearing in OpenStreetMap. Although our metamorphic relations are very helpful, future users of the framework might identify other relations to deal with specific situations not covered by our relations. Since we provide a general pattern to define metamorphic relations, it is relatively easy to extend the existing framework. In particular, since all our metamorphic relations are implemented and the code is freely available, users have a pattern to implement new relations.
Keywords: Metamorphic testing; Quality of maps; OpenStreetMap",ScienceDirect,"chess, engines, stockfish, positions, analyse, best, players, engine, usefulness, tool, available, behaviours, advantage, respect, version, inconsistent, tester, easily, goal, consider"
364,"Improving the validation of multiple-object detection using a complex-network-community-based relevance metric,","2024,","Abstract: Although many of today’s object detectors (ODs) are fairly powerful and advanced, most of them still suffer from high detection failure rates. To address this issue, we have developed an innovative, multiple-object detection validation method using a complex-network-community-based relevance metric. This metric aims to measure the relevance of multiple objects in the same OD output, based on our observation that a faulty OD output generally includes objects that are irrelevant or unrelated to each other. To verify the effectiveness of our method, we formulated four research questions, and performed an experiment with statistical analyses to address these questions. Our experiment provides strong support that our method (particularly the relevance metric) is highly effective at helping human testers in identifying faulty OD outputs.
Keywords: Object detection; Object relevance; Complex network; Community clustering",ScienceDirect,"clustering, fault, debugging, nof, nsp1f, faults, effectiveness, isolation, parallel, influence, failed, factors, failure, competitive, refs, 228, ref, 1060, gp19, ft"
365,"Touch-based continuous mobile device authentication: State-of-the-art, challenges and opportunities,","2021,","Abstract: The advancement in the computational capability and storage size of a modern mobile device has evolved it into a multi-purpose smart device for individual and business needs. The increasing usage of this device has led to the need for a secure and efficient authentication mechanism. For securing mobile devices, password, PIN, and swipe patterns are commonly used for user authentication. Entry-point face and fingerprint recognition have also gained traction in the past years. However, these authentication schemes cannot authenticate a user after the initial-login session. This limitation might put the device exposed to information theft and leakage if an illegitimate user could bypass the initial-login session. Therefore, a mobile device needs a continuous authentication mechanism that can protect a user throughout the entire working session, which complements the initial-login authentication to provide more comprehensive security protection. Touch biometric is a behavioural biometric that represents the touch behaviour pattern of a user when interacting with the touchscreen of the device. Touch biometric has been proposed as a continuous authentication mechanism, where the device can collect touch biometric data transparently while a user is using the device. However, there are still plenty of challenges and obstacles in touch-based continuous mobile device authentication due to its challenges as a biometric modality. This paper provides a comprehensive overview of fundamental principles that underpin touch-based continuous mobile device authentication. Our work discusses state-of-the-art methods in touch data acquisition, behavioural feature extraction, user classification, and evaluation methods. This paper also discusses some challenges and opportunities in the current touch-based continuous mobile device authentication domain to obtain a broad research community and market acceptance.
Keywords: Biometrics; Mobile device security; Continuous authentication; Touch biometric",ScienceDirect,"swmm, unit, coverage, tests, regression, getter, statement, storm, manual, water, executing, user, management, model, scientific, level, developers, floating, 2953, setter"
366,"Code review guidelines for GUI-based testing artifacts,","2023,","Abstract: Context:
Review of software artifacts, such as source or test code, is a common practice in industrial practice. However, although review guidelines are available for source and low-level test code, for GUI-based testing artifacts, such guidelines are missing.
Objective:
The goal of this work is to define a set of guidelines from literature about production and test code, that can be mapped to GUI-based testing artifacts.
Method:
A systematic literature review is conducted, using white and gray literature to identify guidelines for source and test code. These synthesized guidelines are then mapped, through examples, to create actionable, and applicable, guidelines for GUI-based testing artifacts.
Results:
The results of the study are 33 guidelines, summarized in nine guideline categories, that are successfully mapped as applicable to GUI-based testing artifacts. Of the collected literature, only 10 sources contained test-specific code review guidelines. These guideline categories are: perform automated checks, use checklists, provide context information, utilize metrics, ensure readability, visualize changes, reduce complexity, check conformity with the requirements and follow design principles and patterns.
Conclusion:
This pivotal set of guidelines provides an industrial contribution in filling the gap of general guidelines for review of GUI-based testing artifacts. Additionally, this work highlights, from an academic perspective, the need for future research in this area to also develop guidelines for other specific aspects of GUI-based testing practice, and to take into account other facets of the review process not covered by this work, such as reviewer selection.
Keywords: GUI testing; GUI-based testing; Software testing; Code review; Modern code review; Guidelines; Practices",ScienceDirect,"learning, review, machine, software, efficacy, testing, methods, quality, systematic, objective, study, march, discourse, prompting, comprehensively, merits, quest, 2024, improvements, strengths"
367,"Metamorphic testing of chess engines,","2023,","Abstract: Context:
Chess engines are computer programs that analyse chess positions. The goal of this analysis is to decide which player has an advantage and evaluate how big the advantage is. Using this analysis, chess engines are really powerful players who can consistently beat the best (human) players. Even though these programs are fantastic players, we cannot be sure that the code is fault free because it is very difficult to test them. In particular, we face the oracle problem: if the chess engine plays better than any potential tester, how can a tester claim that a certain evaluation is wrong or that a suggested move is not the best one?
Objective:
The main goal of our work is to provide a metamorphic testing tool to evaluate chess engines. In particular, we are interested in looking for inconsistent behaviours in the best publicly available chess engine, Stockfish, but we would also like to consider other chess engines.
Methods:
We developed a metamorphic testing solution to validate chess engines. First, we defined metamorphic relations that might reveal inconsistent behaviours. The underlying idea was that the evaluation of related positions should be the same. For example, if we consider a position and rotate all the pieces with respect to the central axis, then both positions should have the same evaluation. One of our main priorities was to have a fully automatised tool. Source inputs are obtained from available datasets while follow-up inputs are automatically computed by applying sound transformations to the source inputs with respect to the corresponding metamorphic rule. In order to assess the usefulness of our work, we applied it to analyse a dataset with more than 40,000 positions.
Results:
Empirical evidence validates the usefulness of our work to analyse the best available chess engine, Stockfish. Our tool revealed non-negligible deviations from the expected behaviour in Stockfish for all the MRs. Additional experiments showed that our tool can be easily used to analyse other chess engines such as Komodo, Houdini and Gull.
Conclusion:
The experiments demonstrate the usefulness of our approach to identify issues in the latest version of the widely recognised to be the best chess engine: Stockfish (version 15, released in April 2022). Our tool is flexible and can be easily extended with metamorphic relations that can be defined in the future by either us or other users. Since all our metamorphic relations are implemented and the code is freely available, users can use them as a pattern to implement new relations.
Keywords: Software testing; Metamorphic testing; Chess engines",ScienceDirect,"causal, se, sci, pearl, graphical, inference, mapping, papers, methods, framework, community, engineering, observational, causality, 2010, fragmented, context, outlines, spurious, correlations"
368,"A comprehensive empirical investigation on failure clustering in parallel debugging,","2022,","Abstract: The clustering technique has attracted a lot of attention as a promising strategy for parallel debugging in multi-fault scenarios, this heuristic approach (i.e., failure indexing or fault isolation) enables developers to perform multiple debugging tasks simultaneously through dividing failed test cases into several disjoint groups. When using statement ranking representation to model failures for better clustering, several factors influence clustering effectiveness, including the risk evaluation formula (REF), the number of faults (NOF), the fault type (FT), and the number of successful test cases paired with one individual failed test case (NSP1F). In this paper, we present the first comprehensive empirical study of how these four factors influence clustering effectiveness. We conduct extensive controlled experiments on 1060 faulty versions of 228 simulated faults and 141 real faults, and the results reveal that: (1) GP19 is highly competitive across all REFs, (2) clustering effectiveness decreases as NOF increases, (3) higher clustering effectiveness is easier to achieve when a program contains only predicate faults, and (4) clustering effectiveness remains when the scale of NSP1F is reduced to 20%.
Keywords: Failure clustering; Fault isolation; Multiple-fault; Parallel debugging",ScienceDirect,"distributed, applications, proposal, environments, usually, order, simulation, detecting, errors, mutation, server, mutomvo, client, large, volumes, systems, limitation, hpc, modeled, phase"
369,"Unit and regression tests of scientific software: A study on SWMM,","2021,","Abstract: Testing helps assure software quality by executing a program and uncovering bugs. Scientific software developers often find it challenging to carry out systematic and automated testing due to reasons like inherent model uncertainties and complex floating-point computations. Extending the recent work on analyzing the unit tests written by the developers of the Storm Water Management Model (SWMM) [32], we report in this paper the investigation of both unit and regression tests of SWMM. The results show that the 2953 unit tests of SWMM have a 39.7% statement-level code coverage and a 82.4% user manual coverage. Meanwhile, an examination of 58 regression tests of SWMM shows a 44.9% statement-level code coverage and a near 100% user manual coverage. We also observe a “getter-setter-getter” testing pattern from the SWMM unit tests, and suggest a diversified way of executing regression tests.
Keywords: Scientific software; Unit testing; Regression testing; User manual; Test coverage; Storm Water Management Model (SWMM)",ScienceDirect,"bx, mt4mt, bxs, model, hoc, bidirectional, atl, ad, test, costs, study, oracles, developing, transformation, approach, based, testing, scripts, synchronization, metamodel"
370,"A systematic review of machine learning methods in software testing,","2024,","Abstract: Background
The quest for higher software quality remains a paramount concern in software testing, prompting a shift towards leveraging machine learning techniques for enhanced testing efficacy.
Objective
The objective of this paper is to identify, categorize, and systematically compare the present studies on software testing utilizing machine learning methods.
Method
This study conducts a systematic literature review (SLR) of 40 pertinent studies spanning from 2018 to March 2024 to comprehensively analyze and classify machine learning methods in software testing. The review encompasses supervised learning, unsupervised learning, reinforcement learning, and hybrid learning approaches.
Results
The strengths and weaknesses of each reviewed paper are dissected in this study. This paper also provides an in-depth analysis of the merits of machine learning methods in the context of software testing and addresses current unresolved issues. Potential areas for future research have been discussed, and statistics of each review paper have been collected.
Conclusion
By addressing these aspects, this study contributes to advancing the discourse on machine learning's role in software testing and paves the way for substantial improvements in testing efficacy and software quality.
Keywords: Machine learning; Software testing; Quality of software; Systematic review",ScienceDirect,"ml, bugs, algorithms, dangerous, silent, injected, employed, potentially, emerge, datasets, errors, software, considerable, influence, fact, code, extremely, study, implementing, predictions"
371,"Applications of statistical causal inference in software engineering,","2023,","Abstract: Context:
The aim of statistical causal inference (SCI) methods is to estimate causal effects from observational data (i.e., when randomized controlled trials are not possible). In this context, Pearl’s framework based on causal graphical models is an approach that has recently gained popularity and allows for explicit reasoning about issues related to spurious correlations.
Objective:
Our primary goal is to understand to which extend and how Pearl’s graphical framework is applied in software engineering (SE).
Methods:
We performed a systematic mapping study and analysed a total of 25 papers published between 2010 and 2022.
Results:
Our results show that the application of Pearl’s SCI framework in SE is relatively recent and that the corresponding research community is fragmented. Most of the selected papers focus on software quality analysis. There is no clear and widespread community of practice (yet) on how to implement and evaluate SCI in SE.
Conclusions:
To the best of our knowledge this is the first time such a mapping study is done. We believe that SE practitioners might benefit from such a work, as it both provides an overview of the work and people involved in the application of causal inference methods, but also outlines the potential and limitations of such approaches.
Keywords: Causal inference; Software engineering; Causality; Graphical causal model",ScienceDirect,"cases, test, path, source, symbolic, metamorphic, approach, conducted, testing, termed, execution, fault, highlights, lots, improve, studies, direction, enhances, leveraged, investigations"
372,"Mutomvo: Mutation testing framework for simulated cloud and HPC environments,","2018,","Abstract: Many current applications provide high performance to process large volumes of data. These applications usually run in highly distributed environments, like cloud and HPC systems. Nevertheless, the large and complex architectures required for deploying these applications may not be available during the development phase. This limitation can be overcome by using simulation platforms to model a wide range of distributed system configurations and execute these applications in the modeled system. Usually, these applications are tested against a small number of test cases that are manually designed by the testers. It is desirable to have effective test suites in order to detect failures in the application models. In this paper we propose a mutation testing framework for detecting errors in distributed applications executed in simulated environments. The execution of a test suite against the set of mutated models allows to determine its effectiveness for detecting different errors. The proposal has been implemented in a tool called MuTomVo. In order to support the feasibility of the proposal, we have carried out a case study over three applications running in different distributed systems: a client/server model, intensive computation and scientific pipeline.
Keywords: Software testing; Mutation testing; Distributed systems; Simulation",ScienceDirect,"navigation, ros, planner, verification, like, languages, specification, maude, dafny, robot, stack, formal, path, component, complex, methodology, checking, hoare, planned, navfn"
373,"Testing bidirectional model transformation using metamorphic testing,","2018,","Abstract: Context
In model-based software development, bidirectional model transformation (BX) provides a fundamental solution to model synchronization that can retain the consistency among models. Similar to conventional programs, a BX program may also contain bugs. Accordingly, a BX program must be tested prior to being used in practice. A challenging problem of testing BX programs is to construct test oracles (e.g., assertions and expected output models), which are usually difficult and/or expensive to manually specify.
Objective
In we paper, we investigate how to alleviate the oracle problem in BX testing via reducing the costs of developing test oracles.
Method
We propose a metamorphic testing approach for BX. First, we identify three generic metamorphic relations for BX. Afterwards, we define a metamodel MT4MT to establish metamorphic test groups and test scripts. We also propose a testing framework to support metamorphic testing based on MT4MT.
Results
We conducted an experimental study of mutation analysis and a case study on three ATL-based ad-hoc BXs. The results of the experimental study and the case study showed that our approach killed 79.38% mutants and enabled us to test real-world ATL-based ad-hoc BXs. We also demonstrated that MT4MT can be used to test the semantics properties of BXs.
Conclusion
Our approach is an effective and practical approach with lower costs of developing test oracles.
Keywords: Metamorphic testing; Bidirectional model transformation; Model driven engineering",ScienceDirect,"hardware, symbolic, trojans, verilog, trojan, modulo, satisfiability, execution, flow, control, register, hub, solver, conditionally, code, theories, transfer, generated, parallel, triggered"
374,"A large experimentation to analyze the effects of implementation bugs in machine learning algorithms,","2022,","Abstract: In the last years, Machine Learning (ML) has become extremely used in software systems: it is applied in many different contexts such as medicine, bioinformatics, finance, automotive, only to mention a few. One of the main drawbacks recognized in the literature is that there are still no consolidated approaches and strategies to ensure the reliability of the code implementing the underlying ML theoretical algorithms. This fact has potentially a strong impact since many critical software systems rely on ML algorithms for implementing intelligent behaviors, and so on (potentially) unreliable code that could cause, in extreme cases, catastrophic errors: e.g., loss of life due to a wrong diagnosis of an ML-based cancer classifier. Our work aims to understand better the impact that implementation bugs have on the results provided by ML algorithms. Such analysis is fundamental to define novel techniques able to detect bugs in ML-based software systems. Thus, we extensively analyzed thousands of bugs on eight ML algorithms (in particular, four classification algorithms and four clustering ones). The bugs were injected by using an automatic Mutation tool able to mimic realistic errors in the algorithms source code. The empirical study shows that a large amount of the injected bugs are silent since they do not influence the results the eight algorithms provide on the 17 datasets employed in our study; in the remaining cases, the bugs emerge as runtime errors, exceptions, or modified accuracy of the predictions. Moreover, we also discovered that about 1% of the injected bugs are extremely dangerous since they drastically affect the quality of the predictions only in rare cases and with specific datasets increasing the possibility of going unnoticed. The fact that a considerable portion of the bugs does not influence the behavior of the algorithms, on the datasets employed in our study, poses a considerable problem: indeed, among them, several other dangerous silent bugs could be present. They could emerge when the implementations of the algorithms are employed on a novel dataset and with different settings. So the problem of the dangerous silent bugs can potentially be more pervasive than shown in our study.
Keywords: Software testing; Machine learning; Software bug; Accuracy; Oracle problem; Software quality assurance",ScienceDirect,"ml, programs, testing, systems, hope, learning, directions, practices, engineers, identify, wide, community, research, literature, reliability, help, based, software, assistants, voice"
375,"Path-directed source test case generation and prioritization in metamorphic testing,","2022,","Abstract: Metamorphic testing is a technique that makes use of some necessary properties of the software under test, termed as metamorphic relations, to construct new test cases, namely follow-up test cases, based on some existing test cases, namely source test cases. Due to the ability of verifying testing results without the need of test oracles, it has been widely used in many application domains and detected lots of real-life faults. Numerous investigations have been conducted to further improve the effectiveness of metamorphic testing, most of which were focused on the identification and selection of “good” metamorphic relations. Recently, a few studies emerged on the research direction of how to generate and select source test cases that are effective in fault detection. In this paper, we propose a novel approach to generating source test cases based on their associated path constraints, which are obtained through symbolic execution. The path distance among test cases is leveraged to guide the prioritization of source test cases, which further improve the efficiency. A tool has been developed to automate the proposed approach as much as possible. Empirical studies have also been conducted to evaluate the fault-detection effectiveness of the approach. The results show that this approach enhances both the performance and automation of metamorphic testing. It also highlights interesting research directions for further improving metamorphic testing.
Keywords: Metamorphic testing; Source test case; Symbolic execution; Path constraint",ScienceDirect,"spls, spl, localization, products, product, debugging, isolate, suspiciousness, features, spectrum, sizes, approach, faulty, feature, techniques, failures, localized, stand, likelihood, affordable"
376,"Verification of the ROS NavFn planner using executable specification languages,","2023,","Abstract: The Robot Operating System (ROS) is a framework for building robust software for complex robot systems in several domains. The Navigation Stack stands out among the different libraries available in ROS, providing a set of components that can be reused to build robots with autonomous navigation capabilities. This library is a critical component, as navigation failures could have catastrophic consequences for applications like self-driving cars where safety is crucial. Here we devise a general methodology for verifying this kind of complex systems by specifying them in different executable specification languages with verification support and validating the equivalence between the specifications and the original system using differential testing techniques. The complex system can then be indirectly analyzed using the verification tools of the specification languages like model checking, semi-automated functional verification based on Hoare logic, and other formal techniques. In this paper we apply this verification methodology to the NavFn planner, which is the main planner component of the Navigation Stack of ROS, using Maude and Dafny as specification languages. We have formally proved several desirable properties of this planner algorithm like the absence of obstacles in the planned path. Moreover, we have found counterexamples for other concerns like the optimality of the path cost.
Keywords: Formal verification; Model checking; ROS; Maude; Navigation; Dafny",ScienceDirect,"mv, validation, training, model, hyperparameter, overfitting, exploratory, fit, mutated, tuning, labels, sample, data, tasks, does, retrains, defending, intuition, deserves, captures"
377,"Symbolic execution based test-patterns generation algorithm for hardware Trojan detection,","2018,","Abstract: Hardware Trojan detection is a very difficult challenge. However, the combination of symbolic execution and metamorphic testing is useful for detecting hardware Trojans in Verilog code. In this paper, symbolic execution and metamorphic testing were combined to detect internal conditionally triggered hardware Trojans in the register-transfer level design. First, control flow graphs of Verilog code were generated. Next, parallel symbolic execution and satisfiability modulo theories solver generated test patterns. Finally, metamorphic testing detected the hardware Trojans. The work used Trust-Hub benchmarks in experiments.
Keywords: Hardware Trojan; Symbolic execution; Satisfiability modulo theory; Metamorphic testing; Control flow graph",ScienceDirect,"features, recessive, adversarial, filter, dominant, examples, dnns, cosine, dct, feature, filtered, example, imperceptible, networks, discrete, neural, humans, transform, perturbations, image"
378,"On testing machine learning programs,","2020,","Abstract: Nowadays, we are witnessing a wide adoption of Machine learning (ML) models in many software systems. They are even being tested in safety-critical systems, thanks to recent breakthroughs in deep learning and reinforcement learning. Many people are now interacting with systems based on ML every day, e.g., voice recognition systems used by virtual personal assistants like Amazon Alexa or Google Home. As the field of ML continues to grow, we are likely to witness transformative advances in a wide range of areas, from finance, energy, to health and transportation. Given this growing importance of ML-based systems in our daily life, it is becoming utterly important to ensure their reliability. Recently, software researchers have started adapting concepts from the software testing domain (e.g., code coverage, mutation testing, or property-based testing) to help ML engineers detect and correct faults in ML programs. This paper reviews current existing testing practices for ML programs. First, we identify and explain challenges that should be addressed when testing ML programs. Next, we report existing solutions found in the literature for testing ML programs. Finally, we identify gaps in the literature related to the testing of ML programs and make recommendations of future research directions for the scientific community. We hope that this comprehensive review of software testing practices will help ML engineers identify the right approach to improve the reliability of their ML-based systems. We also hope that the research community will act on our proposed research directions to advance the state of the art of testing for ML programs.
Keywords: Machine learning; Data cleaning; Feature engineering testing; Model testing; Implementation testing",ScienceDirect,"adaptation, service, services, web, environments, big, cloud, monitoring, solutions, systems, based, emergence, autonomic, taxonomy, proactive, host, microservices, discussions, layer, surveyed"
379,"Spectrum-based fault localization in software product lines,","2018,","Abstract: Context
Software Product Line (SPL) testing is challenging mainly due to the potentially huge number of products under test. Most of the research on this field focuses on making testing affordable by selecting a representative subset of products to be tested. However, once the tests are executed and some failures revealed, debugging is a cumbersome and time consuming task due to difficulty to localize and isolate the faulty features in the SPL.
Objective
This paper presents a debugging approach for the localization of bugs in SPLs.
Method
The proposed approach works in two steps. First, the features of the SPL are ranked according to their suspiciousness (i.e., likelihood of being faulty) using spectrum-based localization techniques. Then, a novel fault isolation approach is used to generate valid products of minimum size containing the most suspicious features, helping to isolate the cause of failures.
Results
For the evaluation of our approach, we compared ten suspiciousness techniques on nine SPLs of different sizes. The results reveal that three of the techniques (Tarantula, Kulcynski2 and Ample2) stand out over the rest, showing a stable performance with different types of faults and product suite sizes. By using these metrics, faults were localized by examining between 0.1% and 14.4% of the feature sets.
Conclusion
Our results show that the proposed approach is effective at locating bugs in SPLs, serving as a helpful complement for the numerous approaches for testing SPLs.
Keywords: Software product lines; Spectrum-based fault localization; Feature models; Debugging",ScienceDirect,"regression, linear, statistical, economics, manipulated, systems, multiple, used, predictive, doing, testing, mathematical, intrinsic, look, effective, examined, calculation, metamorphic, examine, 11"
380,"Model validation using mutated training labels: An exploratory study,","2023,","Abstract: We introduce an exploratory study on Mutation Validation (MV), a model validation method using mutated training labels for supervised learning. MV mutates training data labels, retrains the model against the mutated data, and then uses the metamorphic relation that captures the consequent training performance changes to assess model fit. It does not use a validation set or test set. The intuition underpinning MV is that overfitting models tend to fit noise in the training data. MV does not aim to replace out-of-sample validation. Instead, we provide the first exploratory study on the possibility of using MV as a complement of out-of-sample validation. We explore 8 different learning algorithms, 18 datasets, and 5 types of hyperparameter tuning tasks. Our results demonstrate that MV complements well cross-validation and test accuracy in model selection and hyperparameter tuning tasks. MV deserves more attention from developers when simplicity, sustainaiblity, security (e.g., defending training data attack), and interpretability of the built models are required.
Keywords: Model validation; Model complexity; Model overfitting",ScienceDirect,"vulnerability, hacking, ethical, articles, scopus, academic, included, analyzed, assessment, total, community, analysis, research, literature, 459, 629, citations, subcommunities, aggregated, teaming"
381,"Feature-filter: Detecting adversarial examples by filtering out recessive features,","2022,","Abstract: Deep neural networks (DNNs) have achieved state-of-the-art performance in numerous tasks involving complex analysis of raw data, such as self-driving systems and biometric recognition systems. However, recent works have shown that DNNs are under threat from adversarial example attacks. The adversary can easily change the outputs of DNNs by adding small well-designed perturbations to inputs. Adversarial example detection is fundamental for robust DNN-based services. From a human-centric perspective, this paper divides image features into dominant features comprehensible to humans and recessive features incomprehensible to humans yet exploited by DNNs. Based on this perspective, the paper proposes a new viewpoint that imperceptible adversarial examples are the product of recessive features misleading neural networks, and that the adversarial attack enriches these recessive features. The imperceptibility of the adversarial examples indicates that the perturbations enrich recessive features but hardly affect dominant features. Therefore, adversarial examples are sensitive to filtering out recessive features, while benign examples are immune to such operations. Inspired by this idea, we propose a label-only adversarial detector that is referred to as a feature-filter. The feature-filter utilizes the discrete cosine transform (DCT) to approximately separate recessive features from dominant features and obtain a filtered image. A comprehensive user study demonstrates that the DCT-based filter can reliably filter out recessive features from the test image. By comparing only the DNN’s prediction labels on the input and its filtered version, the feature-filter can detect imperceptible adversarial examples in real time with high accuracy and few false-positives.
Keywords: Deep neural networks; Adversarial example; Dominant features; Recessive features; Discrete cosine transform",ScienceDirect,"icos, cnns, operation, classification, accuracy, image, invariants, misclassifications, arbitrary, knowledge, unlabeled, correct, convolutional, ml, likely, assessment, strategies, automatically, datasets, networks"
382,"Web service adaptation: A decade’s overview,","2023,","Abstract: With the exponential growth of communication and information technologies, adaptation has gained a significant attention as it becomes a key feature of service-based systems, allowing them to operate and evolve in highly dynamic and uncertain environments. Although several Web service standards and frameworks have been proposed and extended, existing solutions do not provide a suitable architecture, in which all aspects of monitoring and adaptation (e.g., proactive, cross-layer, and autonomic adaptation) can be expressed. In addition, the emergence of new computing environments to host and execute various types of services (Web/cloud services, big data-intensive services, mobile services, microservices, etc.) raises the need for more efficient monitoring and adaptation systems. This survey aims to bring a synthesis and a road-map to the adaptation of service-based systems. We also discuss adaptation solutions in emerging service models, such as cloud services and big services. Based on an adaptation taxonomy which we extracted from the surveyed approaches, and by identifying the main requirements and goals of service adaptation in Web, cloud and big data environments, detailed analysis and discussions, as well as the open issues, are provided.
Keywords: Service-based systems; Web service adaptation; Adaptation mechanism; QoS management; Quality of adaptation; Service models",ScienceDirect,"quantum, unitarity, checking, equivalence, black, programs, box, identity, methods, testing, maximize, algorithms, specialized, classical, offering, overlook, bridge, rigorously, challenges, discovery"
383,"Testing multiple linear regression systems with metamorphic testing,","2021,","Abstract: Regression is one of the most commonly used statistical techniques. However, testing regression systems is a great challenge because of the absence of test oracle in general. In this paper, we show that Metamorphic Testing is an effective approach to test multiple linear regression systems. In doing so, we identify intrinsic mathematical properties of linear regression, and then propose 11 Metamorphic Relations to be used for testing. Their effectiveness is examined using mutation analysis with a range of different regression programs. We further look at how the testing could be adopted in a more effective way. Our work is applicable to examine the reliability of predictive systems based on regression that has been widely used in economics, engineering and science, as well as of the regression calculation manipulated by statistical users.
Keywords: Multiple linear regression; Metamorphic testing; Metamorphic relation",ScienceDirect,"monte, carlo, analyses, spaces, configuration, search, feature, framework, variability, tree, deal, product, space, models, analysis, implementation, problems, succeed, envision, configurable"
384,"Research communities in cyber security vulnerability assessments: A comprehensive literature review,","2023,","Abstract: Ethical hacking and vulnerability assessments are gaining rapid momentum as academic fields of study. Still, it is sometimes unclear what research areas are included in the categories and how they fit into the traditional academic framework. Previous studies have reviewed literature in the field, but the attempts use manual analysis and thus fail to provide a comprehensive view of the domain. To better understand how the area is treated within academia, 537,629 related articles from the Scopus database were analyzed. A Python script was used for data mining as well as analysis of the data, and 23,459 articles were included in the final synthesis. The publication dates of the articles ranged from 1975 to 2022. They were authored by 53,495 authors and produced an aggregated total of 836,956 citations. Fifteen research communities were detected using the Louvain community detection algorithm: (smart grids, attack graphs, security testing, software vulnerabilities, Internet of Things (IoT), network vulnerability, vulnerability analysis, Android, cascading failures, authentication, Software-Defined Networking (SDN), spoofing attacks, malware, trust models, and red teaming). In addition, each community had several individual subcommunities, constituting a total of 126. From the trends of the analyzed studies, it is clear that research interest in ethical hacking and vulnerability assessment is increasing.
Keywords: Systematic literature review; SLR; Vulnerability assessment; Ethical hacking; Cybersecurity; Scopus; Penetration testing",ScienceDirect,"cito, generation, integration, indicators, class, research, stubbing, challenges, problem, order, future, techniques, opportunities, progress, corresponding, evaluation, test, datasets, cost, problems"
385,"Assessing operational accuracy of CNN-based image classifiers using an oracle surrogate,","2023,","Abstract: Context
Assessing the accuracy in operation of a Machine Learning (ML) system for image classification on arbitrary (unlabeled) inputs is hard. This is due to the oracle problem, which impacts the ability of automatically judging the output of the classification, thus hindering the accuracy of the assessment when unlabeled previously unseen inputs are submitted to the system.
Objective
We propose the Image Classification Oracle Surrogate (ICOS), a technique to automatically evaluate the accuracy in operation of image classifiers based on Convolutional Neural Networks (CNNs).
Method
To establish whether the classification of an arbitrary image is correct or not, ICOS leverages three knowledge sources: operational input data, training data, and the ML algorithm. Knowledge is expressed through likely invariants - properties which should not be violated by correct classifications. ICOS infers and filters invariants to improve the correct detection of misclassifications, reducing the number of false positives. We evaluate ICOS experimentally on twelve CNNs – using the popular MNIST, CIFAR10, CIFAR100, and ImageNet datasets. We compare it to two alternative strategies, namely cross-referencing and self-checking.
Results
Experimental results show that ICOS exhibits performance comparable to the other strategies in terms of accuracy, showing higher stability over a variety of CNNs and datasets with different complexity and size.
Conclusions
ICOS likely invariants are shown to be effective in automatically detecting misclassifications by CNNs used in image classification tasks when the expected output is unknown; ICOS ultimately yields faithful assessments of their accuracy in operation. Knowledge about input data can also be manually incorporated into ICOS, to increase robustness against unexpected phenomena in operation, like label shift.
Keywords: Image classification; Machine Learning; Convolutional Neural Networks; Accuracy assessment; Oracle Problem",ScienceDirect,"bibliometric, engineering, published, research, journals, conferences, carries, researched, moment, 365, influential, 2016, countries, iv, undertaken, scopus, institutions, articles, iii, 2018"
386,"Equivalence, identity, and unitarity checking in black-box testing of quantum programs,","2024,","Abstract: Quantum programs exhibit inherent non-deterministic behavior, which poses more significant challenges for error discovery compared to classical programs. While several testing methods have been proposed for quantum programs, they often overlook fundamental questions in black-box testing. In this paper, we bridge this gap by presenting three novel algorithms specifically designed to address the challenges of equivalence, identity, and unitarity checking in black-box testing of quantum programs. We also explore optimization techniques for these algorithms, including specialized versions for equivalence and unitarity checking, and provide valuable insights into parameter selection to maximize performance and effectiveness. To evaluate the effectiveness of our proposed methods, we conducted comprehensive experimental evaluations, which demonstrate that our methods can rigorously perform equivalence, identity, and unitarity checking, offering robust support for black-box testing of quantum programs.
Keywords: Quantum programs; Software testing; Black-box testing; Equivalence checking; Unitarity checking",ScienceDirect,"entropy, localization, unlabelled, efilter, fault, testsuite, statement, based, test, cases, efficiency, constructed, debugging, suitable, practice, suite, compared, assume, weaken, exam"
387,"A Monte Carlo tree search conceptual framework for feature model analyses,","2023,","Abstract: Challenging domains of the future such as Smart Cities, Cloud Computing, or Industry 4.0 expose highly variable systems with colossal configuration spaces. The automated analysis of those systems’ variability has often relied on SAT solving and constraint programming. However, many of the analyses have to deal with the uncertainty introduced by the fact that undertaking an exhaustive exploration of the whole configuration space is usually intractable. In addition, not all analyses need to deal with the configuration space of the feature models, but with different search spaces where analyses are performed over the structure of the feature models, the constraints, or the implementation artifacts, instead of configurations. This paper proposes a conceptual framework that tackles various of those analyses using Monte Carlo tree search methods, which have proven to succeed in vast search spaces (e.g., game theory, scheduling tasks, security, program synthesis, etc.). Our general framework is formally described, and its flexibility to cope with a diversity of analysis problems is discussed. We provide a Python implementation of the framework that shows the feasibility of our proposal, identifying up to 11 lessons learned, and open challenges about the usage of the Monte Carlo methods in the software product line context. With this contribution, we envision that different problems can be addressed using Monte Carlo simulations and that our framework can be used to advance the state-of-the-art one step forward.
Keywords: Automated analysis; Configurable systems; Feature models; Monte Carlo tree search; Software product lines; Variability",ScienceDirect,"safety, nn, nns, papers, control, critical, improving, completeness, software, assuring, interpretability, approaches, selected, based, relevant, attention, review, failure, network, engineering"
388,"Progress on class integration test order generation approaches: A systematic literature review,","2023,","Abstract: Context:
Integration testing is an effective way to detect unit test results and ensure the correct and stable operation of software modules. One of the crucial problems in integration testing is the class integration test order (CITO) generation problem. Its purpose is to reasonably determine the test order of each class in a program to reduce test consumption. In recent years, the CITO generation problem has made a lot of progress but also faces more challenges.
Objective:
The goal of this paper is to provide an overview of the research progress on the CITO generation problem. By summarizing applied techniques, evaluation indicators, and datasets, this paper aims to identify research challenges and suggest future opportunities.
Method:
We conduct a systematic literature review of CITO generation approaches, including the problems investigated, the solutions proposed, the techniques applied, the evaluation indicators used, and the datasets covered.
Results:
Based on research techniques and evaluation indicators, we classified and analyzed 30 papers published between 2011 and 2022. Our analysis reveals that more (47%) of the studies on the CITO generation problem still prefer to use search-based techniques, and the vast majority (90%) of the studies choose to use the stubbing complexity as the indicator to evaluate the stubbing cost of generating CITOs. We have extracted five challenges that the CITO generation problem is facing, corresponding to which we have given suggestions for future research.
Conclusion:
In this paper, we have outlined the research status of CITO generation approaches, summarized the challenges, and proposed corresponding opportunities for future study. We expect this paper to better help software testing workers understand the CITO generation problem and improve efficiency in practical work.
Keywords: Software testing; Integration testing; Class integration test order; Test cost",ScienceDirect,"backdoor, dnns, backdoors, sequential, adversarial, tuaps, universal, targeted, attack, method, perturbations, rate, using, detection, does, networks, training, based, neural, metamorphosis"
389,"Looking Over the Research Literature on Software Engineering from 2016 to 2018,","2019,","Abstract: This paper carries out a bibliometric analysis to detect (i) what is the most influential research on software engineering at the moment, (ii) where is being published that relevant research, (iii) what are the most commonly researched topics, (iv) and where is being undertaken that research (i.e., in which countries and institutions). For that, 6,365 software engineering articles, published from 2016 to 2018 on a variety of conferences and journals, are examined.
Keywords: Bibliometric analysis; Software engineering; Scopus",ScienceDirect,"topics, connections, keywords, examine, connected, publications, emerging, assigned, field, research, apps, word, map, science, web, level, open, indicating, decline, edges"
390,"Efilter: An effective fault localization based on information entropy with unlabelled test cases,","2021,","Abstract: Context:
Automatic fault localization is essential to intelligent software system. Most fault localization techniques assume the test oracle is perfect before debugging, which is hard to exist in practice. In fact, the test suite would contain a number of unlabelled test cases which have been proved to be useful in fault localization. However, due to the execution diversity, not all unlabelled test cases are suitable for fault localization. Selecting inappropriate unlabelled test cases can even weaken the fault localization efficiency.
Objective:
To solve the problem of filtering unlabelled test cases, this work aims to construct a feasible framework to select suitable unlabelled test cases for better fault localization.
Method:
To address this issue, an entropy-based framework Efilter is constructed to filter unlabelled test cases. In Efilter, a Statement-based entropy and Testsuite-based entropy are constructed to measure the localization uncertainty of given test suite. The unlabelled test case with less Statement-based entropy or Testsuite-based entropy compared with its threshold would be selected. Further, the feature integration strategies for both Statement-based entropy and Testsuite-based entropy are given to calculate the suspiciousness of statements.
Results:
The Efilter efficiency is evaluated across 6 open-source programs and 3 spectrum-based fault localizations. The results reveal that Efilter can improve fault localization efficiency by 18.8% and 16.5% with the Statement-based entropy and the Testsuite-based entropy respectively compared with the strategy without Efilter from the perspective of EXAM score on average.
Conclusion:
Our results indicate that the Efilter with both the Statement-based entropy and the Testsuite-based entropy can improve the fault localization in the scenario lack of test oracles, serving as an enhancement for fault localization in practice.
Keywords: Fault localization; Software debugging; Test oracle; Unlabelled test cases; Information entropy",ScienceDirect,"unlabelled, localization, test, cases, fault, suite, classification, information, localizing, passing, estimated, occurs, newly, failing, degradation, labelled, enable, assigned, classified, utilized"
391,"Testing and verification of neural-network-based safety-critical control software: A systematic literature review,","2020,","Abstract: Context: Neural Network (NN) algorithms have been successfully adopted in a number of Safety-Critical Cyber-Physical Systems (SCCPSs). Testing and Verification (T&V) of NN-based control software in safety-critical domains are gaining interest and attention from both software engineering and safety engineering researchers and practitioners. Objective: With the increase in studies on the T&V of NN-based control software in safety-critical domains, it is important to systematically review the state-of-the-art T&V methodologies, to classify approaches and tools that are invented, and to identify challenges and gaps for future studies. Method: By searching the six most relevant digital libraries, we retrieved 950 papers on the T&V of NN-based Safety-Critical Control Software (SCCS). Then we filtered the papers based on the predefined inclusion and exclusion criteria and applied snowballing to identify new relevant papers. Results: To reach our result, we selected 83 primary papers published between 2011 and 2018, applied the thematic analysis approach for analyzing the data extracted from the selected papers, presented the classification of approaches, and identified challenges. Conclusion: The approaches were categorized into five high-order themes, namely, assuring robustness of NNs, improving the failure resilience of NNs, measuring and ensuring test completeness, assuring safety properties of NN-based control software, and improving the interpretability of NNs. From the industry perspective, improving the interpretability of NNs is a crucial need in safety-critical applications. We also investigated nine safety integrity properties within four major safety lifecycle phases to investigate the achievement level of T&V goals in IEC 61508-3. Results show that correctness, completeness, freedom from intrinsic faults, and fault tolerance have drawn most attention from the research community. However, little effort has been invested in achieving repeatability, and no reviewed study focused on precisely defined testing configuration or defense against common cause failure.
Keywords: Software testing and verification; Neural network; Safety-critical control software; Systematic literature review",ScienceDirect,"practices, software, scientific, claims, engineering, development, supported, evidence, developers, scientists, 43, review, literature, additionally, papers, 12, increase, perform, use, efficiency"
392,"Detection of backdoor attacks using targeted universal adversarial perturbations for deep neural networks,","2024,","Abstract: Backdoor attacks on deep neural networks (DNNs) using targeted universal adversarial perturbations (TUAPs) do not require training datasets and model tampering, and triggers based on TUAPs can make DNNs output any class the adversary wants. Retraining DNNs using adversarial training for security is time-consuming and does not apply to DNNs in runtime. We want to detect backdoors using a black-box testing approach. We observe that after superimposing random noise on the input of a backdoor attack, the output still tends to remain the same, so we propose Sequential Analysis method based on the Metamorphosis Testing (SAMT). We designed two metamorphic relations for test case generation. Using sequential sampling, we calculate the label stability rate (LSR) and infer whether the image to be verified contains a trigger based on the sequential probability ratio change. The experimental results show that our method has a higher backdoor detection success rate (dsr) than the state-of-the-art detection algorithms. Moreover, our method does not need to use the model structure of DNNs, which has more adaptability and generalization ability. Based on our proposed method, we can simply add a backdoor detection layer to detect backdoors as early as possible, which can eventually alleviate the harm of such backdoors.
Keywords: Software engineering; Deep neural networks; Backdoor attack; Targeted universal adversarial perturbations",ScienceDirect,"spl, inconsistencies, ai, feature, industrial, product, sets, predictive, business, line, analytics, employ, works, configuration, resources, research, review, intelligence, artificial, literature"
393,"Mapping the structure and evolution of software testing research over the past three decades,","2023,","Abstract: Background:
The field of software testing is growing and rapidly-evolving.
Aims:
Based on keywords assigned to publications, we seek to identify predominant research topics and understand how they are connected and have evolved.
Methods:
We apply co-word analysis to map the topology of testing research as a network where author-assigned keywords are connected by edges indicating co-occurrence in publications. Keywords are clustered based on edge density and frequency of connection. We examine the most popular keywords, summarize clusters into high-level research topics examine how topics connect, and examine how the field is changing.
Results:
Testing research can be divided into 16 high-level topics and 18 subtopics. Creation guidance, automated test generation, evolution and maintenance, and test oracles have particularly strong connections to other topics, highlighting their multidisciplinary nature. Emerging keywords relate to web and mobile apps, machine learning, energy consumption, automated program repair and test generation, while emerging connections have formed between web apps, test oracles, and machine learning with many topics. Random and requirements-based testing show potential decline.
Conclusions:
Our observations, advice, and map data offer a deeper understanding of the field and inspiration regarding challenges and connections to explore. Editor’s note: Open Science material was validated by the Journal of Systems and Software Open Science Board.
Keywords: Software testing; Bibliometrics; Co-word analysis",ScienceDirect,"genprog, apr, mt, integration, repair, test, suite, addressed, individual, program, introclass, 143, conclude, oracles, practically, thoroughly, automated, oracle, outputs, presenting"
394,"Exploring the usefulness of unlabelled test cases in software fault localization,","2018,","Abstract: In automatic software fault localization techniques, both the coverage and the testing outcomes of the provided test suite are considered to be essential information. The problem occurs when test oracles do not exist. Specifically, the test suite will contain a large number of unlabelled test cases, i.e., test cases whose output is not identified as being either correct (passing) or incorrect (failing). Such unlabelled test cases cannot be directly used, thereby leading to a degradation of localization effectiveness. In this paper, we propose an approach based on test classification to enable the use of unlabelled test cases in localizing faults. In our approach, unlabelled test cases are classified based on their execution information and are then assigned corresponding estimated labels to allow them to be utilized in fault localization. Experimental results show that with the utilization of these newly labelled test cases, the effectiveness of fault localization can indeed be improved.
Keywords: Software testing; Software fault localization; Oracle problem; Test classification; Unlabelled test cases",ScienceDirect,"cass, tcdt, context, aware, test, support, variation, 17, testing, evidence, design, regarding, dynamic, challenges, studies, perspective, software, review, changes, coverage"
395,"Claims about the use of software engineering practices in science: A systematic literature review,","2015,","Abstract: Context: Scientists have become increasingly reliant on software in order to perform research that is too time-intensive, expensive, or dangerous to perform physically. Because the results produced by the software drive important decisions, the software must be correct and developed efficiently. Various software engineering practices have been shown to increase correctness and efficiency in the development of traditional software. It is unclear whether these observations will hold in a scientific context. Objective: This paper evaluates claims from software engineers and scientific software developers about 12 different software engineering practices and their use in developing scientific software. Method: We performed a systematic literature review examining claims about how scientists develop software. Of the 189 papers originally identified, 43 are included in the literature review. These 43 papers contain 33 different claims about 12 software engineering practices. Results: The majority of the claims indicated that software engineering practices are useful for scientific software development. Every claim was supported by evidence (i.e. personal experience, interview/survey, or case study) with slightly over half supported by multiple forms of evidence. For those claims supported by only one type of evidence, interviews/surveys were the most common. The claims that received the most support were: “The effectiveness of the testing practices currently used by scientific software developers is limited” and “Version control software is necessary for research groups with more than one developer.” Additionally, many scientific software developers have unconsciously adopted an agile-like development methodology. Conclusion: Use of software engineering practices could increase the correctness of scientific software and the efficiency of its development. While there is still potential for increased use of these practices, scientific software developers have begun to embrace software engineering practices to improve their software. Additionally, software engineering practices still need to be tailored to better fit the needs of scientific software development.
Keywords: Computational science; Systematic literature review; Scientific software",ScienceDirect,"strategies, datamorphic, exploratory, testing, classes, set, machine, learning, borders, datamorphism, morphy, algorithms, discovering, recognised, boundaries, application, variants, controlled, exploring, defines"
396,"Intelligent software product line configurations: A literature review,","2016,","Abstract: A software product line (SPL) is a set of industrial software-intensive systems for configuring similar software products in which personalized feature sets are configured by different business teams. The integration of these feature sets can generate inconsistencies that are typically resolved through manual deliberation. This is a time-consuming process and leads to a potential loss of business resources. Artificial intelligence (AI) techniques can provide the best solution to address this issue autonomously through more efficient configurations, lesser inconsistencies and optimized resources. This paper presents the first literature review of both research and industrial AI applications to SPL configuration issues. Our results reveal only 19 relevant research works which employ traditional AI techniques on small feature sets with no real-life testing or application in industry. We categorize these works in a typology by identifying 8 perspectives of SPL. We also show that only 2 standard industrial SPL tools employ AI in a limited way to resolve inconsistencies. To inject more interest and application in this domain, we motivate and present future research directions. Particularly, using real-world SPL data, we demonstrate how predictive analytics (a state of the art AI technique) can separately model inconsistent and consistent patterns, and then predict inconsistencies in advance to help SPL designers during the configuration of a product.
Keywords: Software product line; Literature review; Automated feature selection; Inconsistencies; Artificial intelligence; Industrial SPL tools; Predictive analytics",ScienceDirect,"ml, se, engineering, systems, researchers, software, learning, challenges, aspects, studies, systematically, review, literature, systematic, development, ideally, coded, foreseeing, materialized, particularities"
397,"A metamorphic testing approach for supporting program repair without the need for a test oracle,","2017,","Abstract: Test suite based automated program repair (APR) relies on a test oracle to determine the execution result of individual test cases. The applicability of APR techniques, therefore, is limited by the fact that test oracles may not exist. Metamorphic Testing (MT) is a testing approach that, rather than checking the correctness of individual test outputs, checks testing results through verification of relations among multiple test cases and their outputs: MT can therefore be applied without test oracles. This paper presents an integration of MT with APR that enables application of APR without the need for a test oracle. Two important issues for this integration which have been thoroughly investigated and addressed are: (1) feasibility — which is addressed by proposing a framework to support the integration, and then presenting MT-GenProg, a tool incorporating MT with the popular APR technique GenProg; and (2) effectiveness — which is confirmed through an empirical study of GenProg and MT-GenProg on 1,143 program versions from the IntroClass benchmark suite, demonstrating MT-GenProg’s comparable performance to GenProg, in terms of repair effectiveness. We conclude that the proposed integration is both practically feasible and effective, and thus successfully extends APR techniques to a broader application domain.
Keywords: Test suite based automated program repair; Test oracle; Metamorphic testing",ScienceDirect,"satisfactions, false, mt, sa, occurrence, conclusions, systems, effectiveness, adversely, affected, analysis, occur, sentiment, reveals, rates, 20, derived, affect, furthermore, inspire"
398,"Test case design for context-aware applications: Are we there yet?,","2017,","Abstract: Context
Current software systems have increasingly implemented context-aware adaptations to handle the diversity of conditions of their surrounding environment. Therefore, people are becoming used to a variety of context-aware software systems (CASS). This context-awareness brings challenges to the software construction and testing because the context is unpredictable and may change at any time. Therefore, software engineers need to consider the dynamic context changes while testing CASS. Different test case design techniques (TCDT) have been proposed to support the testing of CASS. However, to the best of our knowledge, there is no analysis of these proposals on the advantages, limitations and their effective support to context variation during testing.
Objective
To gather empirical evidence on TCDT concerned with CASS by identifying, evaluating and synthesizing knowledge available in the literature.
Method
To undertake a secondary study (quasi-Systematic Literature Review) on TCDT for CASS regarding their assessed quality characteristics, used coverage criteria, test type, and test technique.
Results
From 833 primary studies published between 2004 and 2014, just 17 studies regard the design of test cases for CASS. Most of them focus on functional suitability. Furthermore, some of them take into account the changes in the context by providing specific test cases for each context configuration (static perspective) during the test execution. These 17 studies revealed five challenges affecting the design of test cases and 20 challenges regarding the testing of CASS. Besides, seven TCDT are not empirically evaluated.
Conclusion
A few TCDT partially support the testing of CASS. However, it has not been observed evidence on any TCDT supporting the truly context-aware testing, which that can adapt the expected output based on the context variation (dynamic perspective) during the test execution. It is an open issue deserving greater attention from researchers to increase the testing coverage and ensure users confidence in CASS.
Keywords: Context aware application; Systematic review; Software testing",ScienceDirect,"metric, methodology, experiment, metamorphic, identifying, systematic, paradigms, hoc, viability, hindered, oracle, ad, confirming, testing, category, exists, choice, relations, examined, manner"
399,"Discovering boundary values of feature-based machine learning classifiers through exploratory datamorphic testing,","2022,","Abstract: Testing has been widely recognised as difficult for AI applications. This paper proposes a set of testing strategies for testing machine learning applications in the framework of the datamorphism testing methodology. In these strategies, testing aims at exploring the data space of a classification or clustering application to discover the boundaries between classes that the machine learning application defines. This enables the tester to understand precisely the behaviour and function of the software under test. In the paper, three variants of exploratory strategies are presented with the algorithms implemented in the automated datamorphic testing tool Morphy. The correctness of these algorithms are formally proved. Their capability and cost of discovering borders between classes are evaluated via a set of controlled experiments with manually designed subjects and a set of case studies with real machine learning models.
Keywords: Artificial intelligence; Software testing; Automation of software test; Datamorphic testing; Exploratory testing; Test strategies",ScienceDirect,"examines, augmented, classifiers, classification, classifier, image, sut, test, software, performance, problem, machine, mt, anova, wallis, kruskal, variances, dunnett, forests, artcode"
400,"A software engineering perspective on engineering machine learning systems: State of the art and challenges,","2021,","Abstract: Context:
Advancements in machine learning (ML) lead to a shift from the traditional view of software development, where algorithms are hard-coded by humans, to ML systems materialized through learning from data. Therefore, we need to revisit our ways of developing software systems and consider the particularities required by these new types of systems.
Objective:
The purpose of this study is to systematically identify, analyze, summarize, and synthesize the current state of software engineering (SE) research for engineering ML systems.
Method:
I performed a systematic literature review (SLR). I systematically selected a pool of 141 studies from SE venues and then conducted a quantitative and qualitative analysis using the data extracted from these studies.
Results:
The non-deterministic nature of ML systems complicates all SE aspects of engineering ML systems. Despite increasing interest from 2018 onwards, the results reveal that none of the SE aspects have a mature set of tools and techniques. Testing is by far the most popular area among researchers. Even for testing ML systems, engineers have only some tool prototypes and solution proposals with weak experimental proof. Many of the challenges of ML systems engineering were identified through surveys and interviews. Researchers should conduct experiments and case studies, ideally in industrial environments, to further understand these challenges and propose solutions.
Conclusion:
The results may benefit (1) practitioners in foreseeing the challenges of ML systems engineering; (2) researchers and academicians in identifying potential research questions; and (3) educators in designing or updating SE courses to cover ML systems engineering.
Keywords: Software engineering; Software development; Software process; Machine learning; Deep learning; Systematic literature review",ScienceDirect,"art, swfc, fscs, failure, dimensional, random, navigable, quadratic, input, causing, sampling, hierarchical, small, candidate, graphs, domains, adaptive, world, high, computational"
401,"On the effectiveness of testing sentiment analysis systems with metamorphic testing,","2022,","Abstract: Context:
Metamorphic testing (MT) has been successfully applied to a wide scope of software systems. In these applications, the testing results of MT form the basis for drawing conclusions about the target system’s performance. Therefore, the effectiveness of MT is crucial to the trustfulness of the derived conclusions.
Objective:
However, due to the nature of MT, its effectiveness can be affected by various factors. Despite of MT’s success, it is still important to study its effectiveness under different application contexts.
Method:
To investigate the effectiveness of MT, we focus on an important aspect, namely, false satisfactions (which are satisfactions of metamorphic relations that involve at least one failing execution), and revisit the application of MT to sentiment analysis (SA) systems. An in-depth analysis of the essence of false satisfactions reveals the situations where they would occur, and how they would affect the effectiveness of MT. Furthermore, 20 metamorphic relations (MRs) are identified for supporting a user-oriented evaluation of SA systems.
Results:
The occurrence rates of false satisfactions are reported with respect to four SA systems. For the majority of MRs, false satisfactions account for about 20% to 50% of all MR satisfactions, suggesting that false satisfactions occur quite frequently in the evaluation of SA systems. It is also demonstrated that such high occurrence rates of false satisfactions adversely affect the users’ selection of SA systems.
Conclusion:
Our analysis reveals that without considering the occurrence of false satisfactions, MT may overestimate the system’s conformance to the relevant MR. Furthermore, our experiments empirically show that conclusions derived from MT can be adversely affected when there are many false satisfactions. Our findings will help the MT community to adopt a more fair and reliable way of using the test outcomes of MT, and can also inspire the development of solid foundations for MT.
Keywords: Metamorphic testing; Metamorphic relation; Sentiment analysis; False satisfaction",ScienceDirect,"bias, gender, transformers, transformer, survey, models, metrics, comprehensive, language, critically, ramifications, shedding, equity, pressing, flawed, standardization, fostering, dearth, delves, heightened"
402,"METRIC: METamorphic Relation Identification based on the Category-choice framework,","2016,","Abstract: Metamorphic testing is a promising technique for testing software systems when the oracle problem exists, and has been successfully applied to various application domains and paradigms. An important and essential task in metamorphic testing is the identification of metamorphic relations, which, due to the absence of a systematic and specification-based methodology, has often been done in an ad hoc manner—something which has hindered the applicability and effectiveness of metamorphic testing. To address this, a systematic methodology for identifying metamorphic relations based on the category-choice framework, called metric, is introduced in this paper. A tool implementing this methodology has been developed and examined in an experiment to determine the viability and effectiveness of metric, with the results of the experiment confirming that metric is both effective and efficient at identifying metamorphic relations.
Keywords: Metamorphic testing; Test oracle; Oracle problem",ScienceDirect,"apr, tools, components, techniques, accumulation, knowledge, repair, framework, component, aprsuite, patch, suite, evaluation, current, principled, identified, comparison, research, common, automatic"
403,"Using metamorphic relations to verify and enhance Artcode classification,","2021,","Abstract: Software testing is often hindered where it is impossible or impractical to determine the correctness of the behaviour or output of the software under test (SUT), a situation known as the oracle problem. An example of an area facing the oracle problem is automatic image classification, using machine learning to classify an input image as one of a set of predefined classes. An approach to software testing that alleviates the oracle problem is metamorphic testing (MT). While traditional software testing examines the correctness of individual test cases, MT instead examines the relations amongst multiple executions of test cases and their outputs. These relations are called metamorphic relations (MRs): if an MR is found to be violated, then a fault must exist in the SUT. This paper examines the problem of classifying images containing visually hidden markers called Artcodes, and applies MT to verify and enhance the trained classifiers. This paper further examines two MRs, Separation and Occlusion, and reports on their capability in verifying the image classification using one-way analysis of variance (ANOVA) in conjunction with three other statistical analysis methods: t-test (for unequal variances), Kruskal–Wallis test, and Dunnett’s test. In addition to our previously-studied classifier, that used Random Forests, we introduce a new classifier that uses a support vector machine, and present its MR-augmented version. Experimental evaluations across a number of performance metrics show that the augmented classifiers can achieve better performance than non-augmented classifiers. This paper also analyses how the enhanced performance is obtained.
Keywords: Metamorphic testing; Metamorphic relation; Classification; Software verification; Machine learning; Artcode",ScienceDirect,"linear, mrs, mr, algorithms, classification, stability, past, trained, systems, quality, focus, learning, algorithm, known, way, fallen, decides, pd, overlooking, suffering"
404,"SWFC-ART: A cost-effective approach for Fixed-Size-Candidate-Set Adaptive Random Testing through small world graphs,","2021,","Abstract: Adaptive random testing (ART) improves the failure-detection effectiveness of random testing by leveraging properties of the clustering of failure-causing inputs of most faulty programs: ART uses a sampling mechanism that evenly spreads test cases within a software’s input domain. The widely-used Fixed-Sized-Candidate-Set ART (FSCS-ART) sampling strategy faces a quadratic time cost, which worsens as the dimensionality of the software input domain increases. In this paper, we propose an approach based on small world graphs that can enhance the computational efficiency of FSCS-ART: SWFC-ART. To efficiently perform nearest neighbor queries for candidate test cases, SWFC-ART incrementally constructs a hierarchical navigable small world graph for previously executed, non-failure-causing test cases. Moreover, SWFC-ART has shown consistency in programs with high dimensional input domains. Our simulation and empirical studies show that SWFC-ART reduces the computational overhead of FSCS-ART from quadratic to log-linear order while maintaining the failure-detection effectiveness of FSCS-ART, and remaining consistent in high dimensional input domains. We recommend using SWFC-ART in practical software testing scenarios, where real-life programs often have high dimensional input domains and low failure rates.
Keywords: Software testing; Random testing; Adaptive random testing; Efficiency; Hierarchical Navigable Small World Graphs",ScienceDirect,"uav, outage, interference, network, model, sinr, u2u, node, channel, probabilities, swarm, probability, aerial, unmanned, deterministic, effects, derived, multi, performance, channels"
405,"Gender bias in transformers: A comprehensive review of detection and mitigation strategies,","2024,","Abstract: Gender bias in artificial intelligence (AI) has emerged as a pressing concern with profound implications for individuals’ lives. This paper presents a comprehensive survey that explores gender bias in Transformer models from a linguistic perspective. While the existence of gender bias in language models has been acknowledged in previous studies, there remains a lack of consensus on how to measure and evaluate this bias effectively. Our survey critically examines the existing literature on gender bias in Transformers, shedding light on the diverse methodologies and metrics employed to assess bias. Several limitations in current approaches to measuring gender bias in Transformers are identified, encompassing the utilization of incomplete or flawed metrics, inadequate dataset sizes, and a dearth of standardization in evaluation methods. Furthermore, our survey delves into the potential ramifications of gender bias in Transformers for downstream applications, including dialogue systems and machine translation. We underscore the importance of fostering equity and fairness in these systems by emphasizing the need for heightened awareness and accountability in developing and deploying language technologies. This paper serves as a comprehensive overview of gender bias in Transformer models, providing novel insights and offering valuable directions for future research in this critical domain.
Keywords: Gender bias; Transformer models; Bias mitigation; Binary gender assumption; Self-attention",ScienceDirect,"text, stability, localization, segments, learning, stable, systems, techniques, evaluate, flourish, promotes, diagnose, experimentation, metamorphic, raises, preserved, evaluation, positions, causes, inputs"
406,"APRSuite: A suite of components and use cases based on categorical decomposition of automatic program repair techniques and tools,","2020,","Abstract: During the last decade, we are witnessing the advent of a proliferation of techniques and associated tools for automatic program repair (APR). The current techniques and tools provide rich sources of knowledge that should be taken into consideration for future research. An overview of the current APR techniques and tools can serve the research community as a knowledge accumulator. However, APR techniques and tools differ in many aspects making knowledge accumulation challenging. To overcome this challenge, in this paper, we propose to leverage common components that constitute the APR techniques and tools. To achieve this objective, we surveyed current APR techniques and tools to identify the APR Suite of common constituent components, namely as APRSuite. Repair source and defect class are examples of identified components. We grouped these components into several categories such as patch evaluation and target defects. We have also identified some of the possible use cases per component as well as different lessons learned in studies for each component and for each use case. In addition, we developed a principled way for application of the components. The APRSuite and the principled way to apply it comprise a framework for knowledge accumulation, evaluation, and comparison of APR techniques and tools. The novelty of our work lies in its original viewpoint to the process of literature review in the APR research field. To demonstrate the applicability of the framework, we mapped out several concrete APR techniques, as a first instantiation of the framework. We observed that the framework brings discipline into the evaluation and/or comparison of APR techniques and tools. The framework offers these benefits objectively and systematically. We concluded that knowledge accumulation and characterization through literature reviews can be therefore facilitated through the identified suite of components while at the same time the existing component suite can be modified, augmented, or improved.
Keywords: Debugging; Fault detection and localization; Automatic program repair; Patch; Evaluation",ScienceDirect,"recommender, reliability, systems, libraries, metamorphic, solution, designed, users, conducted, rankings, choices, prea, yielding, surprise, recommendations, overwhelming, overlooked, librec, test, acceptance"
407,"Towards effective metamorphic testing by algorithm stability for linear classification programs,","2021,","Abstract: The quality assurance for machine learning systems is becoming increasingly critical nowadays. While many efforts have been paid on trained models from such systems, we focus on the quality of these systems themselves, as the latter essentially decides the quality of numerous models thus trained. In this article, we focus particularly on detecting bugs in implementing one class of model-training systems, namely, linear classification algorithms, which are known to be challenging due to the lack of test oracle. Existing work has attempted to use metamorphic testing to alleviate the oracle problem, but fallen short on overlooking the statistical nature of such learning algorithms, leading to premature metamorphic relations (MRs) suffering efficacy and necessity issues. To address this problem, we first derive MRs from a fundamental property of linear classification algorithms, i.e., algorithm stability, with the soundness guarantee. We then formulate such MRs in a way that is rare in usage but could be more effective according to our field study and analysis, i.e., Past-execution Dependent MR (PD-MR), as contrast to the traditional way, i.e., Past-execution Independent MR (PI-MR), which has been extensively studied. We experimentally evaluated our new MRs upon nine well-known linear classification algorithms. The results reported that the new MRs detected 37.6–329.2% more bugs than existing benchmark MRs.
Keywords: Metamorphic testing; Metamorphic relation; Machine learning program; Linear classifier; Algorithm stability",ScienceDirect,"big, alf, data, development, ide, metamodels, plug, mde, eclipse, approach, engineering, proposed, visual, process, framework, software, practical, model, driven, mapreduce"
408,"General Outage Probability Model for UAV-to-UAV links in Multi-UAV Networks,","2023,","Abstract: Unmanned Aerial Vehicles (UAVs) swarms have become increasingly ubiquitous in the civilian domains due to their maneuverability and scalability in collaborative flying missions. However, there is a lack of characterization of wireless communication performance in multi-UAV system without being constrained by the node spatial distributions. In this paper, the performance of a UAV swarm network is analyzed by characterizing the effects of the UAV-to-UAV (U2U) interference in terms of the Signal-to-Interference-plus-Noise Ratio (SINR). To this end, a closed-form analytical model for the Cumulative Distribution Function (CDF) of the SINR is derived by considering both deterministic and stochastic channel processes, as well as deterministic UAV mobilities. The derived model can be used to analyze U2U interference in a UAV swarm network for any arbitrary node locations. Using this model, the effects of the network parameters on various network Key Performance Indicators (KPIs) such as the outage probabilities and channel capacity rate are studied. The model is extended to incorporate hybrid LoS channels, and the general model is used to evaluate the temporal evolutions of network outage probability given the UAV trajectories. With this, the main advantage of the model in analyzing the baseline outage probabilities of multi-UAV deployments is showcased.
Keywords: Unmanned Aerial Vehicle; Interference Modeling; Outage Probability; UAV-to-UAV Communications",ScienceDirect,"circuit, variability, chip, defective, accelerate, spice, circuits, fa, induced, bridge, material, defect, component, process, defects, scale, failure, random, simulation, semiconductors"
409,"Stability evaluation for text localization systems via metamorphic testing,","2021,","Abstract: The success of learning techniques in solving a variety of hard AI problems promotes the flourish of recognition-based applications. Many state-of-the-art text localization systems, which can detect and report the positions of text segments in an image, are mainly implemented with learning-based techniques. Data-driven learning raises a series of questions on how to verify, validate and evaluate such learning-based systems. In this paper, we propose a methodology to automatically evaluate the stability of text localization systems via metamorphic relations, where a stable system should output consistent results for similar inputs with the same text segments. We introduce six metamorphic relations that should be preserved in a stable text localization system and define the corresponding metrics for stability evaluation. With the defined metamorphic relations, we apply metamorphic testing techniques to compare the inputs and outputs to evaluate system stability, and further diagnose the causes of inconsistency. The extensive experimentation on both academic and commercial text localization systems demonstrates the effectiveness of our method on stability evaluation for such systems.
Keywords: Learning techniques; Text localization; Stability; Metamorphic testing",ScienceDirect,"planning, path, injected, unmanned, aerial, software, version, vehicle, proposed, stronger, determination, officially, dealt, faults, grid, problem, metamorphic, correctness, hindered, evaluation"
410,"An empirical study on metamorphic testing for recommender systems,","2024,","Abstract: Context:
Recommender systems are widely used in various fields because they can provide decision-making guidance to users facing an overwhelming set of choices. In previous studies, the accuracy of recommendations has been the focus and has significantly improved. However, the quality issues of these systems have been overlooked. In practical applications, the reliability of recommender systems plays an important role in their acceptance by users.
Objective:
This paper aims to develop a solution for performing metamorphic testing on recommender systems, and then to evaluate their reliability based on the test results.
Methods:
A metamorphic testing framework for recommender systems is first proposed to effectively alleviate the difficulty of the test oracle (i.e., the construction of the expected output of a program). Meanwhile, a set of specific metamorphic relations for recommender systems is also designed, and an empirical analysis is conducted using three open-source recommender libraries: LibRec, PREA, and Surprise.
Results:
The effectiveness of the proposed metamorphic testing solution is confirmed through the experiments, and the comparison analysis of the designed metamorphic relations and the three recommender libraries is also conducted, yielding the rankings of both the metamorphic relations and the program libraries, respectively.
Conclusion:
The study suggests that metamorphic testing is effective in automatically revealing the reliability problems in recommender systems, without requiring test oracles.
Keywords: Recommender system; Reliability; Metamorphic testing; Metamorphic relation; Test oracle problem",ScienceDirect,"tcn, bitcn_drsn, bidirectional, network, tcns, residual, vulnerability, vulnerabilities, detection, shrinkage, drsn, model, code, deep, features, learning, source, noise, structure, security"
411,"Developing software systems to Big Data platform based on MapReduce model: An approach based on Model Driven Engineering,","2017,","Abstract: Context: The need to analyze a large volume and variety of data for the purpose of extracting information has been promoting investments in Big Data, e.g., for storage, analysis and, more recently, methodologies and approaches for software system development for Big Data platforms. The application of software engineering for Big Data is recent and emerging, so in the literature we find a number of challenges and opportunities related to Big Data, but few practical approaches.
Objective
In this paper, we propose a practical approach based on MDE (Model Driven Engineering) to support the semi-automated development of software systems for Big Data platform that use MapReduce model.
Method
The proposed approach consists of framework, process, metamodels, visual Alf, transformation definitions written in ATL and Eclipse IDE plug-in. The proposed framework uses concepts of MDE, Weaving and software development based on Y. Our proposed process guides the use of our approach. A graphical notation and extended metamodel for Alf (i.e. visual Alf) assign executable behavior for UML or DSLs. An Eclipse IDE plug-in implements our approach.
Results
We show the applicability of the proposed approach through an illustrative example.
Conclusion
Our approach brings a contribution because the development of software systems is assisted by models which preserves the business logic and adds Big Data features throughout the development process.
Keywords: Model Driven Engineering; Big Data; Framework; Metamodels",ScienceDirect,"prioritization, coverage, cccp, rtcp, code, combinations, combination, criterion, techniques, strength, fault, rates, additional, regression, detection, test, lowest, isolation, individually, units"
412,"Efficient machine learning-assisted failure analysis method for circuit-level defect prediction,","2024,","Abstract: Integral to the success of transistor advancements is the accurate use of failure analysis (FA) which benefits in fine-tuning and optimization of the fabrication processes. However, the chip makers face several FA challenges as device sizes, structure, and material complexities scale dramatically. To sustain manufacturability, one can accelerate defect identification at all steps of the chip processing and design. On the other hand, as technologies scale below the nanometer nodes, devices are more sensitive to unavoidable process-induced variability. Therefore, metallic defects and process-induced variability need to be treated concurrently in the context of chip scaling, while failure diagnostic methods to decouple the effects should be developed. Indeed, the locating a defective component from thousands of circuits in a microchip in the presence of variability is a tedious task. This work shows how the SPICE circuit simulations coupled with machine learning based-physical modeling should be effectively used to tackle such a problem for a 6T-SRAM bit cell. An automatic bridge defect recognition system for such a circuit is devised by training a predictive model on simulation data. For feature descriptors of the model, the symmetry of the circuit and a fundamental material property are leveraged: metals (semiconductors) have a positive (negative) temperature coefficient of resistance up to a certain voltage range. Then, this work successfully demonstrates that how a defective circuit is identified along with its defective component's position with approximately 99.5 % accuracy. This proposed solution should greatly help to accelerate the production process of the integrated circuits.
Keywords: Static random-access memory; SPICE simulation; Bridge defects; Variability; Random forest; t-distributed stochastic neighbor embedding",ScienceDirect,"football, sports, segmentation, analytics, semantic, advanced, research, bolster, adeptly, granular, prospective, 100k, avenues, fortify, iaufd, substantially, tracking, incorporation, remarks, holistic"
413,"Application of metamorphic testing on UAV path planning software,","2023,","Abstract: Both the performance and reliability evaluation processes of the unmanned aerial vehicle path planning software rely on the determination of the correctness of the execution results of unmanned aerial vehicle path planning software. However, this task is hindered due to the testing oracle problem. In this paper, a framework is designed to overcome the oracle problem and verify the correctness of path planning software based on the grid searching algorithms. In this framework, a metamorphic testing-based method is proposed, and three operations-based metamorphic relations are proposed and proved towards the target software. While analysis of the software is conducted, the version with manually injected faults as well as the officially released version are both dealt with. It is shown that in the experimental results the injected faults can be effectively revealed by using the methods proposed in this paper. Besides, through the evaluation of different types of metamorphic relations, we find that the composed metamorphic relations have stronger fault detection capability compared to the individual ones.
Keywords: Software test; Path planning; Oracle problem; Metamorphic testing",ScienceDirect,"cloud, energy, consumption, ea4cloud, evolutionary, energetic, optimise, optimising, algorithms, aware, appropriate, efficiently, check, metamorphic, systems, checking, simulation, mt, reflected, unpractical"
414,"BiTCN_DRSN: An effective software vulnerability detection model based on an improved temporal convolutional network,","2023,","Abstract: The detection of software vulnerabilities is a challenging task in the field of security. With the increasing scale of software and the rapid development of artificial intelligence technology, deep learning has been extensively applied to automatic vulnerability detection. Temporal Convolutional Networks (TCNs) have been shown to perform well in tasks that can be processed in parallel; they can adaptively learn complex structures (including in-time series data); and they have exhibited stable gradients — they are relatively easier to train, and can quickly converge to an optimal solution. However, TCNs cannot simultaneously capture the bidirectional semantics of the source code, since they do not have a bidirectional network structure. Furthermore, because of the weak noise resistance of residual TCN connections, TCNs are also susceptible to learning features that are not related to vulnerabilities when learning the source code features. To overcome the limitations of the traditional TCN, we propose a bidirectional TCN model based on the Deep Residual Shrinkage Network (DRSN), namely BiTCN_DRSN. BiTCN_DRSN combines TCN and DRSN to enhance the noise immunity and make the network model more attentive to the features associated with vulnerabilities. In addition, addressing the limitation that the TCN is a unidirectional network structure, the forward and backward sequences are utilized for bidirectional source-code feature learning. The experimental results show that the proposed BiTCN_DRSN model can effectively improve the accuracy of source-code vulnerability detection, compared with some existing neural-network models. Compared with the traditional TCN, our model increases the accuracy by 4.22%, 2.42% and 2.66% on the BE-ALL, RM-ALL and HY-ALL datasets, respectively. The proposed BiTCN_DRSN model also exhibits improved detection stability.
Keywords: Software security; Vulnerability detection; Deep learning; Deep residual shrinkage network",ScienceDirect,"context, cass, aware, software, literature, characterize, testing, rely, methods, systems, review, possible, systematic, information, taxonomies, fulfill, conveys, unlikely, mitigating, actors"
415,"Regression test case prioritization by code combinations coverage,","2020,","Abstract: Regression test case prioritization (RTCP) aims to improve the rate of fault detection by executing more important test cases as early as possible. Various RTCP techniques have been proposed based on different coverage criteria. Among them, a majority of techniques leverage code coverage information to guide the prioritization process, with code units being considered individually, and in isolation. In this paper, we propose a new coverage criterion, code combinations coverage, that combines the concepts of code coverage and combination coverage. We apply this coverage criterion to RTCP, as a new prioritization technique, code combinations coverage based prioritization (CCCP). We report on empirical studies conducted to compare the testing effectiveness and efficiency of CCCP with four popular RTCP techniques: total, additional, adaptive random, and search-based test prioritization. The experimental results show that even when the lowest combination strength is assigned, overall, the CCCP fault detection rates are greater than those of the other four prioritization techniques. The CCCP prioritization costs are also found to be comparable to the additional test prioritization technique. Moreover, our results also show that when the combination strength is increased, CCCP provides higher fault detection rates than the state-of-the-art, regardless of the levels of code coverage.
Keywords: Software testing; Regression testing; Test case prioritization; Code combinations coverage",ScienceDirect,"biomedical, spark, big, data, hadoop, methods, complete, architectures, architecture, images, image, frameworks, optimal, medical, analytics, conclusions, technologies, management, allows, efficient"
416,"Optimizing Semantic Segmentation for Enhanced Football Analytics: A Pixel-level Approach,","2024,","Abstract: Semantic Segmentation, a pivotal technique in image analysis, is adeptly leveraged in this research to bolster sports analytics, with a concentrated focus on football. A comprehensive pipeline is unveiled for an in-depth analysis of a select portion of the IAUFD 100k dataset, encompassing 2030 manually annotated football images. The methodology entails a thorough evaluation and comparison of diverse semantic segmentation models, supplemented by the integration of advanced pre-processing strategies and optimal training techniques. Such a holistic approach culminates in a marked enhancement in model performance, as evidenced by a significant uptick in the mean Intersection over Union (mIoU). This research offers granular, object-oriented insights that substantially augment player tracking, action recognition, and event detection in football. The conclusive remarks of the study highlight prospective avenues for further research, emphasizing the potential incorporation of Explainable AI and advanced Metamorphic and Security Testing to fortify sports analytics.
Keywords: Semantic Segmentation; Sports Analytics; Football; Computer Vision; Deep Learning; Convolutional Neural Networks",ScienceDirect,"energy, consumption, systems, computational, science, environments, cloud, check, efficient, simulation, hot, large, losing, correctness, hpc, clusters, dedicated, simulate, distributed, formal"
417,"MT-EA4Cloud: A Methodology For testing and optimising energy-aware cloud systems,","2020,","Abstract: Currently, using conventional techniques for checking and optimising the energy consumption in cloud systems is unpractical, due to the massive computational resources required. An appropriate test suite focusing on the parts of the cloud to be tested must be efficiently synthesised and executed, while the correctness of the test results must be checked. Additionally, alternative cloud configurations that optimise the energetic consumption of the cloud must be generated and analysed accordingly, which is challenging. To solve these issues we present MT-EA4Cloud, a formal approach to check the correctness – from an energy-aware point of view – of cloud systems and optimise their energy consumption. To make the checking of energy consumption practical, MT-EA4Cloud combines metamorphic testing, evolutionary algorithms and simulation. Metamorphic testing allows to formally model the underlying cloud infrastructure in the form of metamorphic relations. We use metamorphic testing to alleviate both the reliable test set problem, generating appropriate test suites focused on the features reflected in the metamorphic relations, and the oracle problem, using the metamorphic relations to check the generated results automatically. MT-EA4Cloud uses evolutionary algorithms to efficiently guide the search for optimising the energetic consumption of cloud systems, which can be calculated using different cloud simulators.
Keywords: Cloud modelling; Metamorphic testing; Simulation; Evolutionary algorithms; Energy-aware systems",ScienceDirect,"dl, mutation, bss, subsets, boundary, models, operators, mutants, sets, test, cost, running, subset, smaller, labeling, higher, dataset, testing, datasets, 63"
418,"Characterizing testing methods for context-aware software systems: Results from a quasi-systematic literature review,","2017,","Abstract: Context-Aware Software Systems (CASS) use environmental information to provide better service to the systems’ actors to fulfill their goals. Testing of ubiquitous software systems can be challenging since it is unlikely that, while designing the test cases, the tester can identify all possible context variations. A quasi-Systematic Literature Review has been undertaken to characterize the methods usually used for testing CASS. The analysis and generation of knowledge in this work rely on classifying the extracted information. Established taxonomies of software testing and context-aware were used to characterize and interpret the findings. The results show that, although it is possible to observe the utilization of some software testing methods, few empirical studies are evaluating such methods when testing CASS. The selected technical literature conveys a lack of consensus on the understanding of context and CASS, and on the meaning of software testing. Furthermore, context variation in CASS has only been partially addressed by the identified approaches. They either rely on simulating context or in fixing the values of context variables during testing. We argue that the tests of context-aware software systems need to deal with the diversity of context instead of mitigating their effects.
Keywords: Context-aware; Software testing; Test case design; Systematic literature review",ScienceDirect,"remote, sensing, cnns, hsi, hsis, robustness, cnn, hyperspectral, gradient, dimensional, weaknesses, predictive, deep, classifiers, dl, inputs, transformations, failure, testing, assess"
419,"An optimal big data workflow for biomedical image analysis,","2018,","Abstract: Background and objective
In the medical field, data volume is increasingly growing, and traditional methods cannot manage it efficiently. In biomedical computation, the continuous challenges are: management, analysis, and storage of the biomedical data. Nowadays, big data technology plays a significant role in the management, organization, and analysis of data, using machine learning and artificial intelligence techniques. It also allows a quick access to data using the NoSQL database. Thus, big data technologies include new frameworks to process medical data in a manner similar to biomedical images. It becomes very important to develop methods and/or architectures based on big data technologies, for a complete processing of biomedical image data.
Method
This paper describes big data analytics for biomedical images, shows examples reported in the literature, briefly discusses new methods used in processing, and offers conclusions. We argue for adapting and extending related work methods in the field of big data software, using Hadoop and Spark frameworks. These provide an optimal and efficient architecture for biomedical image analysis. This paper thus gives a broad overview of big data analytics to automate biomedical image diagnosis. A workflow with optimal methods and algorithm for each step is proposed.
Results
Two architectures for image classification are suggested. We use the Hadoop framework to design the first, and the Spark framework for the second. The proposed Spark architecture allows us to develop appropriate and efficient methods to leverage a large number of images for classification, which can be customized with respect to each other.
Conclusions
The proposed architectures are more complete, easier, and are adaptable in all of the steps from conception. The obtained Spark architecture is the most complete, because it facilitates the implementation of algorithms with its embedded libraries.
Keywords: Biomedical images; Big data; Artificial intelligence; Machine learning; Hadoop/spark",ScienceDirect,"fuzzscene, driving, ads, autonomous, scenario, steering, description, semantic, experiment, behaviors, tasks, testing, strategy, safety, language, misbehaviors, rolling, surroundings, controllers, events"
420,"A Methodology for Designing Energy-aware Systems for Computational Science,","2015,","Abstract: Energy consumption is currently one of the main issues in large distributed systems. More specifically, the efficient management of energy without losing performance has become a hot topic in the field. Thus, the design of systems solving complex problems must take into account energy efficiency. In this paper we present a formal methodology to check the correctness, from an energy-aware point of view, of large systems, such as HPC clusters and cloud environments, dedicated to computational science. Our approach uses a simulation platform, to model and simulate computational science environments, and metamorphic testing, to check the correctness of energy consumption in these systems.
Keywords: Modeling and Simulation of energy efficient systems; Energy consumption; Cloud computing",ScienceDirect,"mt, environment, gotten, environments, domain, specific, simulation, building, model, construction, facilitate, effort, platform, cloud, driven, engineering, featuring, suited, replicating, reporting"
421,"Boundary sampling to boost mutation testing for deep learning models,","2021,","Abstract: Context: The prevalent application of Deep Learning (DL) models has raised concerns about their reliability. Due to the data-driven programming paradigm, the quality of test datasets is extremely important to gain accurate assessment of DL models. Recently, researchers have introduced mutation testing into DL testing, which applies mutation operators to generate mutants from DL models, and observes whether the test data can identify mutants to check the quality of test dataset. However, there still exist many factors (e.g., huge labeling efforts and high running cost) hindering the implementation of mutation testing for DL models. Objective: We desire for an approach to selecting a smaller, sensitive, representative and efficient subset of the whole test dataset to promote the current mutation testing (e.g., reduce labeling and running cost) for DL Models. Method: We propose boundary sample selection (BSS), which employs the distance of samples to decision boundary of DL models as the indicator to construct the appropriate subset. To evaluate the performance of BSS, we conduct an extensive empirical study with two widely-used datasets, three popular DL models, and 14 up-to-date DL mutation operators. Results : We observe that (1) The sizes of our subsets generated by BSS are much smaller (about 3%-20% of the whole test set). (2) Under most mutation operators, our subsets are superior (about 9.94-21.63) than the whole test sets in observing mutation effects. (3) Our subsets could replace the whole test sets to a very high degree (higher than 97%) when considering mutation score. (4) The MRR values of our proposed subsets are clearly better (about 2.28-13.19 times higher) than that of the whole test sets. Conclusions: The result shows that BSS can help testers save labelling cost, run mutation testing quickly and identify killed mutants early.
Keywords: Software testing; Deep learning; Mutation testing; Boundary; Neural network",ScienceDirect,"adas, simulation, platforms, platform, lane, driver, keeping, ad, geometric, assistance, testing, assist, issues, advanced, metamorphic, report, transformation, shows, carmaker, ordinary"
422,"Robustness assessment of hyperspectral image CNNs using metamorphic testing,","2023,","Abstract: Remote sensing has proven its utility in many critical domains, such as medicine, military, and ecology. Recently, we have been witnessing a surge in the adoption of deep learning (DL) techniques by the remote sensing community. DL-based classifiers, such as convolutional neural networks (CNNs), have been reported to achieve impressive predictive performances reaching 99% of accuracy when applied to hyperspectral images (HSIs), a high-dimensional type of remote sensing data. However, these deep learners are known to be highly sensitive to even slight perturbations of their high-dimensional raw inputs. In real-world contexts, concerns can be raised about how robust they really are against corner-case scenarios. When HSI classifiers are applied in safety–critical applications, ensuring an adequate level of robustness is crucial to prevent unexpected system behaviors. Yet, there are few studies dealing with their robustness, nor are RGB-testing methods able to cover the HSI-specific challenges. This led us to propose a systematic testing method to assess the robustness of the CNNs trained to classify HSIs. First, we elaborate domain-specific metamorphic transformations that simulate naturally-occurring distortions of remote sensing HSIs. Then, we leverage metaheuristic search algorithms to optimize the fitness of synthetically-distorted inputs to stress the weaknesses of the on-testing CNN, while remaining in compliance with domain expert requirements, in order to preserve the semantic of the generated inputs. Relying on our metamorphic testing method, we assess the robustness of established and novel CNNs for HSI classification, and demonstrate their failure, on average, in 25% of the produced test cases. Furthermore, we fine-tuned the tested CNNs on training data augmented with these failure-revealing metamorphic transformations. Results show that the fined-tuning successfully fixed at least 90% of the CNN weaknesses, with less than 1% of degradation in the original predictive performance, outperforming the common iterative gradient-based adversarial attack, namely, Projected Gradient Descent (PGD).
Keywords: Deep learning testing; Metamorphic testing; Software testing; Remote sensing; Hyperspectral image classification",ScienceDirect,"learning, machine, datasets, summarize, code, techniques, tasks, studies, source, analysis, engineering, tools, science, findings, current, open, software, identified, reproducibility, replicability"
423,"Semantic-guided fuzzing for virtual testing of autonomous driving systems,","2024,","Abstract: Autonomous driving systems (ADS) have achieved spectacular development and have been utilized in numerous safety-critical tasks. Nonetheless, in spite of their considerable advancement, ADS perception components with high complexity and low interpretability often demonstrate unexpected corner-case behaviors. Several real-world accidents involving self-driving cars even lead to fatalities. Before rolling the autonomous vehicles out to the end-users, it is vital to test and guarantee the safety of ADS. As one of the most critical autonomous driving testing techniques, the prevailing virtual testing depends on the tester using tool-specific languages to code traffic simulation programs correctly. However, this process often requires plenty of effort, and it may fail to capture various rare events from complex driving situations that require sophisticated awareness of the surroundings. In this paper, we design and implement a semantic-guided scene fuzzing framework for autonomous driving systems, namely FuzzScene, based on the metamorphic testing theory. It employs driving scenario description language for scenario representation and equips a tree-based mutation strategy to generate tests with proper oracle information. To improve the testing efficiency and detect misbehaviors under different settings, we propose a unique sampling strategy and construct a testing guidance criterion to optimize FuzzScene. We experiment FuzzScene with multiple steering controllers to evaluate its performance on different tasks. The experiment results show that the semantic transformed driving scenarios generated by FuzzScene efficiently detect hundreds of inconsistent behaviors of ADS. Also, the results confirm that FuzzScene can improve steering precision by retraining with the generated scenes.
Keywords: Software testing; Fuzz testing; Driving scenario description language; Autonomous driving system",ScienceDirect,"mining, erasable, pattern, data, incremental, window, damped, patterns, latest, structure, importance, efficient, real, useful, possible, algorithm, recent, identically, time, old"
424,"Automated engineering of domain-specific metamorphic testing environments,","2023,","Abstract: Context:
Testing is essential to improve the correctness of software systems. Metamorphic testing (MT) is an approach especially suited when the system under test lacks oracles, or they are expensive to compute. However, building an MT environment for a particular domain (e.g., cloud simulation, model transformation, machine learning) requires substantial effort.
Objective:
Our goal is to facilitate the construction of MT environments for specific domains.
Method:
We propose a model-driven engineering approach to automate the construction of MT environments. Starting from a meta-model capturing the domain concepts, and a description of the domain execution environment, our approach produces an MT environment featuring comprehensive support for the MT process. This includes the definition of domain-specific metamorphic relations, their evaluation, detailed reporting of the testing results, and the automated search-based generation of follow-up test cases.
Results:
Our method is supported by an extensible platform for Eclipse, called Gotten. We demonstrate its effectiveness by creating an MT environment for simulation-based testing of data centres and comparing with existing tools; its suitability to conduct MT processes by replicating previous experiments; and its generality by building another MT environment for video streaming APIs.
Conclusion:
Gotten is the first platform targeted at reducing the development effort of domain-specific MT environments. The environments created with Gotten facilitate the specification of metamorphic relations, their evaluation, and the generation of new test cases.
Keywords: Metamorphic testing; Model-driven engineering; Domain-specific languages; Cloud computing; Simulation",ScienceDirect,"phm, robustness, ai, phenomena, models, operating, learning, robust, optimisation, data, cope, errors, uncertainties, machine, model, health, deal, management, requirements, unknown"
425,"Metamorphic testing of Advanced Driver-Assistance System (ADAS) simulation platforms: Lane Keeping Assist System (LKAS) case studies,","2023,","Abstract: Context:
Simulation-based testing is essential when developing Advanced Driver-Assistance Systems (ADASs) and autonomous driving (AD) systems, producing fast, high-quality test results, at relatively low cost. Simulation testing relies on the quality of the ADAS simulation platform: If the simulation platform is faulty, then the simulation results may be incorrect, and hence useless. However, because of the lack of suitable test oracles — mechanisms to determine the correctness of the software output or behavior — it can be too difficult (or expensive) to verify or validate ADAS/AD simulation platforms, a situation known as the oracle problem.
Objective:
To alleviate the oracle problem and better understand ADAS simulation software.
Methods:
We develop geometric-transformation-based metamorphic testing approaches, and report on empirical studies conducted on the verification and validation (V&V) of three popular simulation platforms for ADAS development: Simulink, CarMaker and 51Sim-One Cloud. Our examination focused on the platforms’ Lane Keeping Assist Systems (LKASs).
Results:
When tested with ordinary (traditional) test cases, no issues were identified on any simulation platform. However, after applying geometric-transformation-based metamorphic testing, issues were revealed, some of which were later confirmed by the MATLAB and IPG Automotive teams. To the best of our knowledge, this paper is the first to report on real bugs and issues in ADAS simulation platforms.
Conclusion:
Our research shows the simplicity, effectiveness and applicability of the proposed approach for ADAS simulation testing. This paper also provides successful examples of incorporating metamorphic testing into the testing of ADAS standards and protocols, and shows how practitioners can design effective metamorphic relations (MRs) inspired by using the symmetry metamorphic relation pattern.
Keywords: Software testing; Metamorphic testing; Metamorphic exploration; Advanced Driver-Assistance System (ADAS); Lane Keeping Assist System (LKAS); Simulation platform",ScienceDirect,"embedded, review, area, systematic, types, mapping, papers, literature, software, benefitted, industry, pool, test, topics, automotive, overview, engineers, researchers, conducted, choosing"
426,"A survey on machine learning techniques applied to source code,","2024,","Abstract: The advancements in machine learning techniques have encouraged researchers to apply these techniques to a myriad of software engineering tasks that use source code analysis, such as testing and vulnerability detection. Such a large number of studies hinders the community from understanding the current research landscape. This paper aims to summarize the current knowledge in applied machine learning for source code analysis. We review studies belonging to twelve categories of software engineering tasks and corresponding machine learning techniques, tools, and datasets that have been applied to solve them. To do so, we conducted an extensive literature search and identified 494 studies. We summarize our observations and findings with the help of the identified studies. Our findings suggest that the use of machine learning techniques for source code analysis tasks is consistently increasing. We synthesize commonly used steps and the overall workflow for each task and summarize machine learning techniques employed. We identify a comprehensive list of available datasets and tools useable in this context. Finally, the paper discusses perceived challenges in this area, including the availability of standard datasets, reproducibility and replicability, and hardware resources. Editor’s note: Open Science material was validated by the Journal of Systems and Software Open Science Board.
Keywords: Machine learning for software engineering; Source code analysis; Deep learning; Datasets; Tools",ScienceDirect,"memo, oracles, equivalence, specifications, relations, expensive, automatically, natural, failures, test, metamorphic, language, effectively, specific, implicit, generated, narrow, procedures, maintain, complements"
427,"Advanced incremental erasable pattern mining from the time-sensitive data stream,","2024,","Abstract: Pattern mining has been actively advanced and studied in order to process data that is generated in real time, called incremental data. Erasable pattern mining is a concept that extracts erasable patterns as one of the fields belonging to pattern mining. Erasable patterns have useful information in terms of removal, unlike patterns found by other pattern mining methods. The former erasable pattern mining methods, which target incremental data, regard the importance of data identically. However, in real life, recent data are more important and useful than old data, so erasable pattern mining should also process the latest data more significantly in consideration of the feature of real-world data. For this reason, we propose an erasable pattern mining algorithm using an efficient data structure from the time-sensitive data stream. Since the suggested technique performs erasable pattern mining based on a damped window model, it is possible to relatively prioritize the importance of the recent data over the previous data. In addition, it is possible to quickly reflect and efficiently analyze the newly added incremental data due to a list based data structure of the proposed technique. The results of the various performance tests, which are conducted to compare our algorithm with state-of-the-art algorithms, are analyzed, and the analyses indicate that our approach is more efficient than the other latest approaches.
Keywords: Data mining; Erasable pattern mining; Incremental database; Pattern pruning; Damped window",ScienceDirect,"localisation, labelling, formulas, robustness, risk, fault, perturbations, faulty, techniques, perturbation, impacts, robust, evaluation, theoretically, erroneously, sbfl, 3079, mislabelling, accuracy, faults"
428,"Robustness of AI-based prognostic and systems health management,","2021,","Abstract: Prognostic and systems Health Management (PHM) is an integral part of a system. It is used for solving reliability problems that often manifest due to complexities in design, manufacturing, operating environment and system maintenance. For safety-critical applications, using a model-based development process for complex systems might not always be ideal but it is equally important to establish the robustness of the solution. The information revolution has allowed data-driven methods to diffuse within this field to construct the requisite process (or system models) to cope with the so-called big data phenomenon. This is supported by large datasets that help machine-learning models achieve impressive accuracy. AI technologies are now being integrated into many PHM related applications including aerospace, automotive, medical robots and even autonomous weapon systems. However, with such rapid growth in complexity and connectivity, a systems’ behaviour is influenced in unforeseen ways by cyberattacks, human errors, working with incorrect or incomplete models and even adversarial phenomena. Many of these models depend on the training data and how well the data represents the test data. These issues require fine-tuning and even retraining the models when there is even a small change in operating conditions or equipment. Yet, there is still ambiguity associated with their implementation, even if the learning algorithms classify accordingly. Uncertainties can lie in any part of the AI-based PHM model, including in the requirements, assumptions, or even in the data used for training and validation. These factors lead to sub-optimal solutions with an open interpretation as to why the requirements have not been met. This warrants the need for achieving a level of robustness in the implemented PHM, which is a challenging task in a machine learning solution. This article aims to present a framework for testing the robustness of AI-based PHM. It reviews some key milestones achieved in the AI research community to deal with three particular issues relevant for AI-based PHM in safety-critical applications: robustness to model errors, robustness to unknown phenomena and empirical evaluation of robustness during deployment. To deal with model errors, many techniques from probabilistic inference and robust optimisation are often used to provide some robustness guarantee metric. In the case of unknown phenomena, techniques include anomaly detection methods, using causal models, the construction of ensembles and reinforcement learning. It elicits from the authors’ work on fault diagnostics and robust optimisation via machine learning techniques to offer guidelines to the PHM research community. Finally, challenges and future directions are also examined; on how to better cope with any uncertainties as they appear during the operating life of an asset.
Keywords: Prognostics and system health management; Robust AI; Machine learning; PHM; Fault diagnosis",ScienceDirect,"class, integration, order, generation, test, systems, mrs, approaches, optimum, mt, implemented, proposed, validate, detected, modifying, equal, orders, faults, stubbing, generated"
429,"Testing embedded software: A survey of the literature,","2018,","Abstract: Context
Embedded systems have overwhelming penetration around the world. Innovations are increasingly triggered by software embedded in automotive, transportation, medical-equipment, communication, energy, and many other types of systems. To test embedded software in an effective and efficient manner, a large number of test techniques, approaches, tools and frameworks have been proposed by both practitioners and researchers in the last several decades.
Objective
However, reviewing and getting an overview of the entire state-of-the-art and the –practice in this area is challenging for a practitioner or a (new) researcher. Also unfortunately, as a result, we often see that many companies reinvent the wheel (by designing a test approach new to them, but existing in the domain) due to not having an adequate overview of what already exists in this area.
Method
To address the above need, we conducted and report in this paper a systematic literature review (SLR) in the form of a systematic literature mapping (SLM) in this area. After compiling an initial pool of 588 papers, a systematic voting about inclusion/exclusion of the papers was conducted among the authors, and our final pool included 312 technical papers.
Results
Among the various aspects that we aim at covering, our review covers the types of testing topics studied, types of testing activity, types of test artifacts generated (e.g., test inputs or test code), and the types of industries in which studies have focused on, e.g., automotive and home appliances. Furthermore, we assess the benefits of this review by asking several active test engineers in the Turkish embedded software industry to review its findings and provide feedbacks as to how this review has benefitted them.
Conclusion
The results of this review paper have already benefitted several of our industry partners in choosing the right test techniques / approaches for their embedded software testing challenges. We believe that it will also be useful for the large world-wide community of software engineers and testers in the embedded software industry, by serving as an “index” to the vast body of knowledge in this important area. Our results will also benefit researchers in observing the latest trends in this area and for identifying the topics which need further investigations.
Keywords: Software testing; Embedded systems; Embedded software; Systematic mapping; Systematic literature mapping; Systematic literature review",ScienceDirect,"compound, chemical, infrared, ftir, substructures, bonds, spectroscopy, fourier, substructure, 00, spectrum, neural, transform, presence, various, predict, networks, training, network, wavelengths"
430,"MeMo: Automatically identifying metamorphic relations in Javadoc comments for test automation,","2021,","Abstract: Software testing depends on effective oracles. Implicit oracles, such as checks for program crashes, are widely applicable but narrow in scope. Oracles based on formal specifications can reveal application-specific failures, but specifications are expensive to obtain and maintain. Metamorphic oracles are somewhere in-between. They test equivalence among different procedures to detect semantic failures. Until now, the identification of metamorphic relations has been a manual and expensive process, except for few specific domains where automation is possible. We present MeMo, a technique and a tool to automatically derive metamorphic equivalence relations from natural language documentation, and we use such metamorphic relations as oracles in automatically generated test cases. Our experimental evaluation demonstrates that 1) MeMo can effectively and precisely infer equivalence metamorphic relations, 2) MeMo complements existing state-of-the-art techniques that are based on dynamic program analysis, and 3) metamorphic relations discovered with MeMo effectively detect defects when used as test oracles in automatically-generated or manually-written test cases.
Keywords: Software testing; Test oracle generation; Natural language processing",ScienceDirect,"tr, fuzz, fuzzing, compilers, compiler, pass, programs, bugs, rate, generation, coverage, software, gcc, resultant, benefiting, facilitating, head, shortcomings, establishes, tools"
431,"Robustness of spectrum-based fault localisation in environments with labelling perturbations,","2019,","Abstract: Most fault localisation techniques take as inputs a faulty program and a test suite, and produce as output a ranked list of suspicious code locations at which the program may be defective. If only a small portion of the executions are labelled erroneously, we expect a fault localisation technique to be robust to these errors. However, it is not known which fault localisation techniques with high accuracy are robust and which techniques are best at finding faults under the trade-off between accuracy and robustness. In this paper, a theoretical analysis of the impacts of labelling perturbations on spectrum-based fault localisation techniques (SBFL) is presented from different aspects first. We theoretically analyse the influence of labelling perturbations on three relations among risk evaluation formulas and the effect of mislabelling cases on the ranking of faulty statements. Then, we conduct controlled experiments on 18 programs with 3079 faulty versions from different domains to compare the robustness of 23 classes of risk evaluation formulas. Besides, experiments are conducted for evaluating the robustness of two neural network-based techniques. The impacts of perturbation degrees, number of faults and types of labelling perturbation on the robustness of formulas are empirically studied, and several interesting findings are obtained.
Keywords: Software fault localisation; Robustness; Risk evaluation formulas; Labelling perturbations",ScienceDirect,"basalt, stone, brita, island, coating, aggregate, regional, eco, lavada, madeira, justify, local, material, density, strength, stones, mortar, durability, attained, quarry"
432,"Validating class integration test order generation systems with Metamorphic Testing,","2021,","Abstract: Context:
Previous studies proposed different kinds of approaches for class integration test order generation, and corresponding systems can be implemented based on these approaches. Such class integration test order generation systems can facilitate the process of software integration testing if they are implemented correctly.
Objective:
However, a test oracle problem exists in the class integration test order generation systems. Since these approaches for class integration test order generation normally deliver a local optimum rather than a global optimum, there are no practically feasible ways to validate their generated class integration test orders, that is, these implementation systems are untestable.
Method:
To address the test oracle problem, we apply Metamorphic Testing (MT) to validate class integration test order generation systems. Metamorphic Relations (MRs), which are the key components of MT, reason about relations between test outputs of a system. Five effective MRs are developed to ensure the quality of the class integration test order generation systems. In these proposed MRs, follow-up test inputs are generated by modifying classes or class dependencies in the source test inputs while some characteristics of the source test outputs are preserved, for example, the same class integration test order or the equal stubbing cost. Faults can be detected in systems if an individual MR is violated for certain tests.
Results:
Failure detection of MT has been successfully demonstrated in empirical experiments on three systems implementing different typical class integration test order generation approaches. More than 84% of faulty programs can be detected by all MRs, for three class integration test order generation systems under investigation.
Conclusion:
The experimental results show that the proposed MRs are able to systematically and effectively detect faults in class integration test order generation systems. This study explores a new application domain in MT and further extends its applications in Software Engineering.
Keywords: Integration testing; Class integration test order generation; Metamorphic Testing; Metamorphic Relations",ScienceDirect,
433,"Verification of the neural network training process for spectrum-based chemical substructure prediction using metamorphic testing,","2021,","Abstract: Fourier-transform infrared spectroscopy (FTIR) is one of the commonly used techniques in chemical analysis. The chemical bonds that are present in samples absorb infrared light at various wavelengths based on the properties of chemical bonds between sets of atoms bonded together. By extracting these absorbance patterns, we aim to predict the presence or absence of various substructures within a compound based on its FTIR spectrum. Hypothetically, a powerful machine learning method with enough examples of a substructure should be able to identify the structure of an unknown compound by analyzing its FTIR spectrum. To this extent we developed a novel system that trains neural networks to predict the presence of various substructures within a compound. We then propose to apply metamorphic testing to verify the network training process. Experimental results exhibit that metamorphic testing helps to develop a more effective training process for classifier neural networks.
Keywords: Compound; Substructure; Fourier-transform infrared spectroscopy; Convolutional neural network; Metamorphic testing; Test oracle; MSC: 00-01,99-00",ScienceDirect,
434,"TR-Fuzz: A syntax valid tool for fuzzing C compilers,","2024,","Abstract: Compilers play a critical role in current software construction. However, the vulnerabilities or bugs within the compiler can pose significant challenges to ensuring the security of the resultant software. In recent years, many compilers have made use of testing techniques to address and mitigate such concerns. Fuzzing is widely used among these techniques to detect software bugs. However, when fuzzing compilers, there are still shortcomings in terms of the diversity and validity of test cases. This paper introduces TR-Fuzz, a fuzzing tool specifically designed for C compilers based on Transformer. Leveraging position embedding and multi-head attention mechanisms, TR-Fuzz establishes relationships among data, facilitating the generation of well-formed C programs for compiler testing. In addition, we use different generation strategies in the process of program generation to improve the performance of TR-Fuzz. We validate the effectiveness of TR-Fuzz through the comparison with existing fuzzing tools for C compilers. The experimental results show that TR-Fuzz increases the pass rate of the generated C programs by an average of about 12% and improves the coverage of programs under test compared with the existing tools. Benefiting from the improved pass rate and coverage, we found five bugs in GCC-9.
Keywords: Compiler testing; C programs; Software vulnerability; Fuzzing; Test cases",ScienceDirect,
435,"Experimental characterization of a Madeira Island basalt traditionally applied in a regional decorative mortar,","2017,","Abstract: This study aims to understand the relationship between local materials and building techniques by characterizing a Madeira Island's basalt currently used as an aggregate in a regional mortar's coating technique named brita lavada. Laboratory tests have been carried out to characterize the basalt, extracted from a stone quarry, regarding porosity, density and mechanical strength. Results attained showed high density, compressive and flexural strength, as well as lower water absorption in comparison to other stones. Therefore, the trials justify the regional use of this basalt as an aggregate material; its characteristics justify the durability of the brita lavada coating technique, showing a good example of adequacy of an eco-efficient application of a local material.
Keywords: Madeira Island; Stone; Basalt; Characterization; Eco-efficiency
",ScienceDirect,
